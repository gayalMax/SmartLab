{"version":3,"sources":["app/components/AdminPages/PageNotFound/PageNotFound.styles.js","app/components/AdminPages/PageNotFound/PageNotFound.jsx","app/components/AdminPages/ViewUsers/ViewUsers.styles.js","app/components/Common/ProgressOverlay.jsx","app/components/Common/SuccessErrorAlert.jsx","app/components/Common/TableIcons.jsx","app/components/Common/AdvancedTable.jsx","app/helpers/helpers.js","app/components/AdminPages/ViewUsers/ViewUsers.presenter.jsx","app/redux/actions/serverConstants.js","app/redux/actions/AdminAdministration/adminAdministrationSyncPermissions.js","app/redux/actionTypes.js","app/redux/actions/AdminAdministration/adminAdministrationCreateRole.js","app/redux/actions/AdminAdministration/adminAdministrationSyncRoles.js","app/redux/actions/AdminAdministration/adminAdministrationDeleteRole.js","app/redux/actions/AdminAdministration/adminAdministrationSyncUsers.js","app/redux/actions/AdminAdministration/adminAdministrationCreateSupervisor.js","app/redux/actions/AdminAdministration/adminAdministrationSyncSupervisors.js","app/redux/actions/AdminAdministration/adminAdministrationDeleteSupervisor.js","app/components/AdminPages/ViewUsers/ViewUsers.jsx","app/components/AdminPages/Dashboard/Dashboard.styles.js","app/components/AdminPages/Dashboard/Dashboard.jsx","app/redux/actions/AdminRegistration/adminRegistrationSyncRoles.js","app/redux/actions/AdminRegistration/adminRegistrationSyncTokens.js","app/redux/actions/AdminRegistration/adminRegistrationInvite.js","app/redux/actions/AdminRegistration/adminRegistrationRetract.js","app/components/AdminPages/InviteUsers/InviteUsers.styles.js","app/components/AdminPages/InviteUsers/EmailTextBox/EmailTextBox.styles.js","app/components/AdminPages/InviteUsers/EmailTextBox/EmailTextBox.presenter.jsx","app/components/AdminPages/InviteUsers/EmailTextBox/EmailTextBox.jsx","app/components/AdminPages/InviteUsers/InviteUsers.presenter.jsx","app/components/AdminPages/InviteUsers/InviteUsers.events.js","app/components/AdminPages/InviteUsers/InviteUsers.jsx","app/components/AdminPages/CreateLabs/CreateLabs.styles.js","app/components/Common/ImageUpload.jsx","app/components/AdminPages/CreateLabs/CreateLabs.presenter.jsx","app/redux/actions/AdminLabManagement/adminLabManagementCreateLab.js","app/redux/actions/AdminLabManagement/adminLabManagementSyncLabs.js","app/redux/actions/AdminLabManagement/adminLabAssignStaff.js","app/redux/actions/AdminLabManagement/adminLabManagementSyncInventoryUsers.js","app/redux/actions/AdminLabManagement/adminLabUnAssignStaff.js","app/components/AdminPages/CreateLabs/CreateLabs.jsx","app/components/AdminPages/RetractInvitations/RetractInvitations.styles.js","app/components/AdminPages/RetractInvitations/RetractInvitations.presenter.jsx","app/components/AdminPages/RetractInvitations/RetractInvitations.jsx","app/components/AdminPages/CreateRoles/CreateRoles.styles.js","app/components/AdminPages/CreateRoles/CreateRoles.presenter.jsx","app/components/AdminPages/CreateRoles/CreateRoles.jsx","app/components/AdminPages/DeleteRoles/DeleteRoles.styles.js","app/components/AdminPages/DeleteRoles/DeleteRoles.presenter.jsx","app/components/AdminPages/DeleteRoles/DeleteRoles.jsx","app/components/AdminPages/CreateItemsets/CreateItemsets.styles.js","app/components/AdminPages/CreateItemsets/CreateItemsets.presenter.jsx","app/redux/actions/AdminItemManagement/adminItemManagementCreateItemset.js","app/redux/actions/AdminItemManagement/AdminItemManagementSyncItemsets.js","app/redux/actions/AdminItemManagement/adminItemManagementCreateItem.js","app/redux/actions/AdminItemManagement/adminItemMangementSyncItems.js","app/redux/actions/AdminItemManagement/adminItemManagementSyncLentItems.js","app/redux/actions/AdminItemManagement/adminItemManagementSyncItemRequests.js","app/redux/actions/AdminItemManagement/adminItemManagementBorrowItem.js","app/components/AdminPages/CreateItemsets/CreateItemsets.jsx","app/components/AdminPages/ViewItemSets/ViewItemSets.styles.js","app/components/AdminPages/ViewItemSets/ViewItemSets.presenter.jsx","app/components/AdminPages/ViewItemSets/ViewItemSets.jsx","app/components/AdminPages/ViewItems/ViewItems.styles.js","app/components/AdminPages/ViewItems/ViewItems.presenter.jsx","app/components/AdminPages/ViewItems/ViewItems.jsx","app/components/AdminPages/AssignStaff/AssignStaff.styles.js","app/components/AdminPages/AssignStaff/AssignStaff.presenter.jsx","app/redux/actions/Socket/socket.js","app/components/AdminPages/AssignStaff/AssignStaff.jsx","app/components/AdminPages/CreateItems/CreateItems.styles.js","app/components/Common/RealTimeReader.jsx","app/components/AdminPages/CreateItems/CreateItems.presenter.jsx","app/components/AdminPages/CreateItems/CreateItems.jsx","app/components/AdminPages/LendItems/LendItems.styles.js","app/components/AdminPages/LendItems/LendItems.presenter.jsx","app/components/AdminPages/LendItems/LendItems.jsx","app/components/AdminPages/ViewTemporaryItems/ViewTemporaryItems.styles.js","app/components/AdminPages/ViewTemporaryItems/ViewTemporaryItems.presenter.jsx","app/components/AdminPages/ViewTemporaryItems/ViewTemporaryItems.jsx","app/redux/actions/AuthActions/authSignInAction.js","app/redux/actions/AuthActions/authSignUpAction.js","app/redux/actions/AuthActions/authSignOutAction.js","app/redux/actions/AuthActions/authRequestInvitationAction.js","app/redux/actions/AuthActions/authInvitationRedirectedAction.js","app/components/AdminPanel/Layout/Header/Header.entries.js","app/components/AdminPanel/Layout/Header/Header.presenter.jsx","app/components/AdminPanel/Layout/Header/Header.styles.js","app/components/AdminPanel/Layout/Header/Header.events.js","app/components/AdminPanel/Layout/Header/Header.jsx","app/components/AdminPanel/Layout/Footer/Footer.jsx","app/components/AdminPanel/Layout/Navigator/Navigator.styles.js","app/components/AdminPanel/Layout/Navigator/Navigator.entries.jsx","app/components/AdminPanel/Layout/Navigator/NavigatorItem.jsx","app/components/AdminPanel/Layout/Navigator/Navigator.jsx","app/components/AdminPages/ViewLabs/ViewLabs.styles.js","app/components/AdminPages/ViewLabs/ViewLabs.presenter.jsx","app/components/AdminPages/ViewLabs/ViewLabs.jsx","app/components/AdminPages/CreateSupervisors/CreateSupervisors.styles.js","app/components/AdminPages/CreateSupervisors/CreateSupervisors.presenter.jsx","app/components/AdminPages/CreateSupervisors/CreateSupervisors.jsx","app/components/AdminPages/ViewSupervisors/ViewSupervisors.styles.js","app/components/AdminPages/ViewSupervisors/ViewSupervisors.presenter.jsx","app/components/AdminPages/ViewSupervisors/ViewSupervisors.jsx","app/components/AdminPages/GenerateBarcode/GenerateBarcode.styles.js","app/components/AdminPages/GenerateBarcode/GenerateBarcode.jsx","app/components/AdminPanel/AdminRouter.jsx","app/components/AdminPanel/AdminPanel.jsx","app/components/AdminPanel/AdminPanel.styles.js","app/components/SignInScreen/SignInScreen.styles.jsx","app/components/SignInScreen/SignInScreen.presenter.jsx","app/components/SignInScreen/SignInScreen.jsx","app/components/SignUpScreen/SignUpScreen.styles.jsx","app/components/SignUpScreen/SignUpScreen.helpers.jsx","app/components/SignUpScreen/SignUpScreen.presenter.jsx","app/components/SignUpScreen/SignUpScreen.jsx","app/components/Index/modules/components/Typography.jsx","app/components/Index/modules/views/AppFooter.jsx","app/components/Index/modules/components/Button.jsx","app/components/Index/modules/views/ProductHeroLayout.jsx","app/components/Index/modules/views/ProductHero.jsx","app/components/Index/modules/views/ProductValues.jsx","app/components/Index/modules/views/ProductHowItWorks.jsx","app/components/Index/modules/views/ProductSmokingHero.jsx","app/components/Index/modules/components/AppBar.jsx","app/components/Index/modules/components/Toolbar.jsx","app/components/Index/modules/views/AppAppBar.jsx","app/components/Index/Home.jsx","app/components/SupervisorView/SupervisorView.styles.js","app/components/SupervisorView/SupervisorView.presenter.jsx","app/redux/actions/SupervisorItemManagement/supervisorItemManagementSyncItem.js","app/redux/actions/SupervisorItemManagement/supervisorItemManagementAcceptRequest.js","app/redux/actions/SupervisorItemManagement/supervisorItemManagementRejectRequest.js","app/components/SupervisorView/SupervisorView.jsx","app/Router.jsx","app/App.theme.jsx","app/redux/states/authState.js","app/redux/reducers/AuthReducer.js","app/redux/states/adminRegistrationState.js","app/redux/reducers/AdminRegistrationReducer.js","app/redux/states/adminAdministrationState.js","app/redux/reducers/AdminAdministrationReducer.js","app/redux/states/adminItemManagementState.js","app/redux/reducers/AdminItemManagementReducer.js","app/redux/states/adminLabManagementState.js","app/redux/reducers/AdminLabManagementReducer.js","app/redux/states/supervisorItemManagementState.js","app/redux/reducers/SupervisorItemManagementReducer.js","app/redux/states/socketState.js","app/redux/reducers/SocketReducer.js","app/redux/reducers/index.js","app/redux/states/index.js","app/storage.js","app/store.js","app/App.jsx","index.js"],"names":["styles","center","textAlign","image","maxWidth","withStyles","classes","className","src","process","alt","root","margin","overflow","title","fontSize","fontWeight","wrapper","padding","ProgressOverlay","visible","children","Backdrop","backdrop","open","CircularProgress","color","defaultProps","theme","zIndex","drawer","SuccessErrorAlert","error","success","React","useState","successShow","setSuccessShow","errorShow","setErrorShow","useEffect","successCloseButton","IconButton","aria-label","size","onClick","errorCloseButton","Grid","item","Collapse","in","Box","pb","Alert","severity","action","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","AdvancedTable","filtering","grouping","other","components","Container","Paper","elevation","icons","options","exportButton","search","capitalizeFirstLetter","string","length","charAt","toUpperCase","slice","formatPermission","permission","split","map","v","toLowerCase","join","ViewUsersPresenter","users","loading","onRefresh","AppBar","position","Toolbar","container","spacing","alignItems","xs","Tooltip","direction","px","columns","field","type","sorting","render","row","Chip","variant","avatar","Avatar","role","label","data","id","firstName","lastName","email","Role","name","server","SERVER","adminAdministrationSyncPermissionsFailure","payload","responseSchema","yup","shape","permissions","of","required","adminAdministrationCreateRoleSuccess","adminAdministrationCreateRoleFailure","adminAdministrationSyncRolesFailure","roles","RolePermissions","adminAdministrationSyncRoles","token","dispatch","onError","onSuccess","a","validateSync","err","message","axios","get","headers","response","adminAdministrationDeleteRoleSuccess","adminAdministrationDeleteRoleFailure","adminAdministrationSyncUsersFailure","roleId","adminAdministrationSyncUsers","adminAdministrationCreateSupervisorSuccess","adminAdministrationCreateSupervisorFailure","adminAdministrationSyncSupervisorsFailure","supervisors","adminAdministrationSyncSupervisors","adminAdministrationDeleteSupervisorSuccess","adminAdministrationDeleteSupervisorFailure","ViewUsers","useDispatch","useSelector","state","adminAdministration","auth","usersSyncLoading","usersSyncSuccess","usersSyncError","alignContent","adminRegistrationSyncRolesFailure","adminRegistrationSyncRoles","adminRegistrationSyncTokensFailure","tokens","valid","updatedAt","adminRegistrationSyncTokens","validatedData","forEach","t","adminRegistrationInviteSuccess","adminRegistrationInviteFailure","adminRegistrationRetractSuccess","adminRegistrationRetractFailure","chip","EmailTextBoxPresenter","emails","onChange","setOpen","closeDialog","TextField","multiline","rows","placeholder","fullWidth","py","key","pt","Hidden","xsUp","Button","Dialog","onClose","scroll","DialogTitle","Divider","List","ListItem","button","ListItemAvatar","ListItemText","primary","DialogActions","emailRegex","EmailTextBox","setEmails","textBoxErrorMessage","uEmails","Set","has","add","event","extractedEmails","target","value","match","InviteUsersPresenter","handleEvent","FormControl","formControl","InputLabel","Select","labelId","defaultValue","MenuItem","InviteUsers","adminRegistration","rolesSyncLoading","rolesSyncError","rolesSyncSuccess","inviteLoading","inviteError","inviteSuccess","formState","setFormState","refreshRoles","onSubmit","post","status","Error","adminRegistrationInvite","emailsOnChange","roleOnChange","marginBottom","palette","window","sourceBg","windowBorder","tabIcon","inactiveTabIcon","menuIcons","link","inProgress","complete","textDark","textLight","fonts","default","url","active","ImageUpload","sources","setError","setImage","uploadedImage","publicId","uploadWidget","cloudinary","createUploadWidget","cloudName","uploadPreset","multiple","result","info","public_id","showWidget","startIcon","Typography","width","style","borderRadius","CreateLabsPresenter","validationSchema","mb","initialValues","subTitle","submitForm","isSubmitting","setFieldValue","component","disabled","adminAdministrationCreateLabSuccess","adminAdministrationCreateLabFailure","adminLabManagementSyncLabsFailure","labs","subtitle","nullable","createdAt","Users","adminLabManagementSyncLabs","adminLabManagementAssignStaffSuccess","adminLabManagementAssignStaffFailure","adminLabManagementSyncManagersFailure","managers","adminLabManagementSyncManagers","inventoryManagers","adminLabManagementUnassignStaffSuccess","adminLabManagementUnassignStaffFailure","CreateLabs","adminLabManagement","labCreationLoading","labCreationError","labCreationSuccess","schema","values","setSubmitting","adminLabManagementCreateLab","RetractInviationsPresenter","registrationTokens","onRetract","selectedEmail","setSelectedEmail","handleDialogClose","searchable","toString","moment","fromNow","aria-labelledby","aria-describedby","DialogContent","DialogContentText","autoFocus","RetractInvitations","tokenSyncLoading","tokenSyncError","tokenSyncSuccess","retractLoading","retractError","retractSuccess","delete","adminRegistrationRetract","marginTop","marginLeft","paddingRight","CreateRolesPresenter","staffPermissions","filter","errors","touched","FormLabel","FormGroup","sm","md","FormControlLabel","control","Checkbox","FormHelperText","CreateRoles","permissionsSyncLoading","permissionsSyncSuccess","permissionsSyncError","roleCreateLoading","roleCreateSuccess","roleCreateError","adminAdministrationSyncPermissions","min","roleName","adminAdministrationCreateRole","DeleteRolesPresenter","onDelete","selectedRole","setSelectedRole","actions","icon","tooltip","DeleteRoles","roleDeleteError","roleDeleteSuccess","roleDeleteLoading","adminAdministrationDeleteRole","gridList","flexWrap","CreateItemSetsPresenter","attributes","editable","pl","arrayHelpers","attribute","index","GridList","cols","cellHeight","GridListTile","Switch","remove","push","adminItemManagementCreateItemsetSuccess","adminItemManagementCreateItemsetFailure","adminItemManagementCreateItemset","AdminItemManagementSyncItemSetsFailure","Itemsets","Attributes","AdminItemManagementSyncItemSets","itemsets","adminItemManagementCreateItemSuccess","adminItemManagementCreateItemFailure","adminItemManagementCreateItem","serialNumber","itemSetId","labId","AdminItemManagementSyncItemsFailure","items","ItemSet","Lab","ItemAttributes","AdminItemManagementSyncItems","AdminItemManagementSyncLentItemsFailure","lentItems","requests","itemId","studentId","dueTime","borrowedTime","Item","AdminItemManagementSyncLentItems","lab","labData","request","AdminItemManagementSyncItemRequestsFailure","AdminItemManagementSyncItemRequests","userId","itemRequests","successGetLabs","Promise","all","entry","AdminItemManagementBorrowItemSuccess","AdminItemManagementBorrowItemFailure","AdminItemManagementBorrowItem","requestId","endPoint","CreateItemsets","adminItemManagement","createItemsetError","createItemsetLoading","createItemsetSuccess","when","is","then","ViewItemSetsPresenter","itemSets","setAttributes","itemset","onExited","attrib","secondary","ViewItemSets","syncedItemsets","itemSetsSyncLoading","itemSetsSyncSuccess","itemSetsSyncError","adminItemManagementSyncItemsets","ViewItemsPresenter","cellStyle","paddingLeft","ViewItems","syncedItems","itemsSyncLoading","itemsSyncSuccess","itemsSyncError","adminItemManagementSyncItems","cardViewWrapper","emptyGrid","height","AssignStaffPresenter","successAssign","onAssigned","onUnassigned","openUnassigned","setOpenUnassigned","openAssigned","setopenAssigned","selectedLab","setSelectedLab","selectedLabManagers","user","availableManagers","manager","rowData","actionsColumnIndex","Object","p","ListItemSecondaryAction","Id","socket","AssignStaff","labsSyncLoading","labsSyncSuccess","labsSyncError","managersSyncLoading","managersSyncSuccess","managersSyncError","labAssignLoading","labAssignError","labAssignSuccess","labUnAssignLoading","labUnAssignError","labUnAssignSuccess","adminLabManagementSyncInventoryUsers","managerId","adminLabAssignStaff","adminLabManagementUnassignStaff","select","minWidth","socketStartOnDeviceMessage","socketStartOnDeviceConnect","socketStartOnDeviceDisconnect","RealTimeReader","lastEvent","showOverlay","handleClose","disconnect","io","query","client","timestamp","on","socketStart","justify","barcode","CreateItemsPresenter","code","itemsetAttribute","SelectFormik","CreateItems","createItemError","createItemLoading","createItemSuccess","filteredAttributes","itemValues","table","LendItemsPresenter","addLentItem","returnLentItem","setRequest","dateLabel","time","requestStatus","content","User","RequestItems","Supervisor","supervisor","borrowedDate","dueDate","returnedDate","LendItems","syncedItemRequests","itemRequestsSyncloading","itemRequestsSyncSuccess","itemRequestsSyncError","itemBorrowLoading","itemBorrowSuccess","itemBorrowFailure","ViewTemporaryItemsPresenter","ViewTemporaryItems","syncedLentItems","lentItemsSyncLoading","lentItemsSyncSuccess","lentItemsSyncError","authSignInFailure","authSignUpFailure","authSignOut","authRequestInvitationFailure","authInvitationRedirected","entries","path","secondaryBar","paddingTop","paddingBottom","menuButton","backgroundColor","headerState","smUp","text","href","username","letter","anchorEl","anchor","keepMounted","Boolean","ListItemIcon","withRouter","onDrawerToggle","location","headerEntry","find","pathname","startsWith","headerText","setAnchorEl","userLetter","substring","userName","menuOpen","currentTarget","menuClose","signOut","Footer","categoryHeader","categoryHeaderPrimary","common","white","itemCategory","boxShadow","firebase","itemActiveItem","itemPrimary","itemIcon","marginRight","divider","resizeMode","route","NavigatorItem","childId","isActive","Link","to","clsx","staticContext","hasCommonPermissions","allowed","includes","currentPagePerms","e","c","Drawer","disablePadding","Fragment","ViewLabsPresenter","labManagers","setLabManagers","ViewLabs","CreateSupervisorsPresenter","CreateSupervisors","supervisorCreateLoading","supervisorCreateError","supervisorCreateSuccess","adminAdministrationCreateSupervisor","ViewSupervisorsPresenter","ViewSupervisors","supervisorsSyncLoading","supervisorsSyncSuccess","supervisorsSyncError","supervisorDeleteLoading","supervisorDeleteSuccess","supervisorDeleteError","deleteSupervisor","adminAdministrationDeleteSupervisor","BarcodeComponent","this","Component","getNewBarcode","pad","digits","bc","Math","floor","random","setBarcode","componentRef","useRef","navigator","clipboard","writeText","exportComponentAsPDF","exportComponentAsJPEG","AdminRouter","useRouteMatch","exact","display","minHeight","breakpoints","up","flexShrink","app","flex","flexDirection","main","background","backgroundRepeat","backgroundAttachment","backgroundPosition","backgroundSize","mobileOpen","setMobileOpen","handleDrawerToggle","CssBaseline","implementation","PaperProps","xsDown","textField","paragraph","warning","buttonGrid","SignInScreenPresenter","password","Card","mx","CardContent","InputProps","startAdornment","InputAdornment","SignInScreen","signIn","authSignIn","informationTextLines","signUpPageState","invitationOwner","requestingInvitation","retypePassword","readOnly","oneOf","history","signUp","invitationActivated","registrationToken","useParams","invitationToken","authSignUp","variantMapping","h1","h2","h3","h4","h5","h6","subtitle1","marked","capitalize","markedH2Center","markedH3Center","markedH4Center","markedH6Left","Copyright","Date","getFullYear","useStyles","makeStyles","iconsWrapper","justifyContent","dark","list","listStyle","listItem","AppFooter","gutterBottom","typography","fontWeightMedium","fontFamily","fontFamilySecondary","pxToRem","sizeSmall","sizeLarge","maxHeight","left","right","top","bottom","arrowDown","backgroundClassName","backgroundImage","more","linkData","align","light","curvyLines","pointerEvents","number","bottomText","opacity","border","toolbarStyles","toolbar","leftLinkActive","rightLink","linkSecondary","underline","Index","ListTile","TabPanel","hidden","SupervisorViewPresenter","onAccept","setValue","declineOpen","setDeclineOpen","acceptOpen","setAcceptOpen","closeDeclineDialog","closeAcceptDialog","undefined","card","Tabs","newValue","Tab","reason","ri","my","declineReason","SupervisorItemManagementSyncItemSuccess","SupervisorItemManagementSyncItemFailure","SupervisorItemManagementSyncItem","requestToken","SupervisorItemManagementAcceptRequestSuccess","SupervisorItemManagementAcceptRequestFailure","SupervisorItemManagementRejectRequestSuccess","SupervisorItemManagementRejectRequestFailure","SupervisorView","supervisorItemManagement","syncedItem","acceptRequestLoading","acceptRequestSuccess","acceptRequestError","rejectRequestLoading","rejectRequestSuccess","rejectRequestError","supervisorItemManagementSyncItem","acceptValue","acceptDeclineReason","supervisorItemManagementAcceptRequest","rejectValue","supervisorItemManagementRejectRequest","PrivateRoute","rest","isLoggedIn","params","from","DirectRedirect","App","Home","muiTheme","createMuiTheme","letterSpacing","MuiTab","disableRipple","mixins","overrides","MuiDrawer","paper","MuiButton","textTransform","contained","MuiTabs","indicator","borderTopLeftRadius","borderTopRightRadius","MuiIconButton","MuiTooltip","MuiDivider","MuiListItemText","MuiListItemIcon","MuiAvatar","initialState","authReducer","produce","draft","adminRegistrationReducer","adminAdministrationReducer","adminItemManagementReducer","adminLabManagementReducer","supervisorItemManagementReducer","connectionMessage","connected","socketReducer","combineReducers","authInitialState","StorePersistance","currentState","persistedState","createDraft","slicedState","storeToDraft","finishDraft","mergedState","loadToDraft","slicerFn","config","slicer","merge","storageMiddleware","persistState","middlewares","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","allReducers","compose","ThemeProvider","Router","createElement","ReactDOM","document","getElementById","registerServiceWorker","unregister"],"mappings":"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","file":"static/js/main.fdf2a9ec.chunk.js","sourcesContent":["const styles = () => ({\n  center: {\n    textAlign: 'center'\n  },\n  image: {\n    maxWidth: '100%'\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\n\nimport styles from './PageNotFound.styles';\n\nfunction PageNotFound({ classes }) {\n  return (\n    <div className={classes.center}>\n      <img className={classes.image} src={`${process.env.PUBLIC_URL}/images/404.png`} alt=\"404\" />\n    </div>\n  );\n}\n\nPageNotFound.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(PageNotFound);\n","const styles = () => ({\n  root: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  wrapper: {\n    padding: '16px'\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Backdrop, CircularProgress, withStyles } from '@material-ui/core';\n\nconst style = theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  }\n});\n\nfunction ProgressOverlay({ classes, visible, children }) {\n  return (\n    <>\n      {children}\n      <Backdrop className={classes.backdrop} open={visible}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </>\n  );\n}\n\nProgressOverlay.propTypes = {\n  classes: PropTypes.object.isRequired,\n  visible: PropTypes.bool,\n  children: PropTypes.node.isRequired\n};\n\nProgressOverlay.defaultProps = {\n  visible: false\n};\n\nexport default withStyles(style)(ProgressOverlay);\n","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { Grid, Box, IconButton, Collapse } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nconst SuccessErrorAlert = ({ error, success }) => {\n  const [successShow, setSuccessShow] = React.useState(false);\n  const [errorShow, setErrorShow] = React.useState(false);\n\n  useEffect(() => {\n    setSuccessShow(success !== null);\n    setErrorShow(error !== null);\n  }, [error, success, setErrorShow, setSuccessShow]);\n\n  const successCloseButton = (\n    <IconButton\n      aria-label=\"close\"\n      color=\"inherit\"\n      size=\"small\"\n      onClick={() => {\n        setSuccessShow(false);\n      }}\n    >\n      <AiOutlineClose fontSize=\"inherit\" />\n    </IconButton>\n  );\n\n  const errorCloseButton = (\n    <IconButton\n      aria-label=\"close\"\n      color=\"inherit\"\n      size=\"small\"\n      onClick={() => {\n        setErrorShow(false);\n      }}\n    >\n      <AiOutlineClose fontSize=\"inherit\" />\n    </IconButton>\n  );\n\n  return (\n    <>\n      <Grid item>\n        <Collapse in={errorShow}>\n          <Box pb={2}>\n            <Alert severity=\"error\" action={errorCloseButton}>\n              {error}\n            </Alert>\n          </Box>\n        </Collapse>\n      </Grid>\n      <Grid item>\n        <Collapse in={successShow}>\n          <Box pb={2}>\n            <Alert action={successCloseButton}>{success}</Alert>\n          </Box>\n        </Collapse>\n      </Grid>\n    </>\n  );\n};\n\nSuccessErrorAlert.defaultProps = {\n  error: null,\n  success: null\n};\n\nSuccessErrorAlert.propTypes = {\n  error: PropTypes.string,\n  success: PropTypes.string\n};\n\nexport default SuccessErrorAlert;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { forwardRef } from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nexport default tableIcons;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Paper } from '@material-ui/core';\nimport MaterialTable from 'material-table';\n\nimport tableIcons from './TableIcons';\n\nconst AdvancedTable = ({ filtering, grouping, ...other }) => {\n  return (\n    <div>\n      <MaterialTable\n        components={{\n          Container: props => <Paper {...props} elevation={0} />\n        }}\n        icons={tableIcons}\n        title=\"\"\n        options={{\n          exportButton: true,\n          search: true,\n          filtering,\n          grouping\n        }}\n        {...other}\n      />\n    </div>\n  );\n};\n\nAdvancedTable.defaultProps = {\n  filtering: false,\n  grouping: false\n};\n\nAdvancedTable.propTypes = {\n  filtering: PropTypes.bool,\n  grouping: PropTypes.bool\n};\n\nexport default AdvancedTable;\n","/**\n * Capitalize first letter\n * @param {string} string String to capitalize\n */\nexport function capitalizeFirstLetter(string) {\n  if (!string || string.length === 0) return string;\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function formatPermission(permission) {\n  return permission\n    .split('_')\n    .map(v => capitalizeFirstLetter(v.toLowerCase()))\n    .join(' ');\n}\n\n/**\n * Slices a state slice by its action. If the action is the specified\n * one, normal slice. Otherwise error and success is reset to default.\n * @param {Object} sliceData State slice\n * @param {string} sliceData.action Last emitted action\n * @param {string} sliceData.error Last emitted error\n * @param {boolean} sliceData.success Last emitted success\n * @param {*} parentAction Action to slice from\n * @param {Object} state Complete state object\n * @param {Object} state.auth Auth state object\n * @param {string} state.auth.token Token\n */\nexport function sliceStateByAction(sliceData, parentAction, state) {\n  if (sliceData.action !== parentAction) {\n    return { ...sliceData, error: null, success: false, token: state.auth.token };\n  }\n  return { ...sliceData, token: state.auth.token };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AiOutlineSync } from 'react-icons/ai';\nimport {\n  Paper,\n  Grid,\n  withStyles,\n  Toolbar,\n  AppBar,\n  Box,\n  IconButton,\n  Tooltip,\n  Chip,\n  Avatar\n} from '@material-ui/core';\n\nimport styles from './ViewUsers.styles';\nimport ProgressOverlay from '../../Common/ProgressOverlay';\nimport SuccessErrorAlert from '../../Common/SuccessErrorAlert';\nimport AdvancedTable from '../../Common/AdvancedTable';\nimport { capitalizeFirstLetter } from '../../../helpers/helpers';\n\nfunction ViewUsersPresenter({ classes, users, error, loading, onRefresh }) {\n  return (\n    <ProgressOverlay visible={loading}>\n      <Paper className={classes.root}>\n        <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n          <Toolbar>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs>\n                <p className={classes.title}>View Users</p>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Refresh Tokens List\">\n                <IconButton onClick={onRefresh}>\n                  <AiOutlineSync />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Grid container direction=\"column\" alignItems=\"stretch\" className={classes.wrapper}>\n          <SuccessErrorAlert success={null} error={error} />\n\n          <Grid item>\n            <Box px={2} pb={2}>\n              Below the list of users in the system are given. Invite Users to add users to the\n              syetem.\n            </Box>\n          </Grid>\n\n          <Grid item>\n            <AdvancedTable\n              columns={[\n                { title: 'Name', field: 'name' },\n                { title: 'Email', field: 'email' },\n                {\n                  title: 'Role',\n                  field: 'role',\n                  type: 'numeric',\n                  sorting: false,\n                  render: row => (\n                    <Chip\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      avatar={<Avatar>{row.role[0]}</Avatar>}\n                      label={row.role}\n                    />\n                  )\n                }\n              ]}\n              data={users.map(({ id, firstName, lastName, email, Role }) => ({\n                id,\n                name: `${firstName} ${lastName}`,\n                email,\n                role: capitalizeFirstLetter(Role.name)\n              }))}\n              title=\"\"\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </ProgressOverlay>\n  );\n}\n\nViewUsersPresenter.defaultProps = {\n  error: null\n};\n\nViewUsersPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  users: PropTypes.array.isRequired,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  onRefresh: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ViewUsersPresenter);\n","const developmentMode = process.env.NODE_ENV === 'development';\n\n// Change server path depending on the mode (dev/prod)\nlet server = 'https://open-inventory-system.herokuapp.com';\nif (developmentMode) server = 'http://localhost:8000';\n\nexport const SERVER = server;\nexport const SERVER_SIGN_IN = '/api/login';\nexport const SERVER_REQUEST_INVITATION = '/api/registration/verify';\nexport const SERVER_SIGN_UP = '/api/registration/register';\nexport const SERVER_GET_ROLES = '/api/registrar/roles';\nexport const SERVER_GET_ROLES_ALL = '/api/roles/list';\nexport const SERVER_GET_USERS_ALL = '/api/users/list';\nexport const SERVER_GET_LABS_ALL = '/api/labs/list';\nexport const SERVER_GET_PERMISSIONS = '/api/permissions/list';\nexport const SERVER_POST_TOKEN = '/api/registrar/token';\nexport const SERVER_CREATE_ROLE = '/api/roles/create';\nexport const SERVER_GET_TOKENS = '/api/registrar/token';\nexport const SERVER_DELETE_TOKENS = '/api/registrar/token';\nexport const SERVER_DELETE_ROLE = '/api/roles';\nexport const SERVER_CREATE_LAB = '/api/labs/create';\nexport const SERVER_SYNC_LAB = '/api/labs/list';\nexport const SERVER_GET_USER_LABS = '/api/users/assignedlabs';\nexport const SERVER_CREATE_ITEMSET = '/api/itemsets/create';\nexport const SERVER_GET_ITEMSETS_ALL = '/api/itemsets/list';\nexport const SERVER_CREATE_ITEM = '/api/items/create';\nexport const SERVER_GET_ITEMS_ALL = '/api/items/list';\nexport const SERVER_SYNC_LENTITEMS_TEMP = '/api/temporaryrequests/list';\nexport const SERVER_SYNC_ITEM_REQUESTS_ALL = '/api/requestitems/lab/list';\nexport const SERVER_LEND_ITEM = '/api/requestitems/lend';\nexport const SERVER_RETURN_ITEM = '/api/requestitems/return';\nexport const SERVERE_ASSIGN_STAFF = '/api/labs/assign';\nexport const SERVERE_UNASSIGN_STAFF = '/api/labs/unassign';\nexport const SERVER_GET_MANAGERS_ALL = '/api/users/list/inventorymanagers';\nexport const SERVER_CREATE_SUPERVISOR = '/api/supervisors';\nexport const SERVER_GET_SUPERVISORS = '/api/supervisors';\nexport const SERVER_DELETE_SUPERVISOR = '/api/supervisors';\nexport const SERVER_GET_REQUEST_ITEM = '/api/requestitems';\nexport const SERVER_ACCEPT_REQUEST_ITEM = '/api/requestitems/review';\n\nexport const ROLE_STUDENT = 'Student';\n","import axios from 'axios';\nimport * as yup from 'yup';\n\nimport {\n  ADMIN_ADMINISTRATION_SYNC_PERMISSIONS_BEGIN,\n  ADMIN_ADMINISTRATION_SYNC_PERMISSIONS_SUCCESS,\n  ADMIN_ADMINISTRATION_SYNC_PERMISSIONS_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVER_GET_PERMISSIONS } from '../serverConstants';\n\n/**\n * Action creator for beginning of requesting permissions\n * @param {string} invitationToken Invitation token key\n * @returns Redux action\n */\nconst adminAdministrationSyncPermissionsBegin = () => ({\n  type: ADMIN_ADMINISTRATION_SYNC_PERMISSIONS_BEGIN\n});\n\n/**\n * Action creator for end of requesting permissions.\n * This is fired when API call ends in a success.\n * @param {Object} response Response data of the call\n * @param {string[]} response.permissions Permissions list\n * @returns Redux action\n */\nconst adminAdministrationSyncPermissionsSuccess = ({ permissions }) => ({\n  type: ADMIN_ADMINISTRATION_SYNC_PERMISSIONS_SUCCESS,\n  payload: permissions\n});\n\n/**\n * Action creator for end of requesting permissions.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst adminAdministrationSyncPermissionsFailure = error => ({\n  type: ADMIN_ADMINISTRATION_SYNC_PERMISSIONS_FAILURE,\n  payload: { error }\n});\n\n/**\n * User schema used to validate response sent by the API\n */\nconst responseSchema = yup.object().shape({\n  permissions: yup\n    .array()\n    .of(yup.string())\n    .required()\n});\n\n/**\n * Request permissions thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for request permission API call\n */\nexport default function adminAdministrationSyncPermissions(token) {\n  return async dispatch => {\n    dispatch(adminAdministrationSyncPermissionsBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(adminAdministrationSyncPermissionsFailure(message));\n    }\n\n    function onSuccess(success) {\n      try {\n        const permissions = responseSchema.validateSync(success.data);\n        dispatch(adminAdministrationSyncPermissionsSuccess({ permissions }));\n      } catch (err) {\n        dispatch(\n          adminAdministrationSyncPermissionsFailure(\n            'Server connection failed. Please check your connection.'\n          )\n        );\n      }\n    }\n\n    try {\n      // Make the get request\n      const success = await axios.get(`${SERVER}${SERVER_GET_PERMISSIONS}`, {\n        headers: { token }\n      });\n      onSuccess(success);\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","export const AUTH_SIGN_IN_BEGIN = 'SIGN_IN_BEGIN';\nexport const AUTH_SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS';\nexport const AUTH_SIGN_IN_FAILURE = 'SIGN_IN_FAILURE';\n\nexport const AUTH_SIGN_UP_BEGIN = 'AUTH_SIGN_UP_BEGIN';\nexport const AUTH_SIGN_UP_SUCCESS = 'AUTH_SIGN_UP_SUCCESS';\nexport const AUTH_SIGN_UP_FAILURE = 'AUTH_SIGN_UP_FAILURE';\n\nexport const AUTH_SIGN_OUT = 'AUTH_SIGN_OUT';\n\nexport const AUTH_REQUEST_INVITATION_BEGIN = 'AUTH_REQUEST_INVITATION_BEGIN';\nexport const AUTH_REQUEST_INVITATION_SUCCESS = 'AUTH_REQUEST_INVITATION_SUCCESS';\nexport const AUTH_REQUEST_INVITATION_FAILURE = 'AUTH_REQUEST_INVITATION_FAILURE';\n\nexport const AUTH_INVITATION_REDIRECTED = 'AUTH_INVITATION_REDIRECTED';\n\nexport const ADMIN_REGISTRATION_SYNC_ROLES_BEGIN = 'ADMIN_REGISTRATION_SYNC_ROLES_BEGIN';\nexport const ADMIN_REGISTRATION_SYNC_ROLES_SUCCESS = 'ADMIN_REGISTRATION_SYNC_ROLES_SUCCESS';\nexport const ADMIN_REGISTRATION_SYNC_ROLES_FAILURE = 'ADMIN_REGISTRATION_SYNC_ROLES_FAILURE';\n\nexport const ADMIN_REGISTRATION_SYNC_TOKENS_BEGIN = 'ADMIN_REGISTRATION_SYNC_TOKENS_BEGIN';\nexport const ADMIN_REGISTRATION_SYNC_TOKENS_SUCCESS = 'ADMIN_REGISTRATION_SYNC_TOKENS_SUCCESS';\nexport const ADMIN_REGISTRATION_SYNC_TOKENS_FAILURE = 'ADMIN_REGISTRATION_SYNC_TOKENS_FAILURE';\n\nexport const ADMIN_REGISTRATION_INVITE_BEGIN = 'ADMIN_REGISTRATION_INVITE_BEGIN';\nexport const ADMIN_REGISTRATION_INVITE_SUCCESS = 'ADMIN_REGISTRATION_INVITE_SUCCESS';\nexport const ADMIN_REGISTRATION_INVITE_FAILURE = 'ADMIN_REGISTRATION_INVITE_FAILURE';\n\nexport const ADMIN_REGISTRATION_RETRACTION_BEGIN = 'ADMIN_REGISTRATION_RETRACTION_BEGIN';\nexport const ADMIN_REGISTRATION_RETRACTION_SUCCESS = 'ADMIN_REGISTRATION_RETRACTION_SUCCESS';\nexport const ADMIN_REGISTRATION_RETRACTION_FAILURE = 'ADMIN_REGISTRATION_RETRACTION_FAILURE';\n\nexport const ADMIN_ADMINISTRATION_CREATE_ROLE = 'ADMIN_ADMINISTRATION_CREATE_ROLES';\nexport const ADMIN_ADMINISTRATION_CREATE_ROLE_BEGIN = 'ADMIN_ADMINISTRATION_CREATE_ROLES_BEGIN';\nexport const ADMIN_ADMINISTRATION_CREATE_ROLE_SUCCESS = 'ADMIN_ADMINISTRATION_CREATE_ROLES_SUCCESS';\nexport const ADMIN_ADMINISTRATION_CREATE_ROLE_FAILURE = 'ADMIN_ADMINISTRATION_CREATE_ROLES_FAILURE';\n\nexport const ADMIN_ADMINISTRATION_SYNC_PERMISSIONS_BEGIN =\n  'ADMIN_ADMINISTRATION_SYNC_PERMISSIONS_BEGIN';\nexport const ADMIN_ADMINISTRATION_SYNC_PERMISSIONS_SUCCESS =\n  'ADMIN_ADMINISTRATION_SYNC_PERMISSIONS_SUCCESS';\nexport const ADMIN_ADMINISTRATION_SYNC_PERMISSIONS_FAILURE =\n  'ADMIN_ADMINISTRATION_SYNC_PERMISSIONS_FAILURE';\n\nexport const ADMIN_ADMINISTRATION_SYNC_ROLES_BEGIN = 'ADMIN_ADMINISTRATION_SYNC_ROLES_BEGIN';\nexport const ADMIN_ADMINISTRATION_SYNC_ROLES_SUCCESS = 'ADMIN_ADMINISTRATION_SYNC_ROLES_SUCCESS';\nexport const ADMIN_ADMINISTRATION_SYNC_ROLES_FAILURE = 'ADMIN_ADMINISTRATION_SYNC_ROLES_FAILURE';\n\nexport const ADMIN_ADMINISTRATION_DELETE_ROLE = 'ADMIN_ADMINISTRATION_DELETE_ROLE';\nexport const ADMIN_ADMINISTRATION_DELETE_ROLE_BEGIN = 'ADMIN_ADMINISTRATION_DELETE_ROLE_BEGIN';\nexport const ADMIN_ADMINISTRATION_DELETE_ROLE_SUCCESS = 'ADMIN_ADMINISTRATION_DELETE_ROLE_SUCCESS';\nexport const ADMIN_ADMINISTRATION_DELETE_ROLE_FAILURE = 'ADMIN_ADMINISTRATION_DELETE_ROLE_FAILURE';\n\nexport const ADMIN_ADMINISTRATION_SYNC_USERS_BEGIN = 'ADMIN_ADMINISTRATION_SYNC_USERS_BEGIN';\nexport const ADMIN_ADMINISTRATION_SYNC_USERS_SUCCESS = 'ADMIN_ADMINISTRATION_SYNC_USERS_SUCCESS';\nexport const ADMIN_ADMINISTRATION_SYNC_USERS_FAILURE = 'ADMIN_ADMINISTRATION_SYNC_USERS_FAILURE';\n\nexport const ADMIN_LABMANAGEMENT_CREATE_LAB_BEGIN = 'ADMIN_ADMINISTRATION_CREATE_LAB_BEGIN';\nexport const ADMIN_LABMANAGEMENT_CREATE_LAB_SUCCESS = 'ADMIN_ADMINISTRATION_CREATE_LAB_SUCCESS';\nexport const ADMIN_LABMANAGEMENT_CREATE_LAB_FAILURE = 'ADMIN_ADMINISTRATION_CREATE_LAB_FAILURE';\n\nexport const ADMIN_ITEM_MANAGEMENT_CREATE_ITEMSET_BEGIN =\n  'ADMIN_ITEM_MANAGEMENT_CREATE_ITEMSET_BEGIN';\nexport const ADMIN_ITEM_MANAGEMENT_CREATE_ITEMSET_SUCCESS =\n  'ADMIN_ITEM_MANAGEMENT_CREATE_ITEMSET_SUCCESS';\nexport const ADMIN_ITEM_MANAGEMENT_CREATE_ITEMSET_FAILURE =\n  'ADMIN_ITEM_MANAGEMENT_CREATE_ITEMSET_FAILURE';\n\nexport const ADMIN_LAB_MANAGEMENT_SYNC_LABS_BEGIN = 'ADMIN_LAB_MANAGEMENT_SYNC_LABS_BEGIN';\nexport const ADMIN_LAB_MANAGEMENT_SYNC_LABS_SUCCESS = 'ADMIN_LAB_MANAGEMENT_SYNC_LABS_SUCCESS';\nexport const ADMIN_LAB_MANAGEMENT_SYNC_LABS_FAILURE = 'ADMIN_LAB_MANAGEMENT_SYNC_LABS_FAILURE';\n\nexport const ADMIN_LAB_MANAGEMENT_ASSIGN_STAFF_BEGIN = 'ADMIN_LAB_MANAGEMENT_ASSIGN_STAFF_BEGIN';\nexport const ADMIN_LAB_MANAGEMENT_ASSIGN_STAFF_SUCCESS =\n  'ADMIN_LAB_MANAGEMENT_ASSIGN_STAFF_SUCCESS';\nexport const ADMIN_LAB_MANAGEMENT_ASSIGN_STAFF_FAILURE =\n  'ADMIN_LAB_MANAGEMENT_ASSIGN_STAFF_FAILURE';\n\nexport const ADMIN_LAB_MANAGEMENT_UNASSIGN_STAFF_BEGIN =\n  'ADMIN_LAB_MANAGEMENT_UNASSIGN_STAFF_BEGIN';\nexport const ADMIN_LAB_MANAGEMENT_UNASSIGN_STAFF_SUCCESS =\n  'ADMIN_LAB_MANAGEMENT_UNASSIGN_STAFF_SUCCESS';\nexport const ADMIN_LAB_MANAGEMENT_UNASSIGN_STAFF_FAILURE =\n  'ADMIN_LAB_MANAGEMENT_UNASSIGN_STAFF_FAILURE';\n\nexport const ADMIN_LAB_MANAGEMENT_SYNC_MANAGERS_BEGIN = 'ADMIN_LAB_MANAGEMENT_SYNC_MANAGERS_BEGIN';\nexport const ADMIN_LAB_MANAGEMENT_SYNC_MANAGERS_SUCCESS =\n  'ADMIN_LAB_MANAGEMENT_SYNC_MANAGERS_SUCCESS';\nexport const ADMIN_LAB_MANAGEMENT_SYNC_MANAGERS_FAILURE =\n  'ADMIN_LAB_MANAGEMENT_SYNC_MANAGERS_FAILURE';\n\nexport const ADMIN_ITEM_MANAGEMENT_SYNC_ITEMSETS_BEGIN =\n  'ADMIN_ITEM_MANAGEMENT_SYNC_ITEMSETS_BEGIN';\nexport const ADMIN_ITEM_MANAGEMENT_SYNC_ITEMSETS_SUCCESS =\n  'ADMIN_ITEM_MANAGEMENT_SYNC_ITEMSETS_SUCCESS';\nexport const ADMIN_ITEM_MANAGEMENT_SYNC_ITEMSETS_FAILURE =\n  'ADMIN_ITEM_MANAGEMENT_SYNC_ITEMSETS_FAILURE';\n\nexport const ADMIN_ITEM_MANAGEMENT_CREATE_ITEM_BEGIN = 'ADMIN_ITEM_MANAGEMENT_CREATE_ITEM_BEGIN';\nexport const ADMIN_ITEM_MANAGEMENT_CREATE_ITEM_FAILURE =\n  'ADMIN_ITEM_MANAGEMENT_CREATE_ITEM_FAILURE';\nexport const ADMIN_ITEM_MANAGEMENT_CREATE_ITEM_SUCCESS =\n  'ADMIN_ITEM_MANAGEMENT_CREATE_ITEM_SUCCESS';\n\nexport const ADMIN_ADMINISTRATION_CREATE_SUPERVISOR_BEGIN =\n  'ADMIN_ADMINISTRATION_CREATE_SUPERVISOR_BEGIN';\nexport const ADMIN_ADMINISTRATION_CREATE_SUPERVISOR_FAILURE =\n  'ADMIN_ADMINISTRATION_CREATE_SUPERVISOR_FAILURE';\nexport const ADMIN_ADMINISTRATION_CREATE_SUPERVISOR_SUCCESS =\n  'ADMIN_ADMINISTRATION_CREATE_SUPERVISOR_SUCCESS';\n\nexport const ADMIN_ITEM_MANAGEMENT_SYNC_ITEMS_BEGIN = 'ADMIN_ITEM_MANAGEMENT_SYNC_ITEMS_BEGIN';\nexport const ADMIN_ITEM_MANAGEMENT_SYNC_ITEMS_SUCCESS = 'ADMIN_ITEM_MANAGEMENT_SYNC_ITEMS_SUCCESS';\nexport const ADMIN_ITEM_MANAGEMENT_SYNC_ITEMS_FAILURE = 'ADMIN_ITEM_MANAGEMENT_SYNC_ITEMS_FAILURE';\n\nexport const ADMIN_ITEM_MANAGEMENT_SYNC_LENT_ITEMS_BEGIN =\n  'ADMIN_ITEM_MANAGEMENT_SYNC_LENT_ITEMS_BEGIN';\nexport const ADMIN_ITEM_MANAGEMENT_SYNC_LENT_ITEMS_SUCCESS =\n  'ADMIN_ITEM_MANAGEMENT_SYNC_LENT_ITEMS_SUCCESS';\nexport const ADMIN_ITEM_MANAGEMENT_SYNC_LENT_ITEMS_FAILURE =\n  'ADMIN_ITEM_MANAGEMENT_SYNC_LENT_ITEMS_FAILURE';\n\nexport const ADMIN_ITEM_MANAGEMENT_SYNC_ITEM_REQUESTS_BEGIN =\n  'ADMIN_ITEM_MANAGEMENT_SYNC_ITEM_REQUESTS_LOADING';\nexport const ADMIN_ITEM_MANAGEMENT_SYNC_ITEM_REQUESTS_SUCCESS =\n  'ADMIN_ITEM_MANAGEMENT_SYNC_ITEM_REQUESTS_SUCCESS';\nexport const ADMIN_ITEM_MANAGEMENT_SYNC_ITEM_REQUESTS_FAILURE =\n  'ADMIN_ITEM_MANAGEMENT_SYNC_ITEM_REQUESTS_FAILURE';\n\nexport const ADMIN_ITEM_MANAGEMENT_BORROW_ITEM_BEGIN = 'ADMIN_ITEM_MANAGEMENT_BORROW_ITEM_BEGIN';\nexport const ADMIN_ITEM_MANAGEMENT_BORROW_ITEM_SUCCESS =\n  'ADMIN_ITEM_MANAGEMENT_BORROW_ITEM_SUCCESS';\nexport const ADMIN_ITEM_MANAGEMENT_BORROW_ITEM_FAILURE =\n  'ADMIN_ITEM_MANAGEMENT_BORROW_ITEM_FAILURE';\n\nexport const ADMIN_ADMINISTRATION_SYNC_SUPERVISORS_BEGIN =\n  'ADMIN_ADMINISTRATION_SYNC_SUPERVISORS_BEGIN';\nexport const ADMIN_ADMINISTRATION_SYNC_SUPERVISORS_SUCCESS =\n  'ADMIN_ADMINISTRATION_SYNC_SUPERVISORS_SUCCESS';\nexport const ADMIN_ADMINISTRATION_SYNC_SUPERVISORS_FAILURE =\n  'ADMIN_ADMINISTRATION_SYNC_SUPERVISORS_FAILURE';\n\nexport const ADMIN_ADMINISTRATION_DELETE_SUPERVISOR_BEGIN =\n  'ADMIN_ADMINISTRATION_DELETE_SUPERVISOR_BEGIN';\nexport const ADMIN_ADMINISTRATION_DELETE_SUPERVISOR_SUCCESS =\n  'ADMIN_ADMINISTRATION_DELETE_SUPERVISOR_SUCCESS';\nexport const ADMIN_ADMINISTRATION_DELETE_SUPERVISOR_FAILURE =\n  'ADMIN_ADMINISTRATION_DELETE_SUPERVISOR_FAILURE';\n\nexport const SUPERVISOR_ITEM_MANAGEMENT_SYNC_ITEM_BEGIN =\n  'SUPERVISOR_ITEM_MANAGEMENT_SYNC_ITEMSETS_BEGIN';\nexport const SUPERVISOR_ITEM_MANAGEMENT_SYNC_ITEM_SUCCESS =\n  'SUPERVISOR_ITEM_MANAGEMENT_SYNC_iTEM_SUCCESS';\nexport const SUPERVISOR_ITEM_MANAGEMENT_SYNC_ITEM_FAILURE =\n  'SUPERVISOR_ITEM_MANAGEMENT_SYNC_iTEM_FAILURE';\n\nexport const SUPERVISOR_ITEM_MANAGEMENT_ACCEPT_REQUEST_BEGIN =\n  'SUPERVISOR_ITEM_MANAGEMENT_ACCEPT_REQUEST_BEGIN';\nexport const SUPERVISOR_ITEM_MANAGEMENT_ACCEPT_REQUEST_SUCCESS =\n  'SUPERVISOR_ITEM_MANAGEMENT_ACCEPT_REQUEST_SUCCESS';\nexport const SUPERVISOR_ITEM_MANAGEMENT_ACCEPT_REQUEST_FAILURE =\n  'SUPERVISOR_ITEM_MANAGEMENT_ACCEPT_REQUEST_FAILURE';\n\nexport const SUPERVISOR_ITEM_MANAGEMENT_REJECT_REQUEST_BEGIN =\n  'SUPERVISOR_ITEM_MANAGEMENT_REJECT_REQUEST_BEGIN';\nexport const SUPERVISOR_ITEM_MANAGEMENT_REJECT_REQUEST_SUCCESS =\n  'SUPERVISOR_ITEM_MANAGEMENT_REJECT_REQUEST_SUCCESS';\nexport const SUPERVISOR_ITEM_MANAGEMENT_REJECT_REQUEST_FAILURE =\n  'SUPERVISOR_ITEM_MANAGEMENT_REJECT_REQUEST_FAILURE';\nexport const SOCKET_START_BEGIN = 'SOCKET_START_BEGIN';\nexport const SOCKET_START_ON_CONNECT = 'SOCKET_START_ON_CONNECT';\nexport const SOCKET_START_ON_DISCONNECT = 'SOCKET_START_ON_DISCONNECT';\nexport const SOCKET_START_ON_DEVICE_MESSAGE = 'SOCKET_START_ON_DEVICE_MESSAGE';\nexport const SOCKET_START_ON_DEVICE_CONNECT = 'SOCKET_START_ON_DEVICE_CONNECT';\nexport const SOCKET_START_ON_DEVICE_DISCONNECT = 'SOCKET_START_ON_DEVICE_DISCONNECT';\n","import axios from 'axios';\nimport {\n  ADMIN_ADMINISTRATION_CREATE_ROLE_BEGIN,\n  ADMIN_ADMINISTRATION_CREATE_ROLE_SUCCESS,\n  ADMIN_ADMINISTRATION_CREATE_ROLE_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVER_CREATE_ROLE } from '../serverConstants';\n\n/**\n * Action creator for beginning of creating roles\n * @returns Redux action\n */\nconst adminAdministrationCreateRoleBegin = () => ({\n  type: ADMIN_ADMINISTRATION_CREATE_ROLE_BEGIN\n});\n\n/**\n * Action creator for end of creating roles.\n * This is fired when API call ends in a success.\n * @returns Redux action\n */\nconst adminAdministrationCreateRoleSuccess = success => ({\n  type: ADMIN_ADMINISTRATION_CREATE_ROLE_SUCCESS,\n  payload: { success }\n});\n\n/**\n * Action creator for end of creating roles.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst adminAdministrationCreateRoleFailure = error => ({\n  type: ADMIN_ADMINISTRATION_CREATE_ROLE_FAILURE,\n  payload: { error }\n});\n\n/**\n * Request roles details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for user sign in API call\n */\nexport default function adminAdministrationCreateRole(token, roleName, permissions, complete) {\n  return async dispatch => {\n    dispatch(adminAdministrationCreateRoleBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(adminAdministrationCreateRoleFailure(message));\n    }\n\n    function onSuccess(success) {\n      dispatch(adminAdministrationCreateRoleSuccess(success));\n    }\n\n    try {\n      const success = await axios.post(\n        `${SERVER}${SERVER_CREATE_ROLE}`,\n        { name: roleName, permissions },\n        { headers: { token } }\n      );\n      if (success.status !== 200) {\n        throw Error('Server responded with an error');\n      }\n      onSuccess(`Role '${roleName}' created successfully.`);\n      complete();\n    } catch (error) {\n      onError(error.response);\n      complete();\n    }\n  };\n}\n","import axios from 'axios';\nimport * as yup from 'yup';\n\nimport {\n  ADMIN_ADMINISTRATION_SYNC_ROLES_BEGIN,\n  ADMIN_ADMINISTRATION_SYNC_ROLES_SUCCESS,\n  ADMIN_ADMINISTRATION_SYNC_ROLES_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVER_GET_ROLES_ALL } from '../serverConstants';\nimport { capitalizeFirstLetter } from '../../../helpers/helpers';\n\n/**\n * Action creator for beginning of requesting roles\n * @returns Redux action\n */\nconst adminAdministrationSyncRolesBegin = () => ({\n  type: ADMIN_ADMINISTRATION_SYNC_ROLES_BEGIN\n});\n\n/**\n * Action creator for end of requesting roles.\n * This is fired when API call ends in a success.\n * @param {Object} response Response data of the call\n * @param {Object[]} response.roles Roles list\n * @param {string} response.roles.id Id of the role\n * @param {string} response.roles.name Name of the role\n * @param {Object[]} response.roles.RolePermissions Permissions list of role\n * @param {string} response.roles.RolePermissions.name Name of the permission\n * @returns Redux action\n */\nconst adminAdministrationSyncRolesSuccess = ({ roles }) => ({\n  type: ADMIN_ADMINISTRATION_SYNC_ROLES_SUCCESS,\n  payload: { roles }\n});\n\n/**\n * Action creator for end of requesting roles.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst adminAdministrationSyncRolesFailure = error => ({\n  type: ADMIN_ADMINISTRATION_SYNC_ROLES_FAILURE,\n  payload: { error }\n});\n\n/**\n * User schema used to validate response sent by the API\n */\nconst responseSchema = yup.object().shape({\n  roles: yup\n    .array()\n    .of(\n      yup.object().shape({\n        id: yup.string().required(),\n        name: yup.string().required(),\n        RolePermissions: yup\n          .array()\n          .of(\n            yup.object().shape({\n              name: yup.string().required()\n            })\n          )\n          .required()\n      })\n    )\n    .required()\n});\n\n/**\n * Request roles details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for user sign in API call\n */\nexport default function adminAdministrationSyncRoles(token) {\n  return async dispatch => {\n    dispatch(adminAdministrationSyncRolesBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(adminAdministrationSyncRolesFailure(message));\n    }\n\n    function onSuccess(success) {\n      try {\n        const validatedData = responseSchema.validateSync(success.data);\n        const roles = validatedData.roles.map(role => {\n          return { ...role, name: capitalizeFirstLetter(role.name), id: role.id };\n        });\n        dispatch(adminAdministrationSyncRolesSuccess({ roles }));\n      } catch (err) {\n        dispatch(\n          adminAdministrationSyncRolesFailure(\n            'Server connection failed. Please check your connection.'\n          )\n        );\n      }\n    }\n\n    try {\n      const success = await axios.get(`${SERVER}${SERVER_GET_ROLES_ALL}`, { headers: { token } });\n      onSuccess(success);\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","import axios from 'axios';\nimport {\n  ADMIN_ADMINISTRATION_DELETE_ROLE_BEGIN,\n  ADMIN_ADMINISTRATION_DELETE_ROLE_SUCCESS,\n  ADMIN_ADMINISTRATION_DELETE_ROLE_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVER_DELETE_ROLE } from '../serverConstants';\nimport adminAdministrationSyncRoles from './adminAdministrationSyncRoles';\n\n/**\n * Action creator for beginning of deleting roles\n * @returns Redux action\n */\nconst adminAdministrationDeleteRoleBegin = () => ({\n  type: ADMIN_ADMINISTRATION_DELETE_ROLE_BEGIN\n});\n\n/**\n * Action creator for end of deleting roles.\n * This is fired when API call ends in a success.\n * @returns Redux action\n */\nconst adminAdministrationDeleteRoleSuccess = success => ({\n  type: ADMIN_ADMINISTRATION_DELETE_ROLE_SUCCESS,\n  payload: { success }\n});\n\n/**\n * Action creator for end of deleting roles.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst adminAdministrationDeleteRoleFailure = error => ({\n  type: ADMIN_ADMINISTRATION_DELETE_ROLE_FAILURE,\n  payload: { error }\n});\n\n/**\n * Request roles details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for user sign in API call\n */\nexport default function adminAdministrationDeleteRole(token, { id, name }) {\n  return async dispatch => {\n    dispatch(adminAdministrationDeleteRoleBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(adminAdministrationDeleteRoleFailure(message));\n    }\n\n    function onSuccess(success) {\n      dispatch(adminAdministrationDeleteRoleSuccess(success));\n      dispatch(adminAdministrationSyncRoles(token));\n    }\n\n    try {\n      const success = await axios.delete(`${SERVER}${SERVER_DELETE_ROLE}/${id}`, {\n        headers: { token }\n      });\n      if (success.status !== 200) {\n        throw Error('Server responded with an error');\n      }\n      onSuccess(`Role '${name}' deleted successfully.`);\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","import axios from 'axios';\nimport * as yup from 'yup';\n\nimport {\n  ADMIN_ADMINISTRATION_SYNC_USERS_BEGIN,\n  ADMIN_ADMINISTRATION_SYNC_USERS_SUCCESS,\n  ADMIN_ADMINISTRATION_SYNC_USERS_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVER_GET_USERS_ALL } from '../serverConstants';\n\n/**\n * Action creator for beginning of requesting users\n * @returns Redux action\n */\nconst adminAdministrationSyncUsersBegin = () => ({\n  type: ADMIN_ADMINISTRATION_SYNC_USERS_BEGIN\n});\n\n/**\n * Action creator for end of requesting users.\n * This is fired when API call ends in a success.\n * @param {Object} response Response data of the call\n * @param {Object[]} response.users Users list\n * @param {string} response.users.id Id of the user\n * @param {string} response.users.firstName First Name of the user\n * @param {string} response.users.lastName Last Name of the user\n * @param {string} response.users.email Email of the user\n * @param {string} response.users.roleId Role ID of the user\n * @param {Object[]} response.users.Role Role of user\n * @param {string} response.users.Role.name Name of the role\n * @returns Redux action\n */\nconst adminAdministrationSyncUsersSuccess = ({ users }) => ({\n  type: ADMIN_ADMINISTRATION_SYNC_USERS_SUCCESS,\n  payload: { users }\n});\n\n/**\n * Action creator for end of requesting users.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst adminAdministrationSyncUsersFailure = error => ({\n  type: ADMIN_ADMINISTRATION_SYNC_USERS_FAILURE,\n  payload: { error }\n});\n\n/**\n * User schema used to validate response sent by the API\n */\nconst responseSchema = yup.object().shape({\n  users: yup\n    .array()\n    .of(\n      yup.object().shape({\n        id: yup.string().required(),\n        firstName: yup.string().required(),\n        lastName: yup.string().required(),\n        email: yup\n          .string()\n          .email()\n          .required(),\n        roleId: yup.string().required(),\n        Role: yup\n          .object()\n          .shape({\n            name: yup.string().required()\n          })\n          .required()\n      })\n    )\n    .required()\n});\n\n/**\n * Request users details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for user sign in API call\n */\nexport default function adminAdministrationSyncUsers(token) {\n  return async dispatch => {\n    dispatch(adminAdministrationSyncUsersBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(adminAdministrationSyncUsersFailure(message));\n    }\n\n    function onSuccess(success) {\n      try {\n        const { users } = responseSchema.validateSync(success.data);\n        dispatch(adminAdministrationSyncUsersSuccess({ users }));\n      } catch (err) {\n        dispatch(\n          adminAdministrationSyncUsersFailure(\n            'Server connection failed. Please check your connection.'\n          )\n        );\n      }\n    }\n\n    try {\n      const success = await axios.get(`${SERVER}${SERVER_GET_USERS_ALL}`, { headers: { token } });\n      onSuccess(success);\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","import axios from 'axios';\nimport {\n  ADMIN_ADMINISTRATION_CREATE_SUPERVISOR_BEGIN,\n  ADMIN_ADMINISTRATION_CREATE_SUPERVISOR_SUCCESS,\n  ADMIN_ADMINISTRATION_CREATE_SUPERVISOR_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVER_CREATE_SUPERVISOR } from '../serverConstants';\n\n/**\n * Action creator for beginning of creating roles\n * @returns Redux action\n */\nconst adminAdministrationCreateSupervisorBegin = () => ({\n  type: ADMIN_ADMINISTRATION_CREATE_SUPERVISOR_BEGIN\n});\n\n/**\n * Action creator for end of creating roles.\n * This is fired when API call ends in a success.\n * @returns Redux action\n */\nconst adminAdministrationCreateSupervisorSuccess = success => ({\n  type: ADMIN_ADMINISTRATION_CREATE_SUPERVISOR_SUCCESS,\n  payload: { success }\n});\n\n/**\n * Action creator for end of creating roles.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst adminAdministrationCreateSupervisorFailure = error => ({\n  type: ADMIN_ADMINISTRATION_CREATE_SUPERVISOR_FAILURE,\n  payload: { error }\n});\n\n/**\n * Request roles details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for user sign in API call\n */\nexport default function adminAdministrationCreateSupervisor(\n  token,\n  firstName,\n  lastName,\n  email,\n  complete\n) {\n  return async dispatch => {\n    dispatch(adminAdministrationCreateSupervisorBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(adminAdministrationCreateSupervisorFailure(message));\n    }\n\n    function onSuccess(success) {\n      dispatch(adminAdministrationCreateSupervisorSuccess(success));\n    }\n\n    try {\n      const success = await axios.post(\n        `${SERVER}${SERVER_CREATE_SUPERVISOR}`,\n        { firstName, lastName, email },\n        { headers: { token } }\n      );\n      if (success.status !== 200) {\n        throw Error('Server responded with an error');\n      }\n      onSuccess(`Supervisor '${firstName} ${lastName}' created successfully.`);\n      complete();\n    } catch (error) {\n      onError(error.response);\n      complete();\n    }\n  };\n}\n","import axios from 'axios';\nimport * as yup from 'yup';\n\nimport {\n  ADMIN_ADMINISTRATION_SYNC_SUPERVISORS_BEGIN,\n  ADMIN_ADMINISTRATION_SYNC_SUPERVISORS_SUCCESS,\n  ADMIN_ADMINISTRATION_SYNC_SUPERVISORS_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVER_GET_SUPERVISORS } from '../serverConstants';\n\n/**\n * Action creator for beginning of requesting supervisors\n * @returns Redux action\n */\nconst adminAdministrationSyncSupervisorsBegin = () => ({\n  type: ADMIN_ADMINISTRATION_SYNC_SUPERVISORS_BEGIN\n});\n\n/**\n * Action creator for end of requesting supervisors.\n * This is fired when API call ends in a success.\n * @param {Object} response Response data of the call\n * @param {Object[]} response.supervisors Supervisors list\n * @param {string} response.supervisors.id Id of the supervisor\n * @param {string} response.supervisors.firstName First Name of the supervisor\n * @param {string} response.supervisors.lastName Last Name of the supervisor\n * @param {string} response.supervisors.email Email of the supervisor\n * @returns Redux action\n */\nconst adminAdministrationSyncSupervisorsSuccess = ({ supervisors }) => ({\n  type: ADMIN_ADMINISTRATION_SYNC_SUPERVISORS_SUCCESS,\n  payload: { supervisors }\n});\n\n/**\n * Action creator for end of requesting supervisors.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst adminAdministrationSyncSupervisorsFailure = error => ({\n  type: ADMIN_ADMINISTRATION_SYNC_SUPERVISORS_FAILURE,\n  payload: { error }\n});\n\n/**\n * User schema used to validate response sent by the API\n */\nconst responseSchema = yup.object().shape({\n  supervisors: yup.array().of(\n    yup.object().shape({\n      id: yup.string().required(),\n      firstName: yup.string().required(),\n      lastName: yup.string().required(),\n      email: yup\n        .string()\n        .email()\n        .required()\n    })\n  )\n});\n\n/**\n * Request supervisors details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for supervisor sign in API call\n */\nexport default function adminAdministrationSyncSupervisors(token) {\n  return async dispatch => {\n    dispatch(adminAdministrationSyncSupervisorsBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(adminAdministrationSyncSupervisorsFailure(message));\n    }\n\n    function onSuccess(success) {\n      try {\n        const { supervisors } = responseSchema.validateSync(success.data);\n        dispatch(adminAdministrationSyncSupervisorsSuccess({ supervisors }));\n      } catch (err) {\n        dispatch(\n          adminAdministrationSyncSupervisorsFailure(\n            'Server connection failed. Please check your connection.'\n          )\n        );\n      }\n    }\n\n    try {\n      const success = await axios.get(`${SERVER}${SERVER_GET_SUPERVISORS}`, {\n        headers: { token }\n      });\n      onSuccess(success);\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","import axios from 'axios';\nimport {\n  ADMIN_ADMINISTRATION_DELETE_SUPERVISOR_BEGIN,\n  ADMIN_ADMINISTRATION_DELETE_SUPERVISOR_SUCCESS,\n  ADMIN_ADMINISTRATION_DELETE_SUPERVISOR_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVER_DELETE_SUPERVISOR } from '../serverConstants';\nimport adminAdministrationSyncSupervisors from './adminAdministrationSyncSupervisors';\n\n/**\n * Action creator for beginning of deleting roles\n * @returns Redux action\n */\nconst adminAdministrationDeleteSupervisorBegin = () => ({\n  type: ADMIN_ADMINISTRATION_DELETE_SUPERVISOR_BEGIN\n});\n\n/**\n * Action creator for end of deleting roles.\n * This is fired when API call ends in a success.\n * @returns Redux action\n */\nconst adminAdministrationDeleteSupervisorSuccess = success => ({\n  type: ADMIN_ADMINISTRATION_DELETE_SUPERVISOR_SUCCESS,\n  payload: { success }\n});\n\n/**\n * Action creator for end of deleting roles.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst adminAdministrationDeleteSupervisorFailure = error => ({\n  type: ADMIN_ADMINISTRATION_DELETE_SUPERVISOR_FAILURE,\n  payload: { error }\n});\n\n/**\n * Request roles details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for user sign in API call\n */\nexport default function adminAdministrationDeleteSupervisor(token, { id, name }) {\n  return async dispatch => {\n    dispatch(adminAdministrationDeleteSupervisorBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(adminAdministrationDeleteSupervisorFailure(message));\n    }\n\n    function onSuccess(success) {\n      dispatch(adminAdministrationDeleteSupervisorSuccess(success));\n      dispatch(adminAdministrationSyncSupervisors(token));\n    }\n\n    try {\n      const success = await axios.delete(`${SERVER}${SERVER_DELETE_SUPERVISOR}/${id}`, {\n        headers: { token }\n      });\n      if (success.status !== 200) {\n        throw Error('Server responded with an error');\n      }\n      onSuccess(`Supervisor '${name}' deleted successfully.`);\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ViewUsersPresenter from './ViewUsers.presenter';\nimport { adminAdministrationSyncUsers } from '../../../redux/actions/AdminAdministrationActions';\n\nfunction ViewUsers() {\n  const dispatch = useDispatch();\n  const { users, usersSyncLoading, usersSyncSuccess, usersSyncError, token } = useSelector(\n    state => ({\n      ...state.adminAdministration,\n      token: state.auth.token\n    })\n  );\n\n  useEffect(() => {\n    if (!usersSyncLoading && !usersSyncSuccess && !usersSyncError) {\n      dispatch(adminAdministrationSyncUsers(token));\n    }\n  }, [dispatch, token, usersSyncLoading, usersSyncSuccess, usersSyncError]);\n\n  const onRefresh = () => {\n    dispatch(adminAdministrationSyncUsers(token));\n  };\n\n  return (\n    <ViewUsersPresenter\n      loading={usersSyncLoading}\n      users={users}\n      error={usersSyncError}\n      onRefresh={onRefresh}\n    />\n  );\n}\n\nexport default ViewUsers;\n","const styles = () => ({\n  center: {\n    textAlign: 'center'\n  },\n  image: {\n    maxWidth: '100%'\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\n\nimport styles from './Dashboard.styles';\n\nfunction Dashboard({ classes }) {\n  return (\n    <div className={classes.center}>\n      <Grid container direction=\"column\" alignContent=\"center\">\n        <Grid item>\n          <img\n            className={classes.image}\n            src={`${process.env.PUBLIC_URL}/images/full_logo.png`}\n            alt=\"Open Inventory Logo\"\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Dashboard);\n","import axios from 'axios';\nimport * as yup from 'yup';\n\nimport {\n  ADMIN_REGISTRATION_SYNC_ROLES_BEGIN,\n  ADMIN_REGISTRATION_SYNC_ROLES_SUCCESS,\n  ADMIN_REGISTRATION_SYNC_ROLES_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVER_GET_ROLES } from '../serverConstants';\nimport { capitalizeFirstLetter } from '../../../helpers/helpers';\n\n/**\n * Action creator for beginning of requesting roles\n * @returns Redux action\n */\nconst adminRegistrationSyncRolesBegin = () => ({\n  type: ADMIN_REGISTRATION_SYNC_ROLES_BEGIN\n});\n\n/**\n * Action creator for end of requesting roles.\n * This is fired when API call ends in a success.\n * @param {Object} response Response data of the call\n * @param {Object[]} response.roles Roles list\n * @param {string} response.roles.id Id of the role\n * @param {string} response.roles.name Name of the role\n * @returns Redux action\n */\nconst adminRegistrationSyncRolesSuccess = ({ roles }) => ({\n  type: ADMIN_REGISTRATION_SYNC_ROLES_SUCCESS,\n  payload: { roles }\n});\n\n/**\n * Action creator for end of requesting roles.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst adminRegistrationSyncRolesFailure = error => ({\n  type: ADMIN_REGISTRATION_SYNC_ROLES_FAILURE,\n  payload: { error }\n});\n\n/**\n * User schema used to validate response sent by the API\n */\nconst responseSchema = yup.object().shape({\n  roles: yup\n    .array()\n    .of(\n      yup.object().shape({\n        id: yup.string().required(),\n        name: yup.string().required()\n      })\n    )\n    .required()\n});\n\n/**\n * Request roles details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for user sign in API call\n */\nexport default function adminRegistrationSyncRoles(token) {\n  return async dispatch => {\n    // API call initialized\n    dispatch(adminRegistrationSyncRolesBegin());\n\n    // Function to call if ended in error\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(adminRegistrationSyncRolesFailure(message));\n    }\n\n    // Function to call if ended in success\n    function onSuccess(success) {\n      try {\n        const validatedData = responseSchema.validateSync(success.data);\n        const roles = validatedData.roles.map(role => {\n          return { name: capitalizeFirstLetter(role.name), id: role.id };\n        });\n        dispatch(adminRegistrationSyncRolesSuccess({ roles }));\n      } catch (err) {\n        dispatch(\n          adminRegistrationSyncRolesFailure(\n            'Server connection failed. Please check your connection.'\n          )\n        );\n      }\n    }\n\n    try {\n      // Make the get request\n      const success = await axios.get(`${SERVER}${SERVER_GET_ROLES}`, { headers: { token } });\n      onSuccess(success);\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","import axios from 'axios';\nimport * as yup from 'yup';\n\nimport {\n  ADMIN_REGISTRATION_SYNC_TOKENS_BEGIN,\n  ADMIN_REGISTRATION_SYNC_TOKENS_SUCCESS,\n  ADMIN_REGISTRATION_SYNC_TOKENS_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVER_GET_TOKENS } from '../serverConstants';\nimport { capitalizeFirstLetter } from '../../../helpers/helpers';\n\n/**\n * Action creator for beginning of requesting tokens\n * @param {string} invitationToken Invitation token key\n * @returns Redux action\n */\nconst adminRegistrationSyncTokensBegin = () => ({\n  type: ADMIN_REGISTRATION_SYNC_TOKENS_BEGIN\n});\n\n/**\n * Action creator for end of requesting tokens.\n * This is fired when API call ends in a success.\n * @param {Object} response Response data of the call\n * @param {Object[]} response.tokens Tokens list\n * @param {string} response.tokens.email Email\n * @param {string} response.tokens.valid Whether token is valid\n * @param {string} response.tokens.updatedAt Whether token is updated\n * @param {Object} response.tokens.Role Role information\n * @param {string} response.tokens.Role.id Role ID\n * @param {string} response.tokens.Role.name Role name\n * @returns Redux action\n */\nconst adminRegistrationSyncTokensSuccess = ({ tokens }) => ({\n  type: ADMIN_REGISTRATION_SYNC_TOKENS_SUCCESS,\n  payload: tokens\n});\n\n/**\n * Action creator for end of requesting tokens.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst adminRegistrationSyncTokensFailure = error => ({\n  type: ADMIN_REGISTRATION_SYNC_TOKENS_FAILURE,\n  payload: { error }\n});\n\n/**\n * User schema used to validate response sent by the API\n */\nconst responseSchema = yup.object().shape({\n  tokens: yup\n    .array()\n    .of(\n      yup.object().shape({\n        email: yup\n          .string()\n          .email()\n          .required(),\n        valid: yup.bool().required(),\n        updatedAt: yup.date().required(),\n        Role: yup.object().shape({\n          id: yup.string().required(),\n          name: yup.string().required()\n        })\n      })\n    )\n    .required()\n});\n\n/**\n * Request tokens details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for user sign in API call\n */\nexport default function adminRegistrationSyncTokens(token) {\n  return async dispatch => {\n    // API call initialized\n    dispatch(adminRegistrationSyncTokensBegin());\n\n    // Function to call if ended in error\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(adminRegistrationSyncTokensFailure(message));\n    }\n\n    // Function to call if ended in success\n    function onSuccess(success) {\n      try {\n        const validatedData = responseSchema.validateSync(success.data);\n        validatedData.tokens.forEach(t => {\n          // eslint-disable-next-line no-param-reassign\n          t.Role.name = capitalizeFirstLetter(t.Role.name);\n        });\n        dispatch(adminRegistrationSyncTokensSuccess({ tokens: validatedData }));\n      } catch (err) {\n        dispatch(\n          adminRegistrationSyncTokensFailure(\n            'Server connection failed. Please check your connection.'\n          )\n        );\n      }\n    }\n\n    try {\n      // Make the get request\n      const success = await axios.get(`${SERVER}${SERVER_GET_TOKENS}`, { headers: { token } });\n      onSuccess(success);\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","import axios from 'axios';\nimport {\n  ADMIN_REGISTRATION_INVITE_BEGIN,\n  ADMIN_REGISTRATION_INVITE_SUCCESS,\n  ADMIN_REGISTRATION_INVITE_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVER_POST_TOKEN } from '../serverConstants';\n\n/**\n * Action creator for beginning of inviting users\n * @returns Redux action\n */\nconst adminRegistrationInviteBegin = () => ({\n  type: ADMIN_REGISTRATION_INVITE_BEGIN\n});\n\n/**\n * Action creator for end of inviting users.\n * This is fired when API call ends in a success.\n * @returns Redux action\n */\nconst adminRegistrationInviteSuccess = success => ({\n  type: ADMIN_REGISTRATION_INVITE_SUCCESS,\n  payload: { success }\n});\n\n/**\n * Action creator for end of inviting users.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst adminRegistrationInviteFailure = error => ({\n  type: ADMIN_REGISTRATION_INVITE_FAILURE,\n  payload: { error }\n});\n\n/**\n * Request roles details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for user sign in API call\n */\nexport default function adminRegistrationInvite(token, emails, role) {\n  return async dispatch => {\n    // API call initialized\n    dispatch(adminRegistrationInviteBegin());\n\n    // Validate emails\n    if (!emails || emails.length === 0) {\n      dispatch(adminRegistrationInviteFailure('No email addresses submitted'));\n      return;\n    }\n    // Validate role\n    if (!role || role.length === 0) {\n      dispatch(adminRegistrationInviteFailure('Role not selected'));\n      return;\n    }\n\n    // Function to call if ended in error\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(adminRegistrationInviteFailure(message));\n    }\n\n    // Function to call if ended in success\n    function onSuccess(success) {\n      dispatch(adminRegistrationInviteSuccess(success));\n    }\n\n    try {\n      const success = await axios.post(\n        `${SERVER}${SERVER_POST_TOKEN}`,\n        { emails, role },\n        { headers: { token } }\n      );\n      if (success.status !== 200) {\n        throw Error('Server responded with an error');\n      }\n      onSuccess(`Invitations sent for ${emails.length} emails.`);\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","import axios from 'axios';\nimport {\n  ADMIN_REGISTRATION_RETRACTION_BEGIN,\n  ADMIN_REGISTRATION_RETRACTION_SUCCESS,\n  ADMIN_REGISTRATION_RETRACTION_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVER_DELETE_TOKENS } from '../serverConstants';\nimport adminRegistrationSyncTokens from './adminRegistrationSyncTokens';\n\n/**\n * Action creator for beginning of retraction\n * @returns Redux action\n */\nconst adminRegistrationRetractBegin = () => ({\n  type: ADMIN_REGISTRATION_RETRACTION_BEGIN\n});\n\n/**\n * Action creator for end of retraction.\n * This is fired when API call ends in a success.\n * @returns Redux action\n */\nconst adminRegistrationRetractSuccess = success => ({\n  type: ADMIN_REGISTRATION_RETRACTION_SUCCESS,\n  payload: { success }\n});\n\n/**\n * Action creator for end of retraction.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst adminRegistrationRetractFailure = error => ({\n  type: ADMIN_REGISTRATION_RETRACTION_FAILURE,\n  payload: { error }\n});\n\n/**\n * Request retraction thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for user sign in API call\n */\nexport default function adminRegistrationRetract(token, email) {\n  return async dispatch => {\n    dispatch(adminRegistrationRetractBegin());\n\n    if (!email) {\n      dispatch(adminRegistrationRetractFailure('No email addresses submitted'));\n      return;\n    }\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(adminRegistrationRetractFailure(message));\n    }\n\n    function onSuccess(success) {\n      dispatch(adminRegistrationRetractSuccess(success));\n      dispatch(adminRegistrationSyncTokens(token));\n    }\n\n    try {\n      const success = await axios.delete(`${SERVER}${SERVER_DELETE_TOKENS}`, {\n        data: { email },\n        headers: { token }\n      });\n      if (success.status !== 200) {\n        throw Error('Server responded with an error');\n      }\n      onSuccess(`Invitation retracted from '${email}.'`);\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","const styles = () => ({\n  root: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  wrapper: {\n    padding: '16px'\n  }\n});\n\nexport default styles;\n","const styles = theme => ({\n  chip: {\n    margin: theme.spacing(0.25)\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  TextField,\n  withStyles,\n  Box,\n  Chip,\n  Avatar,\n  Hidden,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Divider\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { AiOutlineMail } from 'react-icons/ai';\n\nimport styles from './EmailTextBox.styles';\n\nconst maxEmailThreshold = 5;\n\nfunction EmailTextBoxPresenter({ classes, emails, error, onChange }) {\n  const [open, setOpen] = React.useState(false);\n\n  const openDialog = () => setOpen(true);\n\n  const closeDialog = () => setOpen(false);\n\n  return (\n    <Box>\n      <Grid>\n        <Grid container direction=\"column\" alignItems=\"stretch\">\n          <Grid item xs>\n            <TextField\n              onChange={onChange}\n              label=\"Invitee Email List\"\n              multiline\n              rows=\"4\"\n              placeholder=\"email1@mail.com&#13;&#10;email2@mail.com\"\n              variant=\"outlined\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item>\n            {error && (\n              <Box py={1}>\n                <Alert severity=\"warning\">{error}</Alert>\n              </Box>\n            )}\n          </Grid>\n          <Grid item>\n            {emails.slice(0, maxEmailThreshold).map(email => (\n              <Chip\n                key={email}\n                className={classes.chip}\n                label={email}\n                color=\"secondary\"\n                avatar={<Avatar>{email[0].toUpperCase()}</Avatar>}\n              />\n            ))}\n          </Grid>\n          <Grid item>\n            <Box pt={1}>\n              <Hidden xsUp={emails.length <= maxEmailThreshold}>\n                <Button onClick={openDialog} variant=\"outlined\">\n                  Only&nbsp;\n                  {maxEmailThreshold}\n                  &nbsp;shown - &nbsp;\n                  {emails.length}\n                  &nbsp;distinct email addresses found.\n                </Button>\n              </Hidden>\n            </Box>\n          </Grid>\n          <Dialog open={open} onClose={closeDialog} scroll=\"paper\">\n            <DialogTitle>Processed Email Addresses</DialogTitle>\n            <Divider />\n            <List>\n              {emails.map(email => (\n                <ListItem button key={email}>\n                  <ListItemAvatar>\n                    <Avatar className={classes.avatar}>\n                      <AiOutlineMail />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText primary={email} />\n                </ListItem>\n              ))}\n            </List>\n            <Divider />\n            <DialogActions>\n              <Button onClick={closeDialog} color=\"primary\">\n                Close\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nEmailTextBoxPresenter.defaultProps = {\n  error: null\n};\n\nEmailTextBoxPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  emails: PropTypes.arrayOf(PropTypes.string).isRequired,\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(EmailTextBoxPresenter);\n","import React, { useState } from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport EmailTextBoxPresenter from './EmailTextBox.presenter';\n\nconst emailRegex = /([a-zA-Z0-9._+-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi;\n\nfunction EmailTextBox({ error, onChange }) {\n  // Emails state management\n  const [emails, setEmails] = useState([]);\n\n  // Error message to show\n  let textBoxErrorMessage = error;\n  // Unique email list\n  const uEmails = new Set();\n\n  // Get unique emails while detecting duplicates\n  emails.forEach(email => {\n    if (!textBoxErrorMessage && uEmails.has(email)) {\n      textBoxErrorMessage = `Duplicate email address(es) detected: ${email}`;\n    }\n    uEmails.add(email);\n  });\n\n  // Text was changed - must update emails list using regex\n  const onChangeEventHandler = event => {\n    const text = event.target.value;\n    let extractedEmails = text.match(emailRegex);\n    if (!extractedEmails) {\n      extractedEmails = [];\n    }\n    onChange(extractedEmails);\n    setEmails(extractedEmails);\n  };\n\n  return (\n    <EmailTextBoxPresenter\n      error={textBoxErrorMessage}\n      emails={[...uEmails]}\n      onChange={onChangeEventHandler}\n    />\n  );\n}\n\nEmailTextBox.defaultProps = {\n  error: null\n};\n\nEmailTextBox.propTypes = {\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default EmailTextBox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AiOutlineSync } from 'react-icons/ai';\nimport {\n  Paper,\n  Grid,\n  Button,\n  withStyles,\n  Toolbar,\n  AppBar,\n  Box,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  IconButton,\n  Tooltip\n} from '@material-ui/core';\n\nimport styles from './InviteUsers.styles';\nimport ProgressOverlay from '../../Common/ProgressOverlay';\nimport EmailTextBox from './EmailTextBox/EmailTextBox';\nimport * as EVENTS from './InviteUsers.events';\nimport SuccessErrorAlert from '../../Common/SuccessErrorAlert';\n\nfunction InviteUsersPresenter({ classes, roles, error, loading, handleEvent, success }) {\n  return (\n    <ProgressOverlay visible={loading}>\n      <Paper className={classes.root}>\n        <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n          <Toolbar>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs>\n                <p className={classes.title}>Invite Users</p>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Refresh Roles List\">\n                <IconButton onClick={handleEvent(EVENTS.REFRESH_ROLES)}>\n                  <AiOutlineSync />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Grid container direction=\"column\" alignItems=\"stretch\" className={classes.wrapper}>\n          <SuccessErrorAlert success={success} error={error} />\n\n          <EmailTextBox onChange={handleEvent(EVENTS.EMAILS_ONCHANGE)} />\n          <Grid item>\n            <p>\n              Put all the emails into the box above and press&nbsp;\n              <b>Send Invitation Emails</b>\n              .&nbsp;\n              <br />\n              You can add only one email to invite one user.\n              <br />\n              Users indicated above will be sent invites. Use one email per line for best\n              identification.\n            </p>\n          </Grid>\n          <Grid item>\n            <Box pb={2} pt={1}>\n              <FormControl variant=\"outlined\" className={classes.formControl} fullWidth>\n                <InputLabel id=\"role-select-label\">Role to be given</InputLabel>\n                <Select\n                  labelId=\"role-select-label\"\n                  label=\"Role to be given\"\n                  defaultValue=\"\"\n                  onChange={handleEvent(EVENTS.ROLE_ONCHANGE)}\n                >\n                  {roles.map(role => (\n                    <MenuItem key={role.id} value={role.id}>\n                      {role.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n          <Grid item>\n            <Box py={1} textAlign=\"right\">\n              <Button onClick={handleEvent(EVENTS.FORM_SUBMIT)} variant=\"contained\" color=\"primary\">\n                Send Invitation Emails\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Paper>\n    </ProgressOverlay>\n  );\n}\n\nInviteUsersPresenter.defaultProps = {\n  error: null,\n  success: null\n};\n\nInviteUsersPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  roles: PropTypes.array.isRequired,\n  error: PropTypes.string,\n  success: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleEvent: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(InviteUsersPresenter);\n","export const REFRESH_ROLES = 'REFRESH_ROLES';\nexport const EMAILS_ONCHANGE = 'EMAILS_ONCHANGE';\nexport const ROLE_ONCHANGE = 'ROLE_ONCHANGE';\nexport const FORM_SUBMIT = 'FORM_SUBMIT';\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  adminRegistrationSyncRoles,\n  adminRegistrationInvite\n} from '../../../redux/actions/AdminRegistrationActions';\nimport InviteUsersPresenter from './InviteUsers.presenter';\nimport * as EVENTS from './InviteUsers.events';\n\nfunction InviteUsers() {\n  // To dispatch api calls\n  const dispatch = useDispatch();\n  // Take token and other state slice. Token is required for api call.\n  const {\n    roles,\n    rolesSyncLoading,\n    rolesSyncError,\n    rolesSyncSuccess,\n    inviteLoading,\n    inviteError,\n    inviteSuccess,\n    token\n  } = useSelector(state => ({ ...state.adminRegistration, token: state.auth.token }));\n\n  // If roles are not loaded(and the request is not already submitted) request to sync roles\n  useEffect(() => {\n    if (!rolesSyncLoading && !rolesSyncSuccess && !rolesSyncError) {\n      dispatch(adminRegistrationSyncRoles(token));\n    }\n  }, [dispatch, token, rolesSyncError, rolesSyncSuccess, rolesSyncLoading]);\n\n  // State management of emails and roles\n  const [formState, setFormState] = useState({ emails: [], role: null });\n\n  // User requested to refresh roles list\n  const refreshRoles = () => {\n    dispatch(adminRegistrationSyncRoles(token));\n  };\n\n  // User submitted the form\n  const onSubmit = () => {\n    dispatch(adminRegistrationInvite(token, formState.emails, formState.role));\n  };\n\n  // Emails were changed\n  const emailsOnChange = emails => {\n    setFormState({ ...formState, emails });\n  };\n\n  // Selected role was changed\n  const roleOnChange = event => {\n    setFormState({ ...formState, role: event.target.value });\n  };\n\n  // Event mapper which maps event to the callback\n  const handleEvent = event => {\n    switch (event) {\n      case EVENTS.REFRESH_ROLES:\n        return refreshRoles;\n      case EVENTS.FORM_SUBMIT:\n        return onSubmit;\n      case EVENTS.EMAILS_ONCHANGE:\n        return emailsOnChange;\n      case EVENTS.ROLE_ONCHANGE:\n        return roleOnChange;\n      default:\n        return () => {};\n    }\n  };\n\n  return (\n    <InviteUsersPresenter\n      loading={inviteLoading || rolesSyncLoading}\n      roles={roles}\n      error={inviteError || rolesSyncError}\n      success={inviteSuccess}\n      handleEvent={handleEvent}\n    />\n  );\n}\n\nexport default InviteUsers;\n","const styles = () => ({\n  root: {\n    maxWidth: 936,\n    margin: 'auto'\n  },\n\n  wrapper: {\n    padding: 20\n  },\n  item: {\n    marginBottom: 20\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\n\nexport default styles;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Grid, Typography, Box } from '@material-ui/core';\nimport { Image } from 'cloudinary-react';\nimport { AiOutlineDelete, AiOutlineCloudUpload, AiOutlineWarning } from 'react-icons/ai';\n\nconst styles = {\n  palette: {\n    window: '#23395B',\n    sourceBg: '#FFFFFF',\n    windowBorder: '#23395B',\n    tabIcon: '#FFFFFF',\n    inactiveTabIcon: '#8E9FBF',\n    menuIcons: '#CCE8FF',\n    link: '#D81E5B',\n    action: '#5333FF',\n    inProgress: '#68CDAA',\n    complete: '#68CDAA',\n    error: '#ff0000',\n    textDark: '#000000',\n    textLight: '#ffffff'\n  },\n  fonts: {\n    default: null,\n    'sans-serif': {\n      url: null,\n      active: true\n    }\n  }\n};\n\nconst ImageUpload = ({ variant, color, sources, onSuccess }) => {\n  const [error, setError] = useState(null);\n  const [image, setImage] = useState(null);\n\n  const uploadedImage = publicId => {\n    setImage(publicId);\n    onSuccess(publicId);\n  };\n\n  const onUpload = (err, result) => {\n    if (err) {\n      setError(err);\n      uploadedImage(null);\n    } else if (result && result.event === 'success') {\n      setError(null);\n      uploadedImage(result.info.public_id);\n    }\n  };\n\n  const uploadWidget =\n    window.cloudinary &&\n    window.cloudinary.createUploadWidget(\n      {\n        cloudName: 'open-inventory-system',\n        uploadPreset: 'public',\n        sources,\n        multiple: false,\n        styles\n      },\n      onUpload\n    );\n\n  const showWidget = () => {\n    uploadWidget.open();\n  };\n\n  const getButton = () => {\n    if (error != null) {\n      return (\n        <Button\n          startIcon={<AiOutlineWarning />}\n          variant={variant}\n          color={color}\n          onClick={showWidget}\n        >\n          Upload Photo\n        </Button>\n      );\n    }\n\n    if (image === null) {\n      return (\n        <Button\n          startIcon={<AiOutlineCloudUpload />}\n          variant={variant}\n          color={color}\n          onClick={showWidget}\n        >\n          Upload Photo\n        </Button>\n      );\n    }\n\n    return (\n      <Button\n        startIcon={<AiOutlineDelete />}\n        variant={variant}\n        color={color}\n        onClick={() => uploadedImage(null)}\n      >\n        Remove Photo\n      </Button>\n    );\n  };\n\n  return (\n    <Grid container direction=\"column\" alignItems=\"flex-start\">\n      <Grid item>{getButton()}</Grid>\n      {error && (\n        <Grid item>\n          <Typography color=\"secondary\">Error uploading image</Typography>\n        </Grid>\n      )}\n      {image && (\n        <Grid item>\n          <Box pt={1}>\n            <Image publicId={image} width=\"150\" style={{ borderRadius: 8 }} />\n          </Box>\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nImageUpload.defaultProps = {\n  variant: 'contained',\n  color: 'primary',\n  sources: ['local', 'url', 'facebook']\n};\n\nImageUpload.propTypes = {\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text']),\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n  sources: PropTypes.arrayOf(PropTypes.string),\n  onSuccess: PropTypes.func.isRequired\n};\n\nexport default ImageUpload;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Paper, withStyles, Grid, Box, Button, AppBar, Toolbar } from '@material-ui/core';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport styles from './CreateLabs.styles';\nimport ProgressOverlay from '../../Common/ProgressOverlay';\nimport SuccessErrorAlert from '../../Common/SuccessErrorAlert';\nimport ImageUpload from '../../Common/ImageUpload';\n\nfunction CreateLabsPresenter({ classes, onSubmit, validationSchema, loading, success, error }) {\n  return (\n    <ProgressOverlay visible={loading}>\n      <Paper className={classes.root}>\n        <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n          <Toolbar>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs>\n                <p className={classes.title}>Create Labs</p>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Grid className={classes.wrapper} container direction=\"column\" alignItems=\"stretch\">\n          <SuccessErrorAlert success={success} error={error} />\n          <Grid item>\n            <Box px={1} mb={2}>\n              Create a lab with a suitable title and a subtitle. Uploading an image is &nbsp;\n              <b>not required.</b>\n              &nbsp;\n              <br />\n              <b>Lab creation action cannot be undone.</b>\n            </Box>\n          </Grid>\n          <Formik\n            initialValues={{\n              title: '',\n              subTitle: '',\n              image: null\n            }}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            {({ submitForm, isSubmitting, setFieldValue }) => (\n              <Form>\n                <Grid className={classes.item} item>\n                  <Field\n                    component={TextField}\n                    required\n                    label=\"Enter Lab Title\"\n                    name=\"title\"\n                    variant=\"outlined\"\n                    type=\"text\"\n                    placeholder=\"advance lab\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid className={classes.item} item>\n                  <Field\n                    component={TextField}\n                    required\n                    label=\"Enter Lab Subtitle\"\n                    name=\"subTitle\"\n                    variant=\"outlined\"\n                    type=\"text\"\n                    placeholder=\"cse final year\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <ImageUpload\n                    variant=\"outlined\"\n                    onSuccess={publicId => setFieldValue('image', publicId)}\n                  />\n                </Grid>\n                <Grid item>\n                  <Box pt={10} textAlign=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      disabled={isSubmitting}\n                      onClick={submitForm}\n                    >\n                      Create Lab\n                    </Button>\n                  </Box>\n                </Grid>\n              </Form>\n            )}\n          </Formik>\n        </Grid>\n      </Paper>\n    </ProgressOverlay>\n  );\n}\n\nCreateLabsPresenter.defaultProps = {\n  error: null,\n  success: null\n};\n\nCreateLabsPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  validationSchema: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  success: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default withStyles(styles)(CreateLabsPresenter);\n","import axios from 'axios';\nimport {\n  ADMIN_LABMANAGEMENT_CREATE_LAB_BEGIN,\n  ADMIN_LABMANAGEMENT_CREATE_LAB_SUCCESS,\n  ADMIN_LABMANAGEMENT_CREATE_LAB_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVER_CREATE_LAB } from '../serverConstants';\n\n/**\n * Action creator for beginning of creating labs\n * @returns Redux action\n */\nconst adminAdministrationCreateLabBegin = () => ({\n  type: ADMIN_LABMANAGEMENT_CREATE_LAB_BEGIN\n});\n\n/**\n * Action creator for end of creating labs.\n * This is fired when API call ends in a success.\n * @returns Redux action\n */\nconst adminAdministrationCreateLabSuccess = success => ({\n  type: ADMIN_LABMANAGEMENT_CREATE_LAB_SUCCESS,\n  payload: { success }\n});\n\n/**\n * Action creator for end of creating labs.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst adminAdministrationCreateLabFailure = error => ({\n  type: ADMIN_LABMANAGEMENT_CREATE_LAB_FAILURE,\n  payload: { error }\n});\n\n/**\n * Request roles details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for user sign in API call\n */\n\nexport default function adminLabManagementCreateLab(token, title, subTitle, image, complete) {\n  return async dispatch => {\n    dispatch(adminAdministrationCreateLabBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(adminAdministrationCreateLabFailure(message));\n    }\n\n    function onSuccess(success) {\n      dispatch(adminAdministrationCreateLabSuccess(success));\n    }\n    try {\n      const success = await axios.post(\n        `${SERVER}${SERVER_CREATE_LAB}`,\n        { title, subtitle: subTitle, image },\n        { headers: { token } }\n      );\n      if (success.status !== 200) {\n        throw Error('Server responded with an error');\n      }\n      onSuccess(`Lab ${title} created successfully!`);\n      complete();\n    } catch (error) {\n      onError(error.response);\n      complete();\n    }\n  };\n}\n","import axios from 'axios';\nimport * as yup from 'yup';\n\nimport {\n  ADMIN_LAB_MANAGEMENT_SYNC_LABS_BEGIN,\n  ADMIN_LAB_MANAGEMENT_SYNC_LABS_SUCCESS,\n  ADMIN_LAB_MANAGEMENT_SYNC_LABS_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVER_GET_LABS_ALL } from '../serverConstants';\n\n/**\n * Action creator for beginning of requesting labs\n * @returns Redux action\n */\nconst adminLabManagementSyncLabsBegin = () => ({\n  type: ADMIN_LAB_MANAGEMENT_SYNC_LABS_BEGIN\n});\n\n/**\n * Action creator for end of requesting labs.\n * This is fired when API call ends in a success.\n * @param {Object} response Response data of the call\n * @param {Object[]} response.labs Labs list\n * @param {string} response.labs.id Id of the lab\n * @param {string} response.labs.title Title of the lab\n * @param {string} response.labs.subtitle Subtitle of the lab\n * @param {string} response.labs.image Image of the lab\n * @param {Date} response.labs.createdAt Created timestamp of the lab\n * @param {Date} response.labs.updatedAt Updated timestamp of the lab\n * @returns Redux action\n */\nconst adminLabManagementSyncLabsSuccess = ({ labs }) => ({\n  type: ADMIN_LAB_MANAGEMENT_SYNC_LABS_SUCCESS,\n  payload: { labs }\n});\n\n/**\n * Action creator for end of requesting labs.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst adminLabManagementSyncLabsFailure = error => ({\n  type: ADMIN_LAB_MANAGEMENT_SYNC_LABS_FAILURE,\n  payload: { error }\n});\n\n/**\n * User schema used to validate response sent by the API\n */\nconst responseSchema = yup.object().shape({\n  labs: yup.array().of(\n    yup.object().shape({\n      id: yup.string().required(),\n      title: yup.string().required(),\n      subtitle: yup.string().required(),\n      image: yup.string().nullable(),\n      createdAt: yup.date().required(),\n      updatedAt: yup.date().required(),\n      Users: yup.array().of(\n        yup.object().shape({\n          email: yup.string().required(),\n          firstName: yup.string().required(),\n          lastName: yup.string().required()\n        })\n      )\n    })\n  )\n});\n\n/**\n * Request labs details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for lab sign in API call\n */\nexport default function adminLabManagementSyncLabs(token) {\n  return async dispatch => {\n    dispatch(adminLabManagementSyncLabsBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(adminLabManagementSyncLabsFailure(message));\n    }\n\n    function onSuccess(success) {\n      try {\n        const { labs } = responseSchema.validateSync(success.data);\n        dispatch(adminLabManagementSyncLabsSuccess({ labs }));\n      } catch (err) {\n        dispatch(\n          adminLabManagementSyncLabsFailure(\n            'Server connection failed. Please check your connection.'\n          )\n        );\n      }\n    }\n\n    try {\n      const success = await axios.get(`${SERVER}${SERVER_GET_LABS_ALL}`, { headers: { token } });\n      onSuccess(success);\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","import axios from 'axios';\nimport {\n  ADMIN_LAB_MANAGEMENT_ASSIGN_STAFF_BEGIN,\n  ADMIN_LAB_MANAGEMENT_ASSIGN_STAFF_SUCCESS,\n  ADMIN_LAB_MANAGEMENT_ASSIGN_STAFF_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVERE_ASSIGN_STAFF } from '../serverConstants';\nimport adminLabManagementSyncLabs from './adminLabManagementSyncLabs';\n/**\n * Action creator for beginning of creating labs\n * @returns Redux action\n */\nconst adminLabManagementAssignStaffBegin = () => ({\n  type: ADMIN_LAB_MANAGEMENT_ASSIGN_STAFF_BEGIN\n});\n\n/**\n * Action creator for end of creating labs.\n * This is fired when API call ends in a success.\n * @returns Redux action\n */\nconst adminLabManagementAssignStaffSuccess = success => ({\n  type: ADMIN_LAB_MANAGEMENT_ASSIGN_STAFF_SUCCESS,\n  payload: { success }\n});\n\n/**\n * Action creator for end of creating labs.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst adminLabManagementAssignStaffFailure = error => ({\n  type: ADMIN_LAB_MANAGEMENT_ASSIGN_STAFF_FAILURE,\n  payload: { error }\n});\n\n/**\n * Request roles details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for user sign in API call\n */\n\nexport default function adminLabManagementAssignStaff(token, labId, userId) {\n  return async dispatch => {\n    dispatch(adminLabManagementAssignStaffBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(adminLabManagementAssignStaffFailure(message));\n    }\n\n    function onSuccess(success) {\n      dispatch(adminLabManagementAssignStaffSuccess(success));\n      dispatch(adminLabManagementSyncLabs(token));\n    }\n    try {\n      const success = await axios.post(\n        `${SERVER}${SERVERE_ASSIGN_STAFF}`,\n        { labId, userId },\n        { headers: { token } }\n      );\n      if (success.status !== 200) {\n        throw Error('Server responded with an error');\n      }\n      onSuccess(`Lab Assigned successfully!`);\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","import axios from 'axios';\nimport * as yup from 'yup';\n\nimport {\n  ADMIN_LAB_MANAGEMENT_SYNC_MANAGERS_BEGIN,\n  ADMIN_LAB_MANAGEMENT_SYNC_MANAGERS_SUCCESS,\n  ADMIN_LAB_MANAGEMENT_SYNC_MANAGERS_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVER_GET_MANAGERS_ALL } from '../serverConstants';\n\n/**\n * Action creator for beginning of requesting managers\n * @returns Redux action\n */\nconst adminLabManagementSyncManagersBegin = () => ({\n  type: ADMIN_LAB_MANAGEMENT_SYNC_MANAGERS_BEGIN\n});\n\n/**\n * Action creator for end of requesting managers.\n * This is fired when API call ends in a success.\n * @param {Object} response Response data of the call\n * @param {Object[]} response.managers Managers list\n * @param {string} response.managers.id Id of the user\n * @param {string} response.managers.firstName First Name of the user\n * @param {string} response.managers.lastName Last Name of the user\n * @param {string} response.managers.email Email of the user\n * @returns Redux action\n */\nconst adminLabManagementSyncManagersSuccess = ({ managers }) => ({\n  type: ADMIN_LAB_MANAGEMENT_SYNC_MANAGERS_SUCCESS,\n  payload: { managers }\n});\n\n/**\n * Action creator for end of requesting managers.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst adminLabManagementSyncManagersFailure = error => ({\n  type: ADMIN_LAB_MANAGEMENT_SYNC_MANAGERS_FAILURE,\n  payload: { error }\n});\n\n/**\n * User schema used to validate response sent by the API\n */\nconst responseSchema = yup.object().shape({\n  managers: yup\n    .array()\n    .of(\n      yup.object().shape({\n        id: yup.string().required(),\n        firstName: yup.string().required(),\n        lastName: yup.string().required(),\n        email: yup.string().required()\n      })\n    )\n    .required()\n});\n\n/**\n * Request managers details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for lab sign in API call\n */\nexport default function adminLabManagementSyncManagers(token) {\n  return async dispatch => {\n    dispatch(adminLabManagementSyncManagersBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(adminLabManagementSyncManagersFailure(message));\n    }\n\n    function onSuccess(success) {\n      try {\n        const { managers } = responseSchema.validateSync({\n          managers: success.data.inventoryManagers\n        });\n        dispatch(adminLabManagementSyncManagersSuccess({ managers }));\n      } catch (err) {\n        dispatch(\n          adminLabManagementSyncManagersFailure(\n            'Server connection failed. Please check your connection.'\n          )\n        );\n      }\n    }\n\n    try {\n      const success = await axios.get(`${SERVER}${SERVER_GET_MANAGERS_ALL}`, {\n        headers: { token }\n      });\n      onSuccess(success);\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","import axios from 'axios';\nimport {\n  ADMIN_LAB_MANAGEMENT_UNASSIGN_STAFF_BEGIN,\n  ADMIN_LAB_MANAGEMENT_UNASSIGN_STAFF_SUCCESS,\n  ADMIN_LAB_MANAGEMENT_UNASSIGN_STAFF_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVERE_UNASSIGN_STAFF } from '../serverConstants';\nimport adminLabManagementSyncLabs from './adminLabManagementSyncLabs';\n/**\n * Action creator for beginning of creating labs\n * @returns Redux action\n */\nconst adminLabManagementUnassignStaffBegin = () => ({\n  type: ADMIN_LAB_MANAGEMENT_UNASSIGN_STAFF_BEGIN\n});\n\n/**\n * Action creator for end of creating labs.\n * This is fired when API call ends in a success.\n * @returns Redux action\n */\nconst adminLabManagementUnassignStaffSuccess = success => ({\n  type: ADMIN_LAB_MANAGEMENT_UNASSIGN_STAFF_SUCCESS,\n  payload: { success }\n});\n\n/**\n * Action creator for end of creating labs.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst adminLabManagementUnassignStaffFailure = error => ({\n  type: ADMIN_LAB_MANAGEMENT_UNASSIGN_STAFF_FAILURE,\n  payload: { error }\n});\n\n/**\n * Request roles details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for user sign in API call\n */\n\nexport default function adminLabManagementUnassignStaff(token, labId, userId) {\n  return async dispatch => {\n    dispatch(adminLabManagementUnassignStaffBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(adminLabManagementUnassignStaffFailure(message));\n    }\n\n    function onSuccess(success) {\n      dispatch(adminLabManagementUnassignStaffSuccess(success));\n      dispatch(adminLabManagementSyncLabs(token));\n    }\n    try {\n      const success = await axios.post(\n        `${SERVER}${SERVERE_UNASSIGN_STAFF}`,\n        { labId, userId },\n        { headers: { token } }\n      );\n      if (success.status !== 200) {\n        throw Error('Server responded with an error');\n      }\n      onSuccess(`Lab Unassigned successfully!`);\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as yup from 'yup';\nimport CreateLabsPresenter from './CreateLabs.presenter';\nimport { adminLabManagementCreateLab } from '../../../redux/actions/AdminLabManagementActions';\n\nfunction CreateLabs() {\n  // To dispatch api calls\n  const dispatch = useDispatch();\n  const {\n    labCreationLoading,\n    labCreationError,\n    labCreationSuccess,\n    token\n  } = useSelector(state => ({ ...state.adminLabManagement, token: state.auth.token }));\n\n  // title was changed\n  const schema = yup.object().shape({\n    title: yup.string().required('Required'),\n    subTitle: yup.string().required('Required'),\n    image: yup.string().nullable()\n  });\n\n  const onSubmit = (values, { setSubmitting }) => {\n    const complete = () => {\n      setSubmitting(false);\n    };\n    dispatch(\n      adminLabManagementCreateLab(token, values.title, values.subTitle, values.image, complete)\n    );\n  };\n\n  return (\n    <CreateLabsPresenter\n      onSubmit={onSubmit}\n      validationSchema={schema}\n      loading={labCreationLoading}\n      success={labCreationSuccess}\n      error={labCreationError}\n    />\n  );\n}\n\nexport default CreateLabs;\n","const styles = () => ({\n  root: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  wrapper: {\n    padding: '16px'\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AiOutlineSync, AiOutlineDelete } from 'react-icons/ai';\nimport {\n  Paper,\n  Grid,\n  withStyles,\n  Toolbar,\n  AppBar,\n  Box,\n  IconButton,\n  Tooltip,\n  Button,\n  Chip,\n  Avatar,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions\n} from '@material-ui/core';\nimport moment from 'moment';\n\nimport styles from './RetractInvitations.styles';\nimport ProgressOverlay from '../../Common/ProgressOverlay';\nimport SuccessErrorAlert from '../../Common/SuccessErrorAlert';\nimport AdvancedTable from '../../Common/AdvancedTable';\n\nfunction RetractInviationsPresenter({\n  classes,\n  registrationTokens,\n  error,\n  loading,\n  success,\n  onRefresh,\n  onRetract\n}) {\n  const [selectedEmail, setSelectedEmail] = React.useState(null);\n\n  const handleClick = email => () => {\n    setSelectedEmail(email);\n  };\n\n  const handleDialogClose = () => {\n    setSelectedEmail(null);\n  };\n\n  const handleRetract = () => {\n    if (selectedEmail !== null) {\n      onRetract(selectedEmail);\n    }\n    handleDialogClose();\n  };\n\n  return (\n    <ProgressOverlay visible={loading}>\n      <Paper className={classes.root}>\n        <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n          <Toolbar>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs>\n                <p className={classes.title}>Retract Invitations</p>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Refresh Tokens List\">\n                <IconButton onClick={onRefresh}>\n                  <AiOutlineSync />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Grid container direction=\"column\" alignItems=\"stretch\" className={classes.wrapper}>\n          <SuccessErrorAlert success={success} error={error} />\n          <Grid item>\n            <Box px={2} pb={2}>\n              Retract Invitations by clicking the button.\n              <br />\n              Note that users with accepted invitations&nbsp;\n              <b>cannot be removed.</b>\n              <br />\n              <b>Retracting action cannot be undone.</b>\n            </Box>\n          </Grid>\n          <Grid item>\n            <AdvancedTable\n              columns={[\n                { title: 'Email Address', field: 'email' },\n                {\n                  title: 'Role',\n                  field: 'Role.name',\n                  render: row => (\n                    <Chip\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      avatar={<Avatar>{row.Role.name[0]}</Avatar>}\n                      label={row.Role.name}\n                    />\n                  )\n                },\n                {\n                  title: 'Last Updated',\n                  field: 'updatedAt',\n                  searchable: false,\n                  render: row => (\n                    <Tooltip title={row.updatedAt.toString()}>\n                      <i>{moment(row.updatedAt).fromNow()}</i>\n                    </Tooltip>\n                  )\n                },\n                {\n                  title: '',\n                  type: 'numeric',\n                  sorting: false,\n                  searchable: false,\n                  render: row =>\n                    row.valid ? (\n                      <Button\n                        color=\"secondary\"\n                        variant=\"contained\"\n                        onClick={handleClick(row.email)}\n                        startIcon={<AiOutlineDelete />}\n                      >\n                        Retract\n                      </Button>\n                    ) : (\n                      <Button variant=\"text\" disabled>\n                        Invitation Accepted\n                      </Button>\n                    )\n                }\n              ]}\n              data={registrationTokens.map(({ email, Role, updatedAt, valid }) => ({\n                email,\n                Role,\n                updatedAt,\n                valid\n              }))}\n              title=\"\"\n            />\n          </Grid>\n          <Grid item>*Only the latest invitations are listed above.</Grid>\n        </Grid>\n      </Paper>\n\n      <Dialog\n        open={selectedEmail !== null}\n        onClose={handleDialogClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Retract Invitation?</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            If you retract the invitation, the user won&apos;t be able to register. If the user had\n            already recieved the invitation, the token will be invalidated.\n            <br />\n            This action cannot be undone.\n            <br />\n            <br />\n            Email Address:&nbsp;\n            <b>{selectedEmail}</b>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleRetract} color=\"primary\" autoFocus>\n            Yes\n          </Button>\n          <Button onClick={handleDialogClose} color=\"primary\">\n            No\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </ProgressOverlay>\n  );\n}\n\nRetractInviationsPresenter.defaultProps = {\n  error: null,\n  success: null\n};\n\nRetractInviationsPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  registrationTokens: PropTypes.array.isRequired,\n  error: PropTypes.string,\n  success: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  onRefresh: PropTypes.func.isRequired,\n  onRetract: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(RetractInviationsPresenter);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  adminRegistrationSyncTokens,\n  adminRegistrationRetract\n} from '../../../redux/actions/AdminRegistrationActions';\nimport RetractInvitationsPresenter from './RetractInvitations.presenter';\n\nfunction RetractInvitations() {\n  // NOTE: Here token refers to user JWT token, tokens refer to registration tokens\n  const dispatch = useDispatch();\n\n  const {\n    tokens,\n    token,\n    tokenSyncLoading,\n    tokenSyncError,\n    tokenSyncSuccess,\n    retractLoading,\n    retractError,\n    retractSuccess\n  } = useSelector(state => ({\n    ...state.adminRegistration,\n    token: state.auth.token\n  }));\n  const registrationTokens = tokens;\n\n  useEffect(() => {\n    if (!tokenSyncLoading && !tokenSyncSuccess && !tokenSyncError) {\n      dispatch(adminRegistrationSyncTokens(token));\n    }\n  }, [dispatch, token, tokenSyncLoading, tokenSyncSuccess, tokenSyncError]);\n\n  const onRefresh = () => {\n    dispatch(adminRegistrationSyncTokens(token));\n  };\n  const onRetract = email => {\n    dispatch(adminRegistrationRetract(token, email));\n  };\n\n  return (\n    <RetractInvitationsPresenter\n      loading={tokenSyncLoading || retractLoading}\n      registrationTokens={registrationTokens}\n      error={retractError || tokenSyncError}\n      success={retractSuccess}\n      onRefresh={onRefresh}\n      onRetract={onRetract}\n    />\n  );\n}\n\nexport default RetractInvitations;\n","const styles = theme => ({\n  root: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  margin: {\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  wrapper: {\n    padding: '16px'\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Paper,\n  Grid,\n  withStyles,\n  Toolbar,\n  AppBar,\n  Box,\n  Button,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  FormGroup,\n  FormHelperText,\n  Typography\n} from '@material-ui/core';\nimport { TextField, Checkbox } from 'formik-material-ui';\nimport { Formik, Form, Field } from 'formik';\n\nimport styles from './CreateRoles.styles';\nimport ProgressOverlay from '../../Common/ProgressOverlay';\nimport { formatPermission } from '../../../helpers/helpers';\nimport SuccessErrorAlert from '../../Common/SuccessErrorAlert';\n\nfunction WrappedCheckbox(key, value) {\n  return (\n    <Field\n      type=\"checkbox\"\n      component={Checkbox}\n      required\n      name={key}\n      value={value}\n      variant=\"outlined\"\n    />\n  );\n}\n\nfunction CreateRolesPresenter({\n  classes,\n  error,\n  loading,\n  success,\n  permissions,\n  validationSchema,\n  onSubmit\n}) {\n  const staffPermissions = permissions.filter(item => item !== 'REQUESTER');\n\n  return (\n    <ProgressOverlay visible={loading}>\n      <Paper className={classes.root}>\n        <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n          <Toolbar>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs>\n                <p className={classes.title}>Create Roles</p>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Grid container direction=\"column\" alignItems=\"stretch\" className={classes.wrapper}>\n          <SuccessErrorAlert success={success} error={error} />\n          <Grid item>\n            <Box px={2} pb={2}>\n              Select the permissions from the given options and give a name. Note that name of the\n              role should be&nbsp;\n              <b>unique.</b>\n              &nbsp;You have to select at least one permission from the given list.\n              <br />\n              <b>Role creation action cannot be undone.</b>\n            </Box>\n          </Grid>\n\n          <Grid item>\n            <Formik\n              initialValues={{\n                name: '',\n                permissions: []\n              }}\n              validationSchema={validationSchema}\n              onSubmit={onSubmit}\n            >\n              {({ submitForm, isSubmitting, errors, touched }) => (\n                <Form>\n                  <Grid container direction=\"column\" alignContent=\"stretch\">\n                    <Grid item>\n                      <Field\n                        className={classes.margin}\n                        component={TextField}\n                        required\n                        name=\"name\"\n                        label=\"Role Name\"\n                        variant=\"outlined\"\n                        type=\"text\"\n                        placeholder=\"DemoRole\"\n                        fullWidth\n                      />\n                    </Grid>\n                    <FormControl\n                      error={errors.permissions != null && touched.permissions != null}\n                      component=\"fieldset\"\n                      className={classes.margin}\n                    >\n                      <FormLabel component=\"legend\">Permissions*</FormLabel>\n                      <FormGroup aria-label=\"position\" row>\n                        <Grid item container className={classes.margin}>\n                          {staffPermissions.length === 0 ? (\n                            <Typography>\n                              Permission fetch failed. Please Reload the page.\n                            </Typography>\n                          ) : (\n                            ''\n                          )}\n                          {staffPermissions.map(permission => (\n                            <Grid item xs={12} sm={6} md={3} key={permission}>\n                              <FormControlLabel\n                                control={WrappedCheckbox('permissions', permission)}\n                                label={formatPermission(permission)}\n                              />\n                            </Grid>\n                          ))}\n                        </Grid>\n                      </FormGroup>\n                      {errors.permissions && touched.permissions ? (\n                        <FormHelperText>{errors.permissions}</FormHelperText>\n                      ) : (\n                        ''\n                      )}\n                    </FormControl>\n                    <Grid item>\n                      <Box py={1} textAlign=\"right\">\n                        <Button\n                          className={classes.margin}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          onClick={submitForm}\n                        >\n                          Create Role\n                        </Button>\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </Form>\n              )}\n            </Formik>\n          </Grid>\n        </Grid>\n      </Paper>\n    </ProgressOverlay>\n  );\n}\n\nCreateRolesPresenter.defaultProps = {\n  error: null,\n  success: null\n};\n\nCreateRolesPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  validationSchema: PropTypes.object.isRequired,\n  error: PropTypes.string,\n  success: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  permissions: PropTypes.array.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(CreateRolesPresenter);\n","import React, { useEffect } from 'react';\nimport * as yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CreateRolesPresenter from './CreateRoles.presenter';\nimport adminAdministrationSyncPermissions from '../../../redux/actions/AdminAdministration/adminAdministrationSyncPermissions';\nimport { adminAdministrationCreateRole } from '../../../redux/actions/AdminAdministrationActions';\n\nfunction CreateRoles() {\n  const dispatch = useDispatch();\n\n  const {\n    permissions,\n    permissionsSyncLoading,\n    permissionsSyncSuccess,\n    permissionsSyncError,\n    roleCreateLoading,\n    roleCreateSuccess,\n    roleCreateError,\n    token\n  } = useSelector(state => ({\n    ...state.adminAdministration,\n    token: state.auth.token\n  }));\n\n  useEffect(() => {\n    if (!permissionsSyncLoading && !permissionsSyncSuccess && !permissionsSyncError) {\n      dispatch(adminAdministrationSyncPermissions(token));\n    }\n  }, [token, dispatch, permissionsSyncLoading, permissionsSyncSuccess, permissionsSyncError]);\n\n  const schema = yup.object().shape({\n    name: yup.string().required('Required'),\n    permissions: yup\n      .array()\n      .min(1, 'Choose at least one')\n      .of(yup.string())\n\n      .required('Required')\n  });\n\n  const onSubmit = (values, { setSubmitting }) => {\n    const complete = () => {\n      setSubmitting(false);\n    };\n\n    dispatch(adminAdministrationCreateRole(token, values.name, values.permissions, complete));\n  };\n\n  return (\n    <CreateRolesPresenter\n      permissions={permissions}\n      error={roleCreateError || permissionsSyncError}\n      loading={roleCreateLoading || permissionsSyncLoading}\n      success={roleCreateSuccess}\n      validationSchema={schema}\n      onSubmit={onSubmit}\n    />\n  );\n}\n\nexport default CreateRoles;\n","const styles = () => ({\n  root: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  wrapper: {\n    padding: '16px'\n  }\n});\n\nexport default styles;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { AiOutlineSync, AiOutlineDelete } from 'react-icons/ai';\nimport {\n  Paper,\n  Grid,\n  withStyles,\n  Toolbar,\n  AppBar,\n  Box,\n  IconButton,\n  Tooltip,\n  Chip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button\n} from '@material-ui/core';\n\nimport styles from './DeleteRoles.styles';\nimport ProgressOverlay from '../../Common/ProgressOverlay';\nimport SuccessErrorAlert from '../../Common/SuccessErrorAlert';\nimport AdvancedTable from '../../Common/AdvancedTable';\n\nfunction DeleteRolesPresenter({ classes, roles, error, success, loading, onRefresh, onDelete }) {\n  const [selectedRole, setSelectedRole] = useState({});\n\n  const handleDialogClose = () => {\n    setSelectedRole({});\n  };\n\n  const handleDelete = () => {\n    if (selectedRole !== null) {\n      onDelete(selectedRole);\n    }\n    handleDialogClose();\n  };\n\n  return (\n    <ProgressOverlay visible={loading}>\n      <Paper className={classes.root}>\n        <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n          <Toolbar>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs>\n                <p className={classes.title}>Manage Roles</p>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Refresh Tokens List\">\n                <IconButton onClick={onRefresh}>\n                  <AiOutlineSync />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Grid container direction=\"column\" alignItems=\"stretch\" className={classes.wrapper}>\n          <SuccessErrorAlert success={success} error={error} />\n\n          <Grid item>\n            <Box px={2} pb={2}>\n              Below the list of roles in the system are given. When inviting new user, you can now\n              select the role from following list. You may also delete roles. However, currently you\n              can delete only the roles without any users.\n            </Box>\n          </Grid>\n\n          <Grid item>\n            <AdvancedTable\n              columns={[\n                { title: 'Role', field: 'name' },\n                {\n                  title: 'Permissions',\n                  type: 'numeric',\n                  sorting: false,\n                  render: row =>\n                    row.RolePermissions.map(permission => (\n                      <Chip\n                        style={{ margin: '2px' }}\n                        key={permission.name}\n                        size=\"small\"\n                        label={permission.name}\n                      />\n                    ))\n                }\n              ]}\n              actions={[\n                {\n                  icon: () => <AiOutlineDelete />,\n                  tooltip: 'Delete Role',\n                  onClick: (event, row) => setSelectedRole(row)\n                }\n              ]}\n              data={roles.map(({ id, name, RolePermissions }) => ({ id, name, RolePermissions }))}\n              title=\"\"\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Dialog\n        open={selectedRole.id != null}\n        onClose={handleDialogClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Delete Role</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            You can delete a role if and only if there are no users assigned to this role. If you\n            try to delete a role with assigned users, the action will fail.\n            <br />\n            This action cannot be undone.\n            <br />\n            <br />\n            Delete Role&nbsp;\n            <b>{selectedRole.name}</b>\n            <span>&nbsp;?</span>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDelete} color=\"primary\" autoFocus>\n            Yes\n          </Button>\n          <Button onClick={handleDialogClose} color=\"primary\">\n            No\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </ProgressOverlay>\n  );\n}\n\nDeleteRolesPresenter.defaultProps = {\n  error: null,\n  success: null\n};\n\nDeleteRolesPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  roles: PropTypes.array.isRequired,\n  error: PropTypes.string,\n  success: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  onRefresh: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(DeleteRolesPresenter);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport DeleteRolesPresenter from './DeleteRoles.presenter';\nimport {\n  adminAdministrationSyncRoles,\n  adminAdministrationDeleteRole\n} from '../../../redux/actions/AdminAdministrationActions';\n\nfunction DeleteRoles() {\n  const dispatch = useDispatch();\n  const {\n    roles,\n    rolesSyncLoading,\n    rolesSyncSuccess,\n    rolesSyncError,\n    roleDeleteError,\n    roleDeleteSuccess,\n    roleDeleteLoading,\n    token\n  } = useSelector(state => ({\n    ...state.adminAdministration,\n    token: state.auth.token\n  }));\n\n  useEffect(() => {\n    if (!rolesSyncLoading && !rolesSyncSuccess && !rolesSyncError) {\n      dispatch(adminAdministrationSyncRoles(token));\n    }\n  }, [dispatch, token, rolesSyncLoading, rolesSyncSuccess, rolesSyncError]);\n\n  const onRefresh = () => {\n    dispatch(adminAdministrationSyncRoles(token));\n  };\n\n  const onDelete = role => {\n    dispatch(adminAdministrationDeleteRole(token, role));\n  };\n\n  return (\n    <DeleteRolesPresenter\n      loading={rolesSyncLoading || roleDeleteLoading}\n      roles={roles}\n      error={roleDeleteError || rolesSyncError}\n      success={roleDeleteSuccess}\n      onRefresh={onRefresh}\n      onDelete={onDelete}\n    />\n  );\n}\n\nexport default DeleteRoles;\n","const styles = theme => ({\n  root: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  margin: {\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  wrapper: {\n    padding: '16px'\n  },\n  gridList: {\n    flexWrap: 'nowrap'\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Paper,\n  Grid,\n  withStyles,\n  Toolbar,\n  AppBar,\n  Box,\n  Button,\n  GridList,\n  GridListTile,\n  FormControlLabel,\n  IconButton\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { TextField, Switch } from 'formik-material-ui';\nimport { Formik, Form, Field, FieldArray } from 'formik';\nimport { AiOutlinePlusSquare } from 'react-icons/ai';\n\nimport styles from './CreateItemsets.styles';\nimport ImageUpload from '../../Common/ImageUpload';\nimport SuccessErrorAlert from '../../Common/SuccessErrorAlert';\n\nfunction CreateItemSetsPresenter({ classes, error, success, validationSchema, onSubmit }) {\n  return (\n    <Paper className={classes.root}>\n      <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n        <Toolbar>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item xs>\n              <p className={classes.title}>Create Itemsets</p>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <Grid container direction=\"column\" alignItems=\"stretch\" className={classes.wrapper}>\n        <SuccessErrorAlert success={success} error={error} />\n        <Grid item>\n          <Box px={2} pb={2}>\n            Provide a title, image (optional) and attribute name, value pairs.&nbsp;\n            <b>A non editable attribute should have a default value.</b>\n            When creating items, default value will be allowed to change if the field is marked as\n            editable.\n          </Box>\n        </Grid>\n        <Grid>\n          <Formik\n            initialValues={{\n              title: '',\n              image: null,\n              attributes: [\n                {\n                  key: '',\n                  defaultValue: '',\n                  editable: false\n                }\n              ]\n            }}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            {({ submitForm, isSubmitting, setFieldValue, values }) => (\n              <Form>\n                <Grid container direction=\"column\" alignContent=\"stretch\">\n                  <Grid item>\n                    <Field\n                      className={classes.margin}\n                      component={TextField}\n                      required\n                      name=\"title\"\n                      label=\"Itemset title\"\n                      variant=\"outlined\"\n                      type=\"text\"\n                      placeholder=\"title\"\n                      fullWidth\n                    />\n                  </Grid>\n                  <Box px={2} py={1}>\n                    Uploading image is optional, but will aid in identifying the item set later. The\n                    same image will be given to the items created using this item set.\n                  </Box>\n                  <Grid item>\n                    <Box pl={1} py={1}>\n                      <ImageUpload\n                        variant=\"outlined\"\n                        onSuccess={publicId => setFieldValue('image', publicId)}\n                      />\n                    </Box>\n                  </Grid>\n                  <Grid item>\n                    <Box px={2} py={1}>\n                      Key should be unique. If the key is duplicated, the later field will be used.\n                      If a field is marked an editable, default value is not required.\n                      <br />\n                      You have to enter at least one attribute.\n                    </Box>\n                  </Grid>\n                  <FieldArray\n                    name=\"attributes\"\n                    render={arrayHelpers => (\n                      <div>\n                        {values.attributes.map((attribute, index) => (\n                          <GridList key={index.toString()} cols={12} cellHeight=\"auto\">\n                            <GridListTile cols={4.75}>\n                              <Field\n                                className={classes.margin}\n                                component={TextField}\n                                required\n                                name={`attributes.${index}.key`}\n                                label=\"Attribute Name\"\n                                variant=\"outlined\"\n                                type=\"text\"\n                                placeholder=\"key\"\n                                fullWidth\n                              />\n                            </GridListTile>\n\n                            <GridListTile cols={4.75}>\n                              <Field\n                                className={classes.margin}\n                                component={TextField}\n                                required\n                                name={`attributes.${index}.defaultValue`}\n                                label=\"Default Value\"\n                                variant=\"outlined\"\n                                type=\"text\"\n                                placeholder=\"defaultValue\"\n                                fullWidth\n                              />\n                            </GridListTile>\n                            <GridListTile cols={1.75}>\n                              <Box py={2} px={2}>\n                                <FormControlLabel\n                                  control={\n                                    // eslint-disable-next-line react/jsx-wrap-multilines\n                                    <Field\n                                      component={Switch}\n                                      name={`attributes.${index}.editable`}\n                                      type=\"checkbox\"\n                                    />\n                                  }\n                                  label=\"Editable\"\n                                />\n                              </Box>\n                            </GridListTile>\n                            <GridListTile cols={0.75}>\n                              {values.attributes.length > 1 ? (\n                                <Box py={1} textAlign=\"right\">\n                                  <IconButton\n                                    className={classes.margin}\n                                    aria-label=\"delete\"\n                                    onClick={() => arrayHelpers.remove(index)}\n                                  >\n                                    <DeleteIcon />\n                                  </IconButton>\n                                </Box>\n                              ) : (\n                                ''\n                              )}\n                            </GridListTile>\n                          </GridList>\n                        ))}\n                        <Button\n                          className={classes.margin}\n                          variant=\"outlined\"\n                          startIcon={<AiOutlinePlusSquare />}\n                          onClick={() =>\n                            arrayHelpers.push({\n                              key: '',\n                              defaultValue: '',\n                              editable: false\n                            })\n                          }\n                        >\n                          Add new attribute\n                        </Button>\n                      </div>\n                    )}\n                  />\n\n                  <Grid item>\n                    <Box py={1} textAlign=\"right\">\n                      <Button\n                        className={classes.margin}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={isSubmitting}\n                        onClick={submitForm}\n                      >\n                        Create Itemset\n                      </Button>\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Form>\n            )}\n          </Formik>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nCreateItemSetsPresenter.defaultProps = {\n  error: null,\n  success: null\n};\n\nCreateItemSetsPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  success: PropTypes.string,\n  error: PropTypes.string,\n  validationSchema: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(CreateItemSetsPresenter);\n","import axios from 'axios';\nimport {\n  ADMIN_ITEM_MANAGEMENT_CREATE_ITEMSET_BEGIN,\n  ADMIN_ITEM_MANAGEMENT_CREATE_ITEMSET_FAILURE,\n  ADMIN_ITEM_MANAGEMENT_CREATE_ITEMSET_SUCCESS\n} from '../../actionTypes';\nimport { SERVER, SERVER_CREATE_ITEMSET } from '../serverConstants';\n\n/**\n * Action creator for beggining of creating itemsets\n * @returns Redux action\n */\nconst adminItemManagementCreateItemsetBegin = () => ({\n  type: ADMIN_ITEM_MANAGEMENT_CREATE_ITEMSET_BEGIN\n});\n\n/**\n * Action creator for end of creating itemsets\n * Action fired when the API call is successful\n * @returns Redux action\n */\nconst adminItemManagementCreateItemsetSuccess = success => ({\n  type: ADMIN_ITEM_MANAGEMENT_CREATE_ITEMSET_SUCCESS,\n  payload: { success }\n});\n\n/**\n * Action creator for end of creating itemsets\n * Action fired when the API cal is failed\n * @returns Redux action\n */\nconst adminItemManagementCreateItemsetFailure = error => ({\n  type: ADMIN_ITEM_MANAGEMENT_CREATE_ITEMSET_FAILURE,\n  payload: { error }\n});\n\n/**\n * Request itemset details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for user sign in API call\n */\nexport default function adminItemManagementCreateItemset(\n  token,\n  title,\n  image,\n  attributes,\n  complete\n) {\n  return async dispatch => {\n    dispatch(adminItemManagementCreateItemsetBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(adminItemManagementCreateItemsetFailure(message));\n    }\n\n    function onSuccess() {\n      try {\n        dispatch(\n          adminItemManagementCreateItemsetSuccess(`Item set '${title}' was created successfully.'`)\n        );\n      } catch (err) {\n        dispatch(\n          adminItemManagementCreateItemsetFailure(\n            'Server connection failed. Please check your connection.'\n          )\n        );\n      }\n    }\n\n    try {\n      const success = await axios.post(\n        `${SERVER}${SERVER_CREATE_ITEMSET}`,\n        { title, image, attributes },\n        { headers: { token } }\n      );\n      if (success.status !== 200) {\n        throw Error('Server responded with an error');\n      }\n      onSuccess();\n      complete();\n    } catch (error) {\n      onError(error.response);\n      complete();\n    }\n  };\n}\n","import axios from 'axios';\nimport * as yup from 'yup';\n\nimport {\n  ADMIN_ITEM_MANAGEMENT_SYNC_ITEMSETS_BEGIN,\n  ADMIN_ITEM_MANAGEMENT_SYNC_ITEMSETS_SUCCESS,\n  ADMIN_ITEM_MANAGEMENT_SYNC_ITEMSETS_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVER_GET_ITEMSETS_ALL } from '../serverConstants';\n\n/**\n * Action creator for beginning of requesting itemsets\n * @returns Redux action\n */\nconst AdminItemManagementSyncItemSetsBegin = () => ({\n  type: ADMIN_ITEM_MANAGEMENT_SYNC_ITEMSETS_BEGIN\n});\n\n/**\n * Action creator for end of requesting itemsets.\n * This is fired when API call ends in a success.\n * @param {Object} response Response data of the call\n * @param {Object[]} response.itemsets ItemSets list\n * @param {string} response.itemsets.id Id of the lab\n * @param {string} response.itemsets.title Title of the lab\n * @param {string} response.itemsets.subtitle Subtitle of the lab\n * @param {string} response.itemsets.image Image of the lab\n * @param {Date} response.itemsets.createdAt Created timestamp of the lab\n * @param {Date} response.itemsets.updatedAt Updated timestamp of the lab\n * @returns Redux action\n */\nconst AdminItemManagementSyncItemSetsSuccess = ({ itemsets }) => ({\n  type: ADMIN_ITEM_MANAGEMENT_SYNC_ITEMSETS_SUCCESS,\n  payload: { itemsets }\n});\n\n/**\n * Action creator for end of requesting itemsets.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst AdminItemManagementSyncItemSetsFailure = error => ({\n  type: ADMIN_ITEM_MANAGEMENT_SYNC_ITEMSETS_FAILURE,\n  payload: { error }\n});\n\n/**\n * Response schema used to validate response sent by the API\n */\nconst responseSchema = yup.object().shape({\n  Itemsets: yup.array().of(\n    yup.object().shape({\n      id: yup.string().required(),\n      title: yup.string().required(),\n      image: yup.string().nullable(),\n      Attributes: yup.array().of(\n        yup.object().shape({\n          key: yup.string().required(),\n          defaultValue: yup.string(),\n          editable: yup.boolean().required()\n        })\n      )\n    })\n  )\n});\n\n/**\n * Request itemsets details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for lab sign in API call\n */\nexport default function AdminItemManagementSyncItemSets(token) {\n  return async dispatch => {\n    dispatch(AdminItemManagementSyncItemSetsBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(AdminItemManagementSyncItemSetsFailure(message));\n    }\n\n    function onSuccess(success) {\n      try {\n        const { Itemsets } = responseSchema.validateSync(success.data);\n\n        dispatch(AdminItemManagementSyncItemSetsSuccess({ itemsets: Itemsets }));\n      } catch (err) {\n        dispatch(\n          AdminItemManagementSyncItemSetsFailure(\n            'Server connection failed. Please check your connection.'\n          )\n        );\n      }\n    }\n\n    try {\n      const success = await axios.get(`${SERVER}${SERVER_GET_ITEMSETS_ALL}`, {\n        headers: { token }\n      });\n      onSuccess(success);\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","import axios from 'axios';\nimport {\n  ADMIN_ITEM_MANAGEMENT_CREATE_ITEM_BEGIN,\n  ADMIN_ITEM_MANAGEMENT_CREATE_ITEM_FAILURE,\n  ADMIN_ITEM_MANAGEMENT_CREATE_ITEM_SUCCESS\n} from '../../actionTypes';\nimport { SERVER, SERVER_CREATE_ITEM } from '../serverConstants';\n\n/**\n * Action creator for beggining of creating items\n * @returns Redux action\n */\nconst adminItemManagementCreateItemBegin = () => ({\n  type: ADMIN_ITEM_MANAGEMENT_CREATE_ITEM_BEGIN\n});\n\n/**\n * Action creator for end of creating items\n * Action fired when the API call is successful\n * @returns Redux action\n */\nconst adminItemManagementCreateItemSuccess = success => ({\n  type: ADMIN_ITEM_MANAGEMENT_CREATE_ITEM_SUCCESS,\n  payload: { success }\n});\n\n/**\n * Action creator for end of creating items\n * Action fired when the API cal is failed\n * @returns Redux action\n */\nconst adminItemManagementCreateItemFailure = error => ({\n  type: ADMIN_ITEM_MANAGEMENT_CREATE_ITEM_FAILURE,\n  payload: { error }\n});\n\n/**\n * Request item details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for user sign in API call\n */\nexport default function adminItemManagementCreateItem(\n  token,\n  serialNumber,\n  itemSetId,\n  labId,\n  attributes,\n  complete\n) {\n  return async dispatch => {\n    dispatch(adminItemManagementCreateItemBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(adminItemManagementCreateItemFailure(message));\n    }\n\n    function onSuccess() {\n      try {\n        dispatch(\n          adminItemManagementCreateItemSuccess(`Item '${serialNumber}' was created successfully.'`)\n        );\n      } catch (err) {\n        dispatch(\n          adminItemManagementCreateItemFailure(\n            'Server connection failed. Please check your connection.'\n          )\n        );\n      }\n    }\n\n    try {\n      const success = await axios.post(\n        `${SERVER}${SERVER_CREATE_ITEM}`,\n        { serialNumber, itemSetId, labId, attributes },\n        { headers: { token } }\n      );\n      if (success.status !== 200) {\n        throw Error('Server responded with an error');\n      }\n      onSuccess();\n      complete();\n    } catch (error) {\n      onError(error.response);\n      complete();\n    }\n  };\n}\n","import axios from 'axios';\nimport * as yup from 'yup';\n\nimport {\n  ADMIN_ITEM_MANAGEMENT_SYNC_ITEMS_BEGIN,\n  ADMIN_ITEM_MANAGEMENT_SYNC_ITEMS_SUCCESS,\n  ADMIN_ITEM_MANAGEMENT_SYNC_ITEMS_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVER_GET_ITEMS_ALL } from '../serverConstants';\n\n/**\n * Action creator for beginning of requesting items\n * @returns Redux action\n */\nconst AdminItemManagementSyncItemsBegin = () => ({\n  type: ADMIN_ITEM_MANAGEMENT_SYNC_ITEMS_BEGIN\n});\n\n/**\n * Action creator for end of requesting items.\n * This is fired when API call ends in a success.\n * @param {Object} response Response data of the call\n * @param {Object[]} response.items ItemSets list\n * @param {string} response.items.id Id of the item\n * @param {string} response.items.serialNumber serialNumber of the item\n * @param {Object} response.items.Itemset Itemset of the item\n * @param {Object} response.items.Lab Lab of the item\n * @returns Redux action\n */\nconst AdminItemManagementSyncItemsSuccess = ({ items }) => ({\n  type: ADMIN_ITEM_MANAGEMENT_SYNC_ITEMS_SUCCESS,\n  payload: { items }\n});\n\n/**\n * Action creator for end of requesting items.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst AdminItemManagementSyncItemsFailure = error => ({\n  type: ADMIN_ITEM_MANAGEMENT_SYNC_ITEMS_FAILURE,\n  payload: { error }\n});\n\n/**\n * Response schema used to validate response sent by the API\n */\nconst responseSchema = yup.object().shape({\n  items: yup.array().of(\n    yup.object().shape({\n      id: yup.string().required(),\n      serialNumber: yup.string().required(),\n      ItemSet: yup\n        .object()\n        .shape({\n          id: yup.string().required(),\n          title: yup.string().required(),\n          image: yup.string().nullable()\n        })\n        .required(),\n      Lab: yup\n        .object()\n        .shape({\n          id: yup.string().required(),\n          title: yup.string().required(),\n          subtitle: yup.string().required(),\n          image: yup.string().nullable()\n        })\n        .required(),\n      ItemAttributes: yup.array().of(\n        yup.object().shape({\n          key: yup.string().required()\n        })\n      )\n    })\n  )\n});\n\n/**\n * Request items details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for lab sign in API call\n */\nexport default function AdminItemManagementSyncItems(token) {\n  return async dispatch => {\n    dispatch(AdminItemManagementSyncItemsBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(AdminItemManagementSyncItemsFailure(message));\n    }\n\n    function onSuccess(success) {\n      try {\n        const { items } = responseSchema.validateSync(success.data);\n\n        dispatch(AdminItemManagementSyncItemsSuccess({ items }));\n      } catch (err) {\n        dispatch(\n          AdminItemManagementSyncItemsFailure(\n            `Server connection failed. Please check your connection.${err}`\n          )\n        );\n      }\n    }\n\n    try {\n      const success = await axios.get(`${SERVER}${SERVER_GET_ITEMS_ALL}`, {\n        headers: { token }\n      });\n      onSuccess(success);\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","import axios from 'axios';\nimport * as yup from 'yup';\n\nimport {\n  ADMIN_ITEM_MANAGEMENT_SYNC_LENT_ITEMS_BEGIN,\n  ADMIN_ITEM_MANAGEMENT_SYNC_LENT_ITEMS_SUCCESS,\n  ADMIN_ITEM_MANAGEMENT_SYNC_LENT_ITEMS_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVER_SYNC_LENTITEMS_TEMP } from '../serverConstants';\n\n/**\n * Action creator for beginning of requesting lent items\n * @returns Redux action\n */\nconst AdminItemManagementSyncLentItemsBegin = () => ({\n  type: ADMIN_ITEM_MANAGEMENT_SYNC_LENT_ITEMS_BEGIN\n});\n\n/**\n * Action creator for end of requesting lent items.\n * This is fired when API call ends in a success.\n * @param {Object} response Response data of the call\n * @param {Object[]} response.lentItems lent items list\n * @param {string} response.lentItems.id Id of the item\n * @param {string} response.items.serialNumber serialNumber of the item\n * @param {Object} response.items.Itemset Itemset of the item\n * @param {Object} response.items.Lab Lab of the item\n * @returns Redux action\n */\nconst AdminItemManagementSyncLentItemsSuccess = ({ lentItems }) => ({\n  type: ADMIN_ITEM_MANAGEMENT_SYNC_LENT_ITEMS_SUCCESS,\n  payload: { lentItems }\n});\n\n/**\n * Action creator for end of requesting items.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst AdminItemManagementSyncLentItemsFailure = error => ({\n  type: ADMIN_ITEM_MANAGEMENT_SYNC_LENT_ITEMS_FAILURE,\n  payload: { error }\n});\n\n/**\n * Response schema used to validate response sent by the API\n */\nconst responseSchema = yup.object().shape({\n  lentItems: yup.array().of(\n    yup.object().shape({\n      id: yup.string().required(),\n      title: yup.string().required(),\n      image: yup.string().nullable(),\n      requests: yup.array().of(\n        yup.object().shape({\n          id: yup.string().required(),\n          itemId: yup.string().required(),\n          studentId: yup.string().required(),\n          dueTime: yup.date().required(),\n          borrowedTime: yup.date().required(),\n          status: yup.string().required(),\n          Item: yup.object().shape({\n            serialNumber: yup.string().required(),\n            ItemSet: yup.object().shape({\n              title: yup.string().required(),\n              image: yup.string().nullable()\n            })\n          })\n        })\n      )\n    })\n  )\n});\n\n/**\n * Request items details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for lab sign in API call\n */\nexport default function AdminItemManagementSyncLentItems(token) {\n  return async dispatch => {\n    dispatch(AdminItemManagementSyncLentItemsBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(AdminItemManagementSyncLentItemsFailure(message));\n    }\n\n    function onSuccess(success) {\n      try {\n        const { lentItems } = responseSchema.validateSync(success);\n        const items = [];\n        lentItems.forEach(lab => {\n          const labData = {\n            id: lab.id,\n            title: lab.title,\n            image: lab.image\n          };\n          lab.requests.forEach(request => {\n            items.push({\n              lab: labData,\n              request\n            });\n          });\n        });\n\n        dispatch(AdminItemManagementSyncLentItemsSuccess({ lentItems: items }));\n      } catch (err) {\n        dispatch(\n          AdminItemManagementSyncLentItemsFailure(\n            `Server connection failed. Please check your connection.${err}`\n          )\n        );\n      }\n    }\n\n    try {\n      const success = await axios.get(`${SERVER}${SERVER_SYNC_LENTITEMS_TEMP}`, {\n        headers: { token }\n      });\n      onSuccess(success.data);\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","import axios from 'axios';\n// import * as yup from 'yup';\n\nimport {\n  ADMIN_ITEM_MANAGEMENT_SYNC_ITEM_REQUESTS_BEGIN,\n  ADMIN_ITEM_MANAGEMENT_SYNC_ITEM_REQUESTS_FAILURE,\n  ADMIN_ITEM_MANAGEMENT_SYNC_ITEM_REQUESTS_SUCCESS\n} from '../../actionTypes';\nimport { SERVER, SERVER_SYNC_ITEM_REQUESTS_ALL, SERVER_GET_USER_LABS } from '../serverConstants';\n\n/**\n * Action creator for beginning of requesting lent items\n * @returns Redux action\n */\nconst AdminItemManagementSyncItemRequestsBegin = () => ({\n  type: ADMIN_ITEM_MANAGEMENT_SYNC_ITEM_REQUESTS_BEGIN\n});\n\n/**\n * Action creator for end of requesting lent items.\n * This is fired when API call ends in a success.\n * @param {Object} response Response data of the call\n * @param {Object[]} response.lentItems lent items list\n * @param {string} response.lentItems.id Id of the item\n * @param {string} response.items.serialNumber serialNumber of the item\n * @param {Object} response.items.Itemset Itemset of the item\n * @param {Object} response.items.Lab Lab of the item\n * @returns Redux action\n */\nconst AdminItemManagementSyncItemRequestsSuccess = ({ itemRequests }) => ({\n  type: ADMIN_ITEM_MANAGEMENT_SYNC_ITEM_REQUESTS_SUCCESS,\n  payload: { itemRequests }\n});\n\n/**\n * Action creator for end of requesting items.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst AdminItemManagementSyncItemRequestsFailure = error => ({\n  type: ADMIN_ITEM_MANAGEMENT_SYNC_ITEM_REQUESTS_FAILURE,\n  payload: { error }\n});\n\n/**\n * item requests details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for sync item requests in API call\n */\nexport default function AdminItemManagementSyncItemRequests(userId, token) {\n  return async dispatch => {\n    dispatch(AdminItemManagementSyncItemRequestsBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(AdminItemManagementSyncItemRequestsFailure(message));\n    }\n\n    function onSuccess(itemRequests) {\n      dispatch(AdminItemManagementSyncItemRequestsSuccess({ itemRequests }));\n    }\n\n    try {\n      const successGetLabs = await axios.get(`${SERVER}${SERVER_GET_USER_LABS}`, {\n        headers: { token }\n      });\n\n      const { labs } = successGetLabs.data;\n      const itemRequests = [];\n      const resolvedValues = await Promise.all(\n        labs.map(({ id }) =>\n          axios.get(`${SERVER}${SERVER_SYNC_ITEM_REQUESTS_ALL}/${id}`, {\n            headers: { token }\n          })\n        )\n      );\n      resolvedValues.forEach(value => {\n        const { data } = value;\n        data.forEach(entry => itemRequests.push(entry));\n      });\n\n      onSuccess(itemRequests);\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","import axios from 'axios';\n\nimport {\n  ADMIN_ITEM_MANAGEMENT_BORROW_ITEM_BEGIN,\n  ADMIN_ITEM_MANAGEMENT_BORROW_ITEM_FAILURE,\n  ADMIN_ITEM_MANAGEMENT_BORROW_ITEM_SUCCESS\n} from '../../actionTypes';\nimport { SERVER, SERVER_LEND_ITEM, SERVER_RETURN_ITEM } from '../serverConstants';\nimport AdminItemManagementSyncItemRequests from './adminItemManagementSyncItemRequests';\n\n/**\n * Action creator for beginning of requesting lent items\n * @returns Redux action\n */\nconst AdminItemManagementBorrowItemBegin = () => ({\n  type: ADMIN_ITEM_MANAGEMENT_BORROW_ITEM_BEGIN\n});\n\n/**\n * Action creator for end of requesting lent items.\n * This is fired when API call ends in a success.\n * @param {Object} response Response data of the call\n * @returns Redux action\n */\nconst AdminItemManagementBorrowItemSuccess = success => ({\n  type: ADMIN_ITEM_MANAGEMENT_BORROW_ITEM_SUCCESS,\n  payload: { success }\n});\n\n/**\n * Action creator for end of requesting items.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst AdminItemManagementBorrowItemFailure = error => ({\n  type: ADMIN_ITEM_MANAGEMENT_BORROW_ITEM_FAILURE,\n  payload: { error }\n});\n\n/**\n * item requests details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @returns Thunk for sync item requests in API call\n */\nexport default function AdminItemManagementBorrowItem(userId, itemId, requestId, status, token) {\n  return async dispatch => {\n    dispatch(AdminItemManagementBorrowItemBegin());\n\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(AdminItemManagementBorrowItemFailure(message));\n    }\n\n    function onSuccess() {\n      if (status === 'ACCEPTED') {\n        dispatch(AdminItemManagementBorrowItemSuccess('Item successfully lent.'));\n      } else {\n        dispatch(AdminItemManagementBorrowItemSuccess('Item successfully received.'));\n      }\n      dispatch(AdminItemManagementSyncItemRequests(userId, token));\n    }\n\n    let endPoint;\n    if (status === 'ACCEPTED') {\n      endPoint = `${SERVER}${SERVER_LEND_ITEM}`;\n    } else {\n      endPoint = `${SERVER}${SERVER_RETURN_ITEM}`;\n    }\n\n    try {\n      const success = await axios.post(\n        endPoint,\n        { itemId, requestId },\n        {\n          headers: { token }\n        }\n      );\n      if (success.status !== 200) {\n        throw Error('Server responded with an error');\n      }\n\n      onSuccess();\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","import React from 'react';\nimport * as yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport CreateItemSetsPresenter from './CreateItemsets.presenter';\nimport { adminItemManagementCreateItemset } from '../../../redux/actions/AdminItemManagementActions';\n\nfunction CreateItemsets() {\n  const dispatch = useDispatch();\n\n  const { createItemsetError, createItemsetLoading, createItemsetSuccess, token } = useSelector(\n    state => ({\n      ...state.adminItemManagement,\n      token: state.auth.token\n    })\n  );\n\n  const schema = yup.object().shape({\n    title: yup.string().required('Required'),\n    image: yup.string().nullable(),\n    attributes: yup\n      .array()\n      .of(\n        yup\n          .object()\n          .shape({\n            editable: yup.boolean(),\n            key: yup.string().required('Required'),\n            defaultValue: yup.string().when('editable', {\n              is: false,\n              then: yup.string().required('Required')\n            })\n          })\n          .required('Required')\n      )\n      .required()\n      .min(1, 'Choose at least one')\n  });\n\n  const onSubmit = async (values, { setSubmitting }) => {\n    const complete = () => {\n      setSubmitting(false);\n    };\n\n    await dispatch(\n      adminItemManagementCreateItemset(\n        token,\n        values.title,\n        values.image,\n        values.attributes,\n        complete\n      )\n    );\n  };\n  return (\n    <CreateItemSetsPresenter\n      validationSchema={schema}\n      onSubmit={onSubmit}\n      error={createItemsetError}\n      success={createItemsetSuccess}\n      loading={createItemsetLoading}\n    />\n  );\n}\n\nexport default CreateItemsets;\n","const styles = () => ({\n  root: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  wrapper: {\n    padding: '16px'\n  },\n  image: {\n    borderRadius: 8,\n    width: '50px'\n  }\n});\n\nexport default styles;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { AiOutlineSync, AiOutlineCode, AiOutlineEdit, AiOutlineLock } from 'react-icons/ai';\nimport {\n  Paper,\n  Grid,\n  withStyles,\n  Toolbar,\n  AppBar,\n  Box,\n  IconButton,\n  Tooltip,\n  Dialog,\n  DialogTitle,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  DialogActions,\n  Button\n} from '@material-ui/core';\nimport { Image } from 'cloudinary-react';\n\nimport styles from './ViewItemSets.styles';\nimport ProgressOverlay from '../../Common/ProgressOverlay';\nimport SuccessErrorAlert from '../../Common/SuccessErrorAlert';\nimport AdvancedTable from '../../Common/AdvancedTable';\nimport { capitalizeFirstLetter } from '../../../helpers/helpers';\n\nconst placeholder = 'https://via.placeholder.com/50';\n\nfunction ViewItemSetsPresenter({ classes, itemSets, error, loading, onRefresh }) {\n  const [open, setOpen] = useState(false);\n  const [attributes, setAttributes] = useState([]);\n\n  const openDialog = itemset => () => {\n    setAttributes(itemset.Attributes);\n    setOpen(true);\n  };\n\n  const closeDialog = () => setOpen(false);\n\n  const dialogExited = () => {\n    setOpen(false);\n    setAttributes([]);\n  };\n\n  return (\n    <ProgressOverlay visible={loading}>\n      <Paper className={classes.root}>\n        <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n          <Toolbar>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs>\n                <p className={classes.title}>View Item Sets</p>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Refresh Tokens List\">\n                <IconButton onClick={onRefresh}>\n                  <AiOutlineSync />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Grid container direction=\"column\" alignItems=\"stretch\" className={classes.wrapper}>\n          <SuccessErrorAlert success={null} error={error} />\n\n          <Grid item>\n            <Box px={2} pb={2}>\n              Below the list of itemSets in the system are given.\n            </Box>\n          </Grid>\n\n          <Grid item>\n            <AdvancedTable\n              columns={[\n                {\n                  field: 'title',\n                  sorting: false,\n                  render: row => (\n                    <ListItem>\n                      <ListItemAvatar>\n                        <Avatar variant=\"rounded\" alt={row.id}>\n                          {row.image == null ? (\n                            <img src={placeholder} className={classes.image} alt={row.id} />\n                          ) : (\n                            <Image publicId={row.image} className={classes.image} />\n                          )}\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText primary={row.title} />\n                    </ListItem>\n                  )\n                },\n                {\n                  title: '',\n                  type: 'numeric',\n                  sorting: false,\n                  render: row => (\n                    <Button\n                      variant=\"outlined\"\n                      disabled={row.Attributes.length === 0}\n                      onClick={openDialog(row)}\n                      startIcon={<AiOutlineCode />}\n                    >\n                      Attributes\n                    </Button>\n                  )\n                }\n              ]}\n              data={itemSets.map(({ id, title, image, Attributes }) => ({\n                id,\n                title: capitalizeFirstLetter(title),\n                image,\n                Attributes\n              }))}\n              title=\"\"\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Dialog open={open} onClose={closeDialog} onExited={dialogExited} scroll=\"paper\" fullWidth>\n        <DialogTitle>Item set attributes</DialogTitle>\n        <List>\n          {attributes.map(attrib => (\n            <ListItem key={attrib.key}>\n              <ListItemAvatar>\n                <Avatar className={classes.avatar}>\n                  {attrib.editable ? <AiOutlineEdit /> : <AiOutlineLock />}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={attrib.key} secondary={attrib.defaultValue} />\n            </ListItem>\n          ))}\n        </List>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </ProgressOverlay>\n  );\n}\n\nViewItemSetsPresenter.defaultProps = {\n  error: null\n};\n\nViewItemSetsPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  itemSets: PropTypes.array.isRequired,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  onRefresh: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ViewItemSetsPresenter);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ViewItemSetsPresenter from './ViewItemSets.presenter';\nimport { adminItemManagementSyncItemsets } from '../../../redux/actions/AdminItemManagementActions';\n\nfunction ViewItemSets() {\n  const dispatch = useDispatch();\n  const {\n    syncedItemsets,\n    itemSetsSyncLoading,\n    itemSetsSyncSuccess,\n    itemSetsSyncError,\n    token\n  } = useSelector(state => ({\n    ...state.adminItemManagement,\n    token: state.auth.token\n  }));\n\n  useEffect(() => {\n    if (!itemSetsSyncLoading && !itemSetsSyncSuccess && !itemSetsSyncError) {\n      dispatch(adminItemManagementSyncItemsets(token));\n    }\n  }, [dispatch, token, itemSetsSyncLoading, itemSetsSyncSuccess, itemSetsSyncError]);\n\n  const onRefresh = () => {\n    dispatch(adminItemManagementSyncItemsets(token));\n  };\n\n  return (\n    <ViewItemSetsPresenter\n      loading={itemSetsSyncLoading}\n      itemSets={syncedItemsets}\n      error={itemSetsSyncError}\n      onRefresh={onRefresh}\n    />\n  );\n}\n\nexport default ViewItemSets;\n","const styles = () => ({\n  root: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  wrapper: {\n    padding: '16px'\n  },\n  image: {\n    borderRadius: 8,\n    width: '50px'\n  }\n});\n\nexport default styles;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { AiOutlineSync, AiOutlineCode } from 'react-icons/ai';\nimport {\n  Paper,\n  Grid,\n  withStyles,\n  Toolbar,\n  AppBar,\n  Box,\n  IconButton,\n  Tooltip,\n  Dialog,\n  DialogTitle,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  DialogActions,\n  Button\n} from '@material-ui/core';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport { Image } from 'cloudinary-react';\n\nimport styles from './ViewItems.styles';\nimport ProgressOverlay from '../../Common/ProgressOverlay';\nimport SuccessErrorAlert from '../../Common/SuccessErrorAlert';\nimport AdvancedTable from '../../Common/AdvancedTable';\n\nconst placeholder = 'https://via.placeholder.com/50';\n\nfunction ViewItemsPresenter({ classes, items, error, loading, onRefresh }) {\n  const [attributes, setAttributes] = useState([]);\n\n  const openDialog = item => () => setAttributes(item.ItemAttributes);\n\n  const closeDialog = () => setAttributes([]);\n\n  return (\n    <ProgressOverlay visible={loading}>\n      <Paper className={classes.root}>\n        <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n          <Toolbar>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs>\n                <p className={classes.title}>View Items</p>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Refresh Item List\">\n                <IconButton onClick={onRefresh}>\n                  <AiOutlineSync />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Grid container direction=\"column\" alignItems=\"stretch\" className={classes.wrapper}>\n          <SuccessErrorAlert success={null} error={error} />\n\n          <Grid item>\n            <Box px={2} pb={2}>\n              Below the list of items in the system are given.\n            </Box>\n          </Grid>\n\n          <Grid item>\n            <AdvancedTable\n              columns={[\n                {\n                  title: 'Serial Number',\n                  field: 'serialNumber',\n                  cellStyle: { paddingLeft: '0px' },\n                  sorting: false,\n                  render: row => (\n                    <ListItem>\n                      <ListItemText primary={row.serialNumber} />\n                    </ListItem>\n                  )\n                },\n                {\n                  title: 'Itemset',\n                  field: 'Itemset',\n                  cellStyle: { paddingLeft: '0px' },\n                  sorting: false,\n                  render: row => (\n                    <ListItem>\n                      <ListItemAvatar>\n                        <Avatar variant=\"rounded\" alt={row.ItemSet.id}>\n                          {row.ItemSet.image == null ? (\n                            <img src={placeholder} className={classes.image} alt={row.id} />\n                          ) : (\n                            <Image publicId={row.ItemSet.image} className={classes.image} />\n                          )}\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText primary={row.ItemSet.title} />\n                    </ListItem>\n                  )\n                },\n                {\n                  title: 'Lab',\n                  field: 'Lab',\n                  cellStyle: { paddingLeft: '0px' },\n                  sorting: false,\n                  render: row => (\n                    <ListItem>\n                      <ListItemAvatar>\n                        <Avatar variant=\"rounded\" alt={row.Lab.id}>\n                          {row.Lab.image == null ? (\n                            <img src={placeholder} className={classes.image} alt={row.id} />\n                          ) : (\n                            <Image publicId={row.Lab.image} className={classes.image} />\n                          )}\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText primary={row.Lab.title} />\n                    </ListItem>\n                  )\n                },\n                {\n                  title: 'Attributes',\n                  type: 'numeric',\n                  cellStyle: { paddingLeft: '0px' },\n                  sorting: false,\n                  render: row => (\n                    <Button\n                      variant=\"outlined\"\n                      disabled={row.ItemAttributes.length === 0}\n                      onClick={openDialog(row)}\n                      startIcon={<AiOutlineCode />}\n                    >\n                      Attributes\n                    </Button>\n                  )\n                }\n              ]}\n              data={items.map(({ id, serialNumber, ItemSet, Lab, ItemAttributes }) => ({\n                id,\n                serialNumber,\n                ItemSet,\n                Lab,\n                ItemAttributes\n              }))}\n              title=\"\"\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Dialog open={attributes.length !== 0} onClose={closeDialog} scroll=\"paper\">\n        <DialogTitle>Item attributes</DialogTitle>\n        <List>\n          {attributes.map(attrib => (\n            <ListItem key={attrib.key}>\n              <ListItemAvatar>\n                <Avatar className={classes.avatar}>\n                  <AssignmentIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={attrib.key} secondary={attrib.value} />\n            </ListItem>\n          ))}\n        </List>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </ProgressOverlay>\n  );\n}\n\nViewItemsPresenter.defaultProps = {\n  error: null\n};\n\nViewItemsPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  items: PropTypes.array.isRequired,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  onRefresh: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ViewItemsPresenter);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ViewItemsPresenter from './ViewItems.presenter';\nimport { adminItemManagementSyncItems } from '../../../redux/actions/AdminItemManagementActions';\n\nfunction ViewItems() {\n  const dispatch = useDispatch();\n  const { syncedItems, itemsSyncLoading, itemsSyncSuccess, itemsSyncError, token } = useSelector(\n    state => ({\n      ...state.adminItemManagement,\n      token: state.auth.token\n    })\n  );\n  useEffect(() => {\n    if (!itemsSyncLoading && !itemsSyncSuccess && !itemsSyncError) {\n      dispatch(adminItemManagementSyncItems(token));\n    }\n  }, [dispatch, token, itemsSyncLoading, itemsSyncSuccess, itemsSyncError]);\n\n  const onRefresh = () => {\n    dispatch(adminItemManagementSyncItems(token));\n  };\n\n  return (\n    <ViewItemsPresenter\n      loading={itemsSyncLoading}\n      items={syncedItems}\n      error={itemsSyncError}\n      onRefresh={onRefresh}\n    />\n  );\n}\n\nexport default ViewItems;\n","const styles = theme => ({\n  root: {\n    padding: 15,\n    maxWidth: 936,\n    margin: 'auto'\n    // overFlow: 'scroll'\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  margin: {\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  },\n  cardViewWrapper: {\n    padding: 10\n  },\n  emptyGrid: {\n    width: '100%',\n    height: 100\n  },\n  image: {\n    borderRadius: 8,\n    width: '50px'\n  }\n});\n\nexport default styles;\n","/* eslint-disable react/no-unused-prop-types */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Paper,\n  Grid,\n  withStyles,\n  AppBar,\n  Toolbar,\n  Tooltip,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  Button,\n  Box\n} from '@material-ui/core';\nimport {\n  AiOutlineSync,\n  AiOutlineUserAdd,\n  AiOutlineUserDelete,\n  AiOutlineUser\n} from 'react-icons/ai';\nimport { Image } from 'cloudinary-react';\nimport styles from './AssignStaff.styles';\nimport ProgressOverlay from '../../Common/ProgressOverlay';\nimport SuccessErrorAlert from '../../Common/SuccessErrorAlert';\nimport AdvancedTable from '../../Common/AdvancedTable';\n\nconst placeholder = 'https://via.placeholder.com/50';\n\nfunction AssignStaffPresenter({\n  classes,\n  labs,\n  onRefresh,\n  loading,\n  error,\n  successAssign,\n  onAssigned,\n  onUnassigned,\n  managers\n}) {\n  const [openUnassigned, setOpenUnassigned] = useState(false);\n  const [openAssigned, setopenAssigned] = useState(false);\n  const [selectedLab, setSelectedLab] = useState({ Users: [], id: null });\n\n  const handleUnassignedDialogClose = () => {\n    setOpenUnassigned(false);\n  };\n\n  const handleAssignedDialogClose = () => {\n    setopenAssigned(false);\n  };\n\n  const handleSelectedLabUnassigned = lab => {\n    setSelectedLab(lab);\n    setOpenUnassigned(true);\n  };\n\n  const handleSelectedLabAssigned = lab => {\n    setSelectedLab(lab);\n    setopenAssigned(true);\n  };\n\n  const handleDialogClose = () => {\n    setopenAssigned(false);\n    setOpenUnassigned(false);\n    setSelectedLab({ Users: [], id: null });\n  };\n\n  const onClickAssign = Id => () => {\n    onAssigned(selectedLab.id, Id);\n    handleDialogClose();\n  };\n\n  const onClickUnassign = Id => () => {\n    onUnassigned(selectedLab.id, Id);\n    handleDialogClose();\n  };\n\n  const selectedLabManagers = {};\n  selectedLab.Users.forEach(user => {\n    selectedLabManagers[user.id] = user;\n  });\n  const availableManagers = {};\n  managers.forEach(manager => {\n    if (selectedLabManagers[manager.id] == null) {\n      // Not in the selected lab\n      availableManagers[manager.id] = manager;\n    }\n  });\n\n  return (\n    <ProgressOverlay visible={loading}>\n      <Paper className={classes.root}>\n        <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n          <Toolbar>\n            <Grid container spacing={2}>\n              <Grid item xs>\n                <p className={classes.title}>Assign Staff Managers</p>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Refresh Labs\">\n                <IconButton onClick={onRefresh}>\n                  <AiOutlineSync />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n\n        <Grid container direction=\"column\" alignItems=\"stretch\">\n          <SuccessErrorAlert success={successAssign || null} error={error} />\n          <Grid item>\n            <AdvancedTable\n              columns={[\n                {\n                  field: 'image',\n                  sorting: false,\n                  title: 'Image',\n                  render: row =>\n                    row.image == null ? (\n                      <img src={placeholder} className={classes.image} alt={row.id} />\n                    ) : (\n                      <Image publicId={row.image} className={classes.image} />\n                    )\n                },\n                {\n                  title: 'Title',\n                  field: 'title',\n                  sorting: true\n                },\n                {\n                  title: 'Subtitle',\n                  field: 'subtitle',\n                  sorting: true\n                }\n              ]}\n              actions={[\n                {\n                  icon: () => <AiOutlineUserAdd />,\n                  tooltip: 'Assign User',\n                  onClick: (event, row) => {\n                    handleSelectedLabAssigned(row);\n                  }\n                },\n                rowData => ({\n                  icon: () => <AiOutlineUserDelete />,\n                  disabled: rowData.Users.length === 0,\n                  tooltip: 'Unassign User',\n                  onClick: (event, row) => {\n                    handleSelectedLabUnassigned(row);\n                  }\n                })\n              ]}\n              options={{\n                actionsColumnIndex: -1\n              }}\n              data={labs.map(({ id, Users, image, subtitle, title }) => ({\n                id,\n                Users,\n                image,\n                subtitle,\n                title\n              }))}\n              title=\"\"\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Dialog\n        onClose={handleUnassignedDialogClose}\n        onExited={handleDialogClose}\n        aria-labelledby=\"unassigned-dialog-title\"\n        open={openUnassigned}\n        fullWidth\n      >\n        <DialogTitle id=\"unassigned-dialog-title\">Unassign Staff Members</DialogTitle>\n        <List>\n          {Object.values(selectedLabManagers).length === 0 && (\n            <Box p={3}>No managers to display</Box>\n          )}\n          {Object.values(selectedLabManagers).map(user => {\n            return (\n              <ListItem key={user.id}>\n                <ListItemAvatar>\n                  <Avatar>\n                    <AiOutlineUser />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${user.firstName} ${user.lastName}`}\n                  secondary={user.email}\n                />\n                <ListItemSecondaryAction>\n                  <Button color=\"secondary\" variant=\"contained\" onClick={onClickUnassign(user.id)}>\n                    Unassign\n                  </Button>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>\n      </Dialog>\n\n      <Dialog\n        onClose={handleAssignedDialogClose}\n        onExited={handleDialogClose}\n        aria-labelledby=\"assigned-dialog-title\"\n        open={openAssigned}\n        fullWidth\n      >\n        <DialogTitle id=\"assigned-dialog-title\">Assign Staff Members</DialogTitle>\n        <List>\n          {Object.values(availableManagers).length === 0 && <Box p={3}>No managers to display</Box>}\n          {Object.values(availableManagers).map(user => {\n            return (\n              <ListItem key={user.id}>\n                <ListItemAvatar>\n                  <Avatar>\n                    <AiOutlineUser />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={`${user.firstName} ${user.lastName}`}\n                  secondary={user.email}\n                />\n                <ListItemSecondaryAction>\n                  <Button color=\"secondary\" variant=\"contained\" onClick={onClickAssign(user.id)}>\n                    Assign\n                  </Button>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>\n      </Dialog>\n    </ProgressOverlay>\n  );\n}\nAssignStaffPresenter.defaultProps = {\n  error: null,\n  successAssign: null\n};\n\nAssignStaffPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  labs: PropTypes.array.isRequired,\n  managers: PropTypes.array.isRequired,\n  onRefresh: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  // eslint-disable-next-line react/no-unused-prop-types\n  onAssigned: PropTypes.func.isRequired,\n  // eslint-disable-next-line react/no-unused-prop-types\n  onUnassigned: PropTypes.func.isRequired,\n  successAssign: PropTypes.string\n};\n\nexport default withStyles(styles)(AssignStaffPresenter);\n","import io from 'socket.io-client';\nimport { SERVER } from '../serverConstants';\nimport {\n  SOCKET_START_ON_CONNECT,\n  SOCKET_START_ON_DISCONNECT,\n  SOCKET_START_ON_DEVICE_MESSAGE,\n  SOCKET_START_ON_DEVICE_CONNECT,\n  SOCKET_START_ON_DEVICE_DISCONNECT,\n  SOCKET_START_BEGIN\n} from '../../actionTypes';\n\nconst socketStartBegin = () => ({\n  type: SOCKET_START_BEGIN\n});\n\nconst socketStartOnConnect = () => ({\n  type: SOCKET_START_ON_CONNECT\n});\n\nconst socketStartOnDisconnect = () => ({\n  type: SOCKET_START_ON_DISCONNECT\n});\n\nconst socketStartOnDeviceMessage = data => ({\n  type: SOCKET_START_ON_DEVICE_MESSAGE,\n  payload: data\n});\n\nconst socketStartOnDeviceConnect = data => ({\n  type: SOCKET_START_ON_DEVICE_CONNECT,\n  payload: data\n});\n\nconst socketStartOnDeviceDisconnect = data => ({\n  type: SOCKET_START_ON_DEVICE_DISCONNECT,\n  payload: data\n});\n\nlet socket;\n\nconst socketStart = token => {\n  return async dispatch => {\n    if (socket) {\n      try {\n        socket.disconnect();\n      } catch (err) {\n        // Ignore\n      }\n    }\n\n    dispatch(socketStartBegin());\n\n    socket = io(`${SERVER}/staff`, {\n      query: {\n        client: 'web',\n        token\n      }\n    });\n\n    const handleEvent = ({ type, client, data, timestamp }) => {\n      if (client !== 'mobile') return;\n\n      if (type === 'connect') {\n        dispatch(socketStartOnDeviceConnect({ timestamp }));\n      } else if (type === 'disconnect') {\n        dispatch(socketStartOnDeviceDisconnect({ timestamp }));\n      } else if (type === 'message') {\n        dispatch(socketStartOnDeviceMessage({ data, timestamp }));\n      }\n    };\n\n    socket.on('connect', () => dispatch(socketStartOnConnect()));\n    socket.on('server#message', handleEvent);\n    socket.on('disconnect', () => dispatch(socketStartOnDisconnect()));\n  };\n};\n\nconst socketEnd = () => {\n  return async () => {\n    if (socket) {\n      try {\n        socket.disconnect();\n      } catch (err) {\n        // Ignore\n      }\n    }\n  };\n};\n\nexport { socketStart, socketEnd };\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport AssignStaffPresenter from './AssignStaff.presenter';\nimport {\n  adminLabManagementSyncLabs,\n  adminLabManagementSyncInventoryUsers,\n  adminLabAssignStaff,\n  adminLabManagementUnassignStaff\n} from '../../../redux/actions/AdminLabManagementActions';\n\nconst AssignStaff = () => {\n  const dispatch = useDispatch();\n  const {\n    labs,\n    managers,\n    labsSyncLoading,\n    labsSyncSuccess,\n    labsSyncError,\n    managersSyncLoading,\n    managersSyncSuccess,\n    managersSyncError,\n    labAssignLoading,\n    labAssignError,\n    labAssignSuccess,\n    labUnAssignLoading,\n    labUnAssignError,\n    labUnAssignSuccess,\n    token\n  } = useSelector(state => ({\n    ...state.adminLabManagement,\n    token: state.auth.token\n  }));\n\n  useEffect(() => {\n    if (!labsSyncLoading && !labsSyncSuccess && !labsSyncError) {\n      dispatch(adminLabManagementSyncLabs(token));\n    }\n    if (!managersSyncLoading && !managersSyncSuccess && !managersSyncError) {\n      dispatch(adminLabManagementSyncInventoryUsers(token));\n    }\n  }, [\n    dispatch,\n    token,\n    labsSyncLoading,\n    labsSyncSuccess,\n    labsSyncError,\n    managers,\n    managersSyncLoading,\n    managersSyncSuccess,\n    managersSyncError\n  ]);\n\n  const onAssigned = (labId, managerId) => {\n    dispatch(adminLabAssignStaff(token, labId, managerId));\n  };\n\n  const onUnassigned = (labId, userId) => {\n    dispatch(adminLabManagementUnassignStaff(token, labId, userId));\n  };\n\n  const onRefresh = () => {\n    dispatch(adminLabManagementSyncLabs(token));\n    dispatch(adminLabManagementSyncInventoryUsers(token));\n  };\n\n  return (\n    <AssignStaffPresenter\n      labs={labs}\n      managers={managers}\n      onRefresh={onRefresh}\n      loading={labsSyncLoading || managersSyncLoading || labAssignLoading || labUnAssignLoading}\n      error={labsSyncError || managersSyncError || labAssignError || labUnAssignError}\n      successAssign={labAssignSuccess || labUnAssignSuccess}\n      onAssigned={onAssigned}\n      onUnassigned={onUnassigned}\n    />\n  );\n};\n\nexport default AssignStaff;\n","const styles = theme => ({\n  root: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  margin: {\n    marginLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  wrapper: {\n    padding: '16px'\n  },\n  gridList: {\n    flexWrap: 'nowrap'\n  },\n  select: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport {\n  Button,\n  Grid,\n  Dialog,\n  Box,\n  CircularProgress,\n  Typography,\n  DialogActions\n} from '@material-ui/core';\nimport { AiOutlineMobile } from 'react-icons/ai';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PropTypes } from 'prop-types';\n\nimport { socketStart, socketEnd } from '../../redux/actions/SocketActions';\n\nconst RealTimeReader = ({ onSubmit, variant, color }) => {\n  const dispatch = useDispatch();\n  const { token, lastEvent, showOverlay } = useSelector(state => ({\n    ...state.socket,\n    token: state.auth.token\n  }));\n\n  const handleClose = () => dispatch(socketEnd(token));\n\n  const copy = () => {\n    onSubmit(lastEvent && lastEvent.data && lastEvent.data.barcode);\n    handleClose();\n  };\n\n  return (\n    <div>\n      <Grid container direction=\"column\" alignItems=\"flex-start\">\n        <Grid item>\n          <Button\n            startIcon={<AiOutlineMobile />}\n            color={color}\n            variant={variant}\n            onClick={() => dispatch(socketStart(token))}\n          >\n            Connect to Mobile\n          </Button>\n        </Grid>\n      </Grid>\n\n      <Dialog\n        aria-labelledby=\"dialog-title\"\n        open={showOverlay}\n        onClose={handleClose}\n        maxWidth=\"xs\"\n        fullWidth\n      >\n        <Grid container justify=\"center\">\n          <Box py={2}>\n            {!lastEvent && (\n              <Box pt={5} pb={1}>\n                <CircularProgress color=\"secondary\" />\n              </Box>\n            )}\n            {lastEvent && (\n              <Box pt={2} pb={1}>\n                <Typography variant=\"h4\">\n                  {lastEvent && lastEvent.data && lastEvent.data.barcode}\n                </Typography>\n              </Box>\n            )}\n          </Box>\n        </Grid>\n        <DialogActions>\n          {lastEvent && (\n            <Button onClick={copy} color=\"primary\">\n              Copy\n            </Button>\n          )}\n          <Button onClick={handleClose} autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nRealTimeReader.defaultProps = {\n  variant: 'contained',\n  color: 'primary'\n};\n\nRealTimeReader.propTypes = {\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text']),\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n  onSubmit: PropTypes.func.isRequired\n};\n\nexport default RealTimeReader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Paper,\n  Grid,\n  withStyles,\n  Toolbar,\n  AppBar,\n  Box,\n  Button,\n  IconButton,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { TextField, Select as SelectFormik } from 'formik-material-ui';\nimport { Formik, Form, Field, FieldArray } from 'formik';\nimport { AiOutlinePlusSquare } from 'react-icons/ai';\n\nimport styles from './CreateItems.styles';\nimport SuccessErrorAlert from '../../Common/SuccessErrorAlert';\nimport ProgressOverlay from '../../Common/ProgressOverlay';\nimport RealTimeReader from '../../Common/RealTimeReader';\n\nfunction CreateItemsPresenter({\n  classes,\n  itemsets,\n  labs,\n  validationSchema,\n  error,\n  success,\n  loading,\n  onSubmit\n}) {\n  return (\n    <ProgressOverlay visible={loading}>\n      <Paper className={classes.root}>\n        <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n          <Toolbar>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs>\n                <p className={classes.title}>Create Items</p>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Grid container direction=\"column\" alignItems=\"stretch\" className={classes.wrapper}>\n          <SuccessErrorAlert success={success} error={error} />\n          <Grid item>\n            <Box px={2} pb={2}>\n              Provide a serial number, an itemset, a lab that the item belongs and the attributes of\n              the item.&nbsp;\n              <b>You can alter the values of the editable attributes of the itemset attributes</b>\n            </Box>\n          </Grid>\n          <Grid>\n            <Formik\n              initialValues={{\n                serialNumber: '',\n                itemset: '',\n                lab: '',\n                attributes: []\n              }}\n              validationSchema={validationSchema}\n              onSubmit={onSubmit}\n            >\n              {({ submitForm, isSubmitting, values, setFieldValue }) => {\n                const changeItemset = event => {\n                  itemsets.forEach(itemset => {\n                    if (itemset.id === event.target.value) {\n                      const attributes = itemset.Attributes.map(attribute => {\n                        return {\n                          key: attribute.key,\n                          value: attribute.defaultValue,\n                          editable: attribute.editable,\n                          itemsetAttribute: true\n                        };\n                      });\n                      setFieldValue('itemset', itemset.id);\n                      setFieldValue('attributes', attributes);\n                    }\n                  });\n                };\n\n                const onBarcode = code => setFieldValue('serialNumber', code);\n\n                return (\n                  <Form>\n                    <Grid container direction=\"column\" alignContent=\"stretch\">\n                      <Grid item style={{ marginBottom: '10px' }}>\n                        <Field\n                          className={classes.margin}\n                          component={TextField}\n                          required\n                          name=\"serialNumber\"\n                          label=\"Serial Number\"\n                          variant=\"outlined\"\n                          type=\"text\"\n                          placeholder=\"Serial Number\"\n                          fullWidth\n                        />\n                      </Grid>\n                      <Grid item container direction=\"row\" alignItems=\"center\">\n                        <Grid item sm={3}>\n                          <Box px={1}>\n                            <RealTimeReader onSubmit={onBarcode} />\n                          </Box>\n                        </Grid>\n                        <Grid item sm={9}>\n                          <span>Click on this button and scan from the mobile device</span>\n                        </Grid>\n                      </Grid>\n                      <Box px={2} pt={1} pb={2}>\n                        {itemsets.length === 0 || labs.length === 0 ? (\n                          <p>\n                            No itemsets or labs. Cannot create an item without an itemset or a lab.\n                          </p>\n                        ) : (\n                          ''\n                        )}\n                      </Box>\n\n                      <Grid item>\n                        <Box px={2} pb={2}>\n                          Select the item set and lab from below list.\n                          <b>\n                            You can only set items to the labs that you are in charge of managing,\n                          </b>\n                        </Box>\n                      </Grid>\n\n                      <Grid item className={classes.margin} style={{ marginBottom: '10px' }}>\n                        <FormControl variant=\"outlined\" fullWidth>\n                          <InputLabel id=\"itemset-select-label\">Itemset</InputLabel>\n                          <Select\n                            labelId=\"itemset-select-label\"\n                            name=\"itemset\"\n                            onChange={changeItemset}\n                            defaultValue=\"\"\n                          >\n                            {itemsets.map(itemset => (\n                              <MenuItem key={itemset.id} value={itemset.id}>\n                                {itemset.title}\n                              </MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      </Grid>\n\n                      <Grid item className={classes.margin}>\n                        <FormControl variant=\"outlined\" fullWidth>\n                          <InputLabel id=\"lab-select-label\">Lab</InputLabel>\n                          <Field\n                            labelId=\"lab-select-label\"\n                            component={SelectFormik}\n                            name=\"lab\"\n                            defaultValue=\"\"\n                          >\n                            {labs.map(lab => (\n                              <MenuItem key={lab.id} value={lab.id}>\n                                {lab.title}\n                              </MenuItem>\n                            ))}\n                          </Field>\n                        </FormControl>\n                      </Grid>\n\n                      <Grid item>\n                        <Box px={2} py={1}>\n                          Key should be unique. If the key is duplicated, the later field will be\n                          used. If a field is marked an editable, default value is not required.\n                          <br />\n                          You have to enter at least one attribute.\n                        </Box>\n                      </Grid>\n                      <FieldArray\n                        name=\"attributes\"\n                        render={arrayHelpers => (\n                          <div>\n                            {values.attributes.map((attribute, index) => (\n                              <Grid\n                                container\n                                direction=\"row\"\n                                key={index.toString()}\n                                style={{ marginBottom: '8px' }}\n                              >\n                                <Grid item sm={5}>\n                                  <Field\n                                    className={classes.margin}\n                                    component={TextField}\n                                    required\n                                    name={`attributes.${index}.key`}\n                                    variant=\"outlined\"\n                                    type=\"text\"\n                                    placeholder=\"key\"\n                                    fullWidth\n                                    disabled={attribute.itemsetAttribute}\n                                  />\n                                </Grid>\n\n                                <Grid item sm={6}>\n                                  <Field\n                                    className={classes.margin}\n                                    component={TextField}\n                                    required\n                                    name={`attributes.${index}.value`}\n                                    variant=\"outlined\"\n                                    type=\"text\"\n                                    placeholder=\"value\"\n                                    fullWidth\n                                    disabled={!attribute.editable}\n                                  />\n                                </Grid>\n                                <Grid item sm={1}>\n                                  {!attribute.itemsetAttribute ? (\n                                    <Box py={1} textAlign=\"right\">\n                                      <IconButton\n                                        className={classes.margin}\n                                        aria-label=\"delete\"\n                                        onClick={() => arrayHelpers.remove(index)}\n                                      >\n                                        <DeleteIcon />\n                                      </IconButton>\n                                    </Box>\n                                  ) : (\n                                    ''\n                                  )}\n                                </Grid>\n                              </Grid>\n                            ))}\n                            <Button\n                              className={classes.margin}\n                              variant=\"outlined\"\n                              startIcon={<AiOutlinePlusSquare />}\n                              onClick={() =>\n                                arrayHelpers.push({\n                                  key: '',\n                                  defaultValue: '',\n                                  editable: true,\n                                  itemsetAttribute: false\n                                })\n                              }\n                            >\n                              Add new attribute\n                            </Button>\n                          </div>\n                        )}\n                      />\n\n                      <Grid item>\n                        <Box py={1} textAlign=\"right\">\n                          <Button\n                            className={classes.margin}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={isSubmitting}\n                            onClick={submitForm}\n                          >\n                            Create Item\n                          </Button>\n                        </Box>\n                      </Grid>\n                    </Grid>\n                  </Form>\n                );\n              }}\n            </Formik>\n          </Grid>\n        </Grid>\n      </Paper>\n    </ProgressOverlay>\n  );\n}\n\nCreateItemsPresenter.defaultProps = {\n  error: null,\n  success: null\n};\n\nCreateItemsPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  itemsets: PropTypes.arrayOf(Object).isRequired,\n  labs: PropTypes.arrayOf(Object).isRequired,\n  success: PropTypes.string,\n  error: PropTypes.string,\n  validationSchema: PropTypes.object.isRequired,\n  loading: PropTypes.bool.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(CreateItemsPresenter);\n","import React, { useEffect } from 'react';\nimport * as yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport CreateItemSetsPresenter from './CreateItems.presenter';\nimport {\n  adminItemManagementSyncItemsets,\n  adminItemManagementCreateItem\n} from '../../../redux/actions/AdminItemManagementActions';\nimport { adminLabManagementSyncLabs } from '../../../redux/actions/AdminLabManagementActions';\n\nfunction CreateItems() {\n  const dispatch = useDispatch();\n\n  const {\n    createItemError,\n    createItemLoading,\n    createItemSuccess,\n    syncedItemsets,\n    itemSetsSyncLoading,\n    itemSetsSyncSuccess,\n    itemSetsSyncError,\n    labs,\n    labsSyncLoading,\n    labsSyncError,\n    labsSyncSuccess,\n    token\n  } = useSelector(state => ({\n    ...state.adminItemManagement,\n    ...state.adminLabManagement,\n    token: state.auth.token\n  }));\n\n  useEffect(() => {\n    if (!itemSetsSyncLoading && !itemSetsSyncSuccess && !itemSetsSyncError) {\n      dispatch(adminItemManagementSyncItemsets(token));\n    }\n    if (!labsSyncLoading && !labsSyncError && !labsSyncSuccess) {\n      dispatch(adminLabManagementSyncLabs(token));\n    }\n  }, [\n    token,\n    dispatch,\n    itemSetsSyncLoading,\n    itemSetsSyncSuccess,\n    itemSetsSyncError,\n    labsSyncLoading,\n    labsSyncSuccess,\n    labsSyncError\n  ]);\n\n  const schema = yup\n    .object()\n    .shape({\n      serialNumber: yup.string().required('Required'),\n      itemset: yup.string().required('Required'),\n      lab: yup.string().required('Required'),\n      attributes: yup\n        .array()\n        .of(\n          yup.object().shape({\n            key: yup.string().required('Required'),\n            value: yup.string().required('Required'),\n            editable: yup.boolean().required('Required'),\n            itemsetAttribute: yup.boolean().required('Required')\n          })\n        )\n        .required('Required')\n    })\n    .required('Required');\n\n  const onSubmit = async (values, { setSubmitting }) => {\n    const complete = () => {\n      setSubmitting(false);\n    };\n\n    const filteredAttributes = values.attributes.filter(attribute => attribute.editable);\n\n    const itemValues = {\n      ...values,\n      attributes: filteredAttributes.map(attribute => ({\n        key: attribute.key,\n        value: attribute.value\n      }))\n    };\n\n    dispatch(\n      adminItemManagementCreateItem(\n        token,\n        itemValues.serialNumber,\n        itemValues.itemset,\n        itemValues.lab,\n        itemValues.attributes,\n        complete\n      )\n    );\n  };\n  return (\n    <CreateItemSetsPresenter\n      itemsets={syncedItemsets}\n      labs={labs}\n      validationSchema={schema}\n      error={createItemError || itemSetsSyncError || labsSyncError}\n      success={createItemSuccess}\n      loading={createItemLoading || itemSetsSyncLoading || labsSyncLoading}\n      onSubmit={onSubmit}\n    />\n  );\n}\n\nexport default CreateItems;\n","const styles = () => ({\n  root: {\n    maxWidth: 936,\n    margin: 'auto'\n  },\n\n  wrapper: {\n    padding: 20\n  },\n  item: {\n    marginBottom: 20\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  table: {\n    minWidth: 650\n  }\n});\n\nexport default styles;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Paper,\n  AppBar,\n  Grid,\n  Toolbar,\n  withStyles,\n  Chip,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Tooltip,\n  IconButton\n} from '@material-ui/core';\nimport moment from 'moment';\nimport { AiOutlineBars, AiOutlineSync } from 'react-icons/ai';\nimport styles from './LendItems.styles';\nimport AdvancedTable from '../../Common/AdvancedTable';\nimport SuccessErrorAlert from '../../Common/SuccessErrorAlert';\nimport ProgressOverlay from '../../Common/ProgressOverlay';\n\nfunction LendItemsPresenter({\n  classes,\n  itemRequests,\n  addLentItem,\n  returnLentItem,\n  loading,\n  error,\n  success,\n  onRefresh\n}) {\n  const [request, setRequest] = useState(null);\n\n  const requestDialog = content => () => setRequest(content);\n  const closeDialog = () => setRequest(null);\n\n  const dateLabel = time => {\n    return time === null ? (\n      'Not Yet'\n    ) : (\n      <Tooltip title={time.toString()}>\n        <i>{moment(time).fromNow()}</i>\n      </Tooltip>\n    );\n  };\n\n  return (\n    <ProgressOverlay visible={loading}>\n      <Paper className={classes.root}>\n        <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n          <Toolbar>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs>\n                <p className={classes.title}>Lend/Receive</p>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Refresh Item List\">\n                <IconButton onClick={onRefresh}>\n                  <AiOutlineSync />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Grid className={classes.wrapper} container direction=\"column\" alignItems=\"stretch\">\n          <SuccessErrorAlert success={success} error={error} />\n          <AdvancedTable\n            grouping\n            columns={[\n              {\n                field: 'requestStatus',\n                title: 'Request status',\n                searchable: false,\n                render: row => (\n                  <Chip\n                    color=\"primary\"\n                    style={{ margin: '2px' }}\n                    size=\"small\"\n                    label={row.requestStatus}\n                  />\n                )\n              },\n              {\n                title: 'Lab',\n                field: 'lab'\n              },\n              {\n                title: 'Supervisor',\n                field: 'supervisor'\n              },\n              {\n                title: 'Student',\n                field: 'name'\n              },\n\n              {\n                sorting: false,\n                type: 'numeric',\n                render: row => (\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={requestDialog(row)}\n                    startIcon={<AiOutlineBars />}\n                  >\n                    Items\n                  </Button>\n                )\n              }\n            ]}\n            data={itemRequests.map(({ id, User, status, RequestItems, Supervisor }) => ({\n              id,\n              name: `${User.firstName} ${User.lastName} (${User.email})`,\n              lab: RequestItems[0] && RequestItems[0].Item.Lab.title,\n              requestStatus: status,\n              RequestItems,\n              supervisor: `${Supervisor.firstName} ${Supervisor.lastName} (${Supervisor.email})`\n            }))}\n            title=\"\"\n          />\n        </Grid>\n      </Paper>\n\n      {request && (\n        <Dialog open={request != null} maxWidth=\"lg\" onClose={closeDialog}>\n          <DialogTitle>Items</DialogTitle>\n          <DialogContent>\n            <AdvancedTable\n              columns={[\n                {\n                  title: 'Item Name',\n                  field: 'item'\n                },\n                {\n                  title: 'Serial Number',\n                  field: 'serialNumber',\n                  render: row => <Chip size=\"small\" label={row.serialNumber} />\n                },\n                {\n                  title: 'Status',\n                  field: 'status',\n                  render: row => <Chip size=\"small\" label={row.status} />\n                },\n                {\n                  title: 'Borrowed Date',\n                  field: 'borrowedDate',\n                  searchable: false,\n                  render: row => dateLabel(row.borrowedDate)\n                },\n                {\n                  title: 'Due Date',\n                  field: 'dueDate',\n                  searchable: false,\n                  render: row => dateLabel(row.dueDate)\n                },\n                {\n                  title: 'Returned Date',\n                  field: 'returnedDate',\n                  searchable: false,\n                  render: row => dateLabel(row.returnedDate)\n                },\n                {\n                  title: 'Actions',\n                  type: 'numeric',\n                  render: row => {\n                    if (row.status === 'ACCEPTED' && row.borrowedDate === null) {\n                      return (\n                        <Button\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          onClick={() => {\n                            addLentItem(request.id, row.id, row.status);\n                            closeDialog();\n                          }}\n                        >\n                          Lend\n                        </Button>\n                      );\n                    }\n\n                    if (row.status === 'BORROWED') {\n                      return (\n                        <Button\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          onClick={() => {\n                            returnLentItem(request.id, row.id, row.status);\n                            closeDialog();\n                          }}\n                        >\n                          Receive\n                        </Button>\n                      );\n                    }\n                    return '';\n                  }\n                }\n              ]}\n              data={request.RequestItems.map(item => ({\n                id: item.Item.id,\n                item: item.Item.ItemSet.title,\n                serialNumber: item.Item.serialNumber,\n                status: item.status,\n                borrowedDate: item.borrowedDate,\n                dueDate: item.dueDate,\n                returnedDate: item.returnedDate\n              }))}\n              title=\"\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closeDialog} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </ProgressOverlay>\n  );\n}\n\nLendItemsPresenter.defaultProps = {\n  error: null,\n  success: null\n};\nLendItemsPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  itemRequests: PropTypes.array.isRequired,\n  addLentItem: PropTypes.func.isRequired,\n  returnLentItem: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  success: PropTypes.bool,\n  loading: PropTypes.bool.isRequired,\n  onRefresh: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(LendItemsPresenter);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LendItemsPresenter from './LendItems.presenter';\nimport {\n  AdminItemManagementSyncItemRequests,\n  AdminItemManagementBorrowItem\n} from '../../../redux/actions/AdminItemManagementActions';\n\nfunction LendItems() {\n  const dispatch = useDispatch();\n\n  const {\n    syncedItemRequests,\n    itemRequestsSyncloading,\n    itemRequestsSyncSuccess,\n    itemRequestsSyncError,\n    itemBorrowLoading,\n    itemBorrowSuccess,\n    itemBorrowFailure,\n    token,\n    userId\n  } = useSelector(state => ({\n    ...state.adminItemManagement,\n    token: state.auth.token,\n    userId: state.auth.user.id\n  }));\n  const addLentItem = (requestId, itemId, status) => {\n    dispatch(AdminItemManagementBorrowItem(userId, itemId, requestId, status, token));\n  };\n\n  const returnLentItem = (requestId, itemId, status) => {\n    dispatch(AdminItemManagementBorrowItem(userId, itemId, requestId, status, token));\n  };\n\n  useEffect(() => {\n    if (!itemRequestsSyncloading && !itemRequestsSyncSuccess && !itemRequestsSyncError) {\n      dispatch(AdminItemManagementSyncItemRequests(userId, token));\n    }\n  }, [\n    dispatch,\n    token,\n    userId,\n    itemRequestsSyncloading,\n    itemRequestsSyncSuccess,\n    itemRequestsSyncError\n  ]);\n\n  const onRefresh = () => {\n    dispatch(AdminItemManagementSyncItemRequests(userId, token));\n  };\n\n  return (\n    <LendItemsPresenter\n      loading={itemRequestsSyncloading || itemBorrowLoading}\n      itemRequests={syncedItemRequests}\n      addLentItem={addLentItem}\n      returnLentItem={returnLentItem}\n      error={itemRequestsSyncError || itemBorrowFailure}\n      success={itemBorrowSuccess}\n      onRefresh={onRefresh}\n    />\n  );\n}\n\nexport default LendItems;\n","const styles = () => ({\n  root: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  wrapper: {\n    padding: '16px'\n  },\n  image: {\n    borderRadius: 8,\n    width: '50px'\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Paper,\n  AppBar,\n  Grid,\n  withStyles,\n  IconButton,\n  Tooltip,\n  Toolbar,\n  Box,\n  Chip\n} from '@material-ui/core';\nimport { Image } from 'cloudinary-react';\nimport { AiOutlineSync } from 'react-icons/ai';\nimport AdvancedTable from '../../Common/AdvancedTable';\nimport ProgressOverlay from '../../Common/ProgressOverlay';\nimport SuccessErrorAlert from '../../Common/SuccessErrorAlert';\nimport styles from './ViewTemporaryItems.styles';\n\nconst placeholder = 'https://via.placeholder.com/50';\n\nfunction ViewTemporaryItemsPresenter({ classes, lentItems, onRefresh, error, loading }) {\n  return (\n    <ProgressOverlay visible={loading}>\n      <Paper className={classes.root}>\n        <AppBar position=\"static\" elevation={0} color=\"inherit\">\n          <Toolbar>\n            <Grid container alignItems=\"center\" spacing={2}>\n              <Grid item xs>\n                <p className={classes.title}>View Lent Items</p>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh Lent Items List\">\n                  <IconButton onClick={onRefresh}>\n                    <AiOutlineSync />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Grid container direction=\"column\" alignItems=\"stretch\" className={classes.wrapper}>\n          <SuccessErrorAlert success={null} error={error} />\n          <Grid item>\n            <Box px={2}>Below the list of items lent are given</Box>\n          </Grid>\n          <Grid item>\n            <AdvancedTable\n              columns={[\n                {\n                  field: 'image',\n                  sorting: false,\n                  render: row =>\n                    row.image == null ? (\n                      <img src={placeholder} className={classes.image} alt={row.id} />\n                    ) : (\n                      <Image publicId={row.image} className={classes.image} />\n                    )\n                },\n                {\n                  field: 'studentId',\n                  title: 'Student Id',\n                  render: row => <Chip label={row.studentId} />\n                },\n                {\n                  field: 'lab',\n                  title: 'Lab Title'\n                },\n                {\n                  field: 'title',\n                  title: 'Item Title'\n                },\n                {\n                  field: 'serialNumber',\n                  title: 'Serial Number',\n                  render: row => <Chip label={row.serialNumber} />\n                },\n                {\n                  field: 'status',\n                  title: 'Status',\n                  render: row => <Chip color=\"primary\" label={row.status} />\n                }\n              ]}\n              data={lentItems.map(({ lab, request }) => ({\n                id: request.id,\n                lab: lab.title,\n                title: request.Item.ItemSet.title,\n                serialNumber: request.Item.serialNumber,\n                image: request.Item.ItemSet.image,\n                status: request.status,\n                studentId: request.studentId\n              }))}\n              title=\"\"\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </ProgressOverlay>\n  );\n}\n\nViewTemporaryItemsPresenter.defaultProps = {\n  error: null\n};\n\nViewTemporaryItemsPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  lentItems: PropTypes.array.isRequired,\n  onRefresh: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\nexport default withStyles(styles)(ViewTemporaryItemsPresenter);\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ViewTemporaryItemsPresenter from './ViewTemporaryItems.presenter';\nimport { AdminItemManagementSyncLentItems } from '../../../redux/actions/AdminItemManagementActions';\n\nfunction ViewTemporaryItems() {\n  const dispatch = useDispatch();\n  const {\n    syncedLentItems,\n    lentItemsSyncLoading,\n    lentItemsSyncSuccess,\n    lentItemsSyncError,\n    token\n  } = useSelector(state => ({\n    ...state.adminItemManagement,\n    token: state.auth.token\n  }));\n  useEffect(() => {\n    if (!lentItemsSyncLoading && !lentItemsSyncSuccess && !lentItemsSyncError) {\n      dispatch(AdminItemManagementSyncLentItems(token));\n    }\n  }, [dispatch, token, lentItemsSyncLoading, lentItemsSyncSuccess, lentItemsSyncError]);\n\n  const onRefresh = () => {\n    dispatch(AdminItemManagementSyncLentItems(token));\n  };\n\n  return (\n    <ViewTemporaryItemsPresenter\n      lentItems={syncedLentItems}\n      onRefresh={onRefresh}\n      error={lentItemsSyncError}\n      loading={lentItemsSyncLoading}\n    />\n  );\n}\n\nexport default ViewTemporaryItems;\n","import axios from 'axios';\nimport * as yup from 'yup';\n\nimport { AUTH_SIGN_IN_BEGIN, AUTH_SIGN_IN_SUCCESS, AUTH_SIGN_IN_FAILURE } from '../../actionTypes';\nimport { SERVER, SERVER_SIGN_IN, ROLE_STUDENT } from '../serverConstants';\n\n/**\n * Action creator for beginning of user sign in API call\n * @returns Redux action\n */\nconst authSignInBegin = () => ({\n  type: AUTH_SIGN_IN_BEGIN\n});\n\n/**\n * Action creator for end of user sign in API call.\n * This is fired when API call ends in a success.\n * @param {Object} response Response data of the call\n * @param {Object} response.user User details object\n * @param {string} response.token Token for user authentication\n * @returns Redux action\n */\nconst authSignInSuccess = ({ user, token }) => ({\n  type: AUTH_SIGN_IN_SUCCESS,\n  payload: { user, token }\n});\n\n/**\n * Action creator for end of user sign in API call.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst authSignInFailure = error => ({\n  type: AUTH_SIGN_IN_FAILURE,\n  payload: { error }\n});\n\n/**\n * User schema used to validate response sent by the API\n */\nconst responseSchema = yup.object().shape({\n  token: yup.string().required(),\n  user: yup.object().shape({\n    id: yup.string().required(),\n    firstName: yup.string().required(),\n    lastName: yup.string().required(),\n    email: yup.string().required(),\n    permissions: yup.array().of(yup.string()),\n    role: yup.string().required(),\n    roleId: yup.string().required()\n  })\n});\n\n/**\n * User sign in thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @param {Object} authData Email and password object of the user\n * @param {string} authData.email Email of the user\n * @param {string} authData.password Password of the user\n * @param {*} complete Function callback to signify that the async call is stopped\n * @returns Thunk for user sign in API call\n */\nexport default function authSignIn({ email, password }, complete) {\n  return async dispatch => {\n    // API call initialized\n    dispatch(authSignInBegin());\n\n    // Function to call if ended in error\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(authSignInFailure(message));\n    }\n\n    // Function to call if ended in success\n    function onSuccess(success) {\n      try {\n        const validatedData = responseSchema.validateSync(success.data);\n        // Students can't access this portal\n        if (validatedData.user.role === ROLE_STUDENT) {\n          dispatch(authSignInFailure('You are not authorized.'));\n        } else {\n          dispatch(authSignInSuccess(validatedData));\n        }\n      } catch (err) {\n        dispatch(authSignInFailure('Server connection failed. Please check your connection.'));\n      }\n    }\n\n    try {\n      // Make the post request\n      const success = await axios.post(`${SERVER}${SERVER_SIGN_IN}`, { email, password });\n      complete();\n      onSuccess(success);\n    } catch (error) {\n      complete();\n      onError(error.response);\n    }\n  };\n}\n","import axios from 'axios';\n\nimport { AUTH_SIGN_UP_BEGIN, AUTH_SIGN_UP_SUCCESS, AUTH_SIGN_UP_FAILURE } from '../../actionTypes';\nimport { SERVER, SERVER_SIGN_UP } from '../serverConstants';\n\n/**\n * Action creator for beginning of user sign up API call\n * @returns Redux action\n */\nconst authSignUpBegin = () => ({\n  type: AUTH_SIGN_UP_BEGIN\n});\n\n/**\n * Action creator for end of user sign up API call.\n * This is fired when API call ends in a success.\n * @returns Redux action\n */\nconst authSignUpSuccess = () => ({\n  type: AUTH_SIGN_UP_SUCCESS\n});\n\n/**\n * Action creator for end of user sign in API call.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst authSignUpFailure = error => ({\n  type: AUTH_SIGN_UP_FAILURE,\n  payload: { error }\n});\n\n/**\n * User sign up thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @param {Object} regData Registration data\n * @param {string} regData.token Registration token of the user\n * @param {string} regData.firstName First Name of the user\n * @param {string} regData.lastName Last Name of the user\n * @param {string} regData.password Password of the user\n * @param {*} complete Function callback to signify that the async call is stopped\n * @returns Thunk for user sign in API call\n */\nexport default function authSignUp({ token, email, firstName, lastName, password }, complete) {\n  return async dispatch => {\n    // API call initialized\n    dispatch(authSignUpBegin());\n\n    // Function to call if ended in error\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(authSignUpFailure(message));\n    }\n\n    // Function to call if ended in success\n    function onSuccess() {\n      dispatch(authSignUpSuccess());\n    }\n\n    try {\n      // Make the post request\n      await axios.post(`${SERVER}${SERVER_SIGN_UP}`, {\n        token,\n        email,\n        firstName,\n        lastName,\n        password\n      });\n      complete();\n      onSuccess();\n    } catch (error) {\n      complete();\n      onError(error.response);\n    }\n  };\n}\n","import { AUTH_SIGN_OUT } from '../../actionTypes';\n\n/**\n * Action creator for user sign out\n */\nconst authSignOut = () => ({\n  type: AUTH_SIGN_OUT\n});\n\nexport default authSignOut;\n","import axios from 'axios';\nimport * as yup from 'yup';\n\nimport {\n  AUTH_REQUEST_INVITATION_BEGIN,\n  AUTH_REQUEST_INVITATION_SUCCESS,\n  AUTH_REQUEST_INVITATION_FAILURE\n} from '../../actionTypes';\nimport { SERVER, SERVER_REQUEST_INVITATION } from '../serverConstants';\n\n/**\n * Action creator for beginning of requesting invitation details\n * @param {string} invitationToken Invitation token key\n * @returns Redux action\n */\nconst authRequestInvitationBegin = () => ({\n  type: AUTH_REQUEST_INVITATION_BEGIN\n});\n\n/**\n * Action creator for end of requesting invitation details.\n * This is fired when API call ends in a success.\n * @param {Object} response Response data of the call\n * @param {string} response.email Email of the associated user\n * @param {string} response.roleId Id of the assigned role\n * @param {Object} response.role Info about assigned role\n * @param {string} response.role.name Name of the assigned role\n * @returns Redux action\n */\nconst authRequestInvitationSuccess = ({ email, roleId, Role }) => ({\n  type: AUTH_REQUEST_INVITATION_SUCCESS,\n  payload: { email, roleId, Role }\n});\n\n/**\n * Action creator for end of requesting invitation details.\n * This is fired when API call ends in an error.\n * @param {string} error Error message\n * @returns Redux action\n */\nconst authRequestInvitationFailure = error => ({\n  type: AUTH_REQUEST_INVITATION_FAILURE,\n  payload: { error }\n});\n\n/**\n * User schema used to validate response sent by the API\n */\nconst responseSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email()\n    .required(),\n  roleId: yup.string().required(),\n  Role: yup.object().shape({\n    name: yup.string().required()\n  })\n});\n\n/**\n * Request invitation details thunk creator.\n *\n * This is an action that will do the API call and fire other actions.\n * @param {Object} invitationToken Invitation Token of user\n * @returns Thunk for user sign in API call\n */\nexport default function authRequestInvitation(invitationToken) {\n  return async dispatch => {\n    // API call initialized\n    dispatch(authRequestInvitationBegin());\n\n    // Function to call if ended in error\n    function onError(error) {\n      let message;\n      if (error) message = error.data.message;\n      if (!message) message = 'Server connection failed';\n      dispatch(authRequestInvitationFailure(message));\n    }\n\n    // Function to call if ended in success\n    function onSuccess(success) {\n      try {\n        const validatedData = responseSchema.validateSync(success.data);\n        dispatch(authRequestInvitationSuccess(validatedData));\n      } catch (err) {\n        dispatch(\n          authRequestInvitationFailure('Server connection failed. Please check your connection.')\n        );\n      }\n    }\n\n    try {\n      // Make the get request\n      const success = await axios.get(`${SERVER}${SERVER_REQUEST_INVITATION}/${invitationToken}`);\n      onSuccess(success);\n    } catch (error) {\n      onError(error.response);\n    }\n  };\n}\n","import { AUTH_INVITATION_REDIRECTED } from '../../actionTypes';\n/**\n * Action creator to indicate that user was redirected\n */\nconst authInvitationRedirected = () => ({\n  type: AUTH_INVITATION_REDIRECTED\n});\n\nexport default authInvitationRedirected;\n","/**\n * Entries which describe header text.\n * The entries list is access left-to-right.\n * The function will look for the first element that the current route starts with\n * and apply it.\n * So, child routes should come first.\n *\n * eg:`/a/b` should come before `/a`.\n */\nconst entries = [\n  {\n    path: '/admin/dashboard',\n    name: 'Dashboard'\n  },\n  {\n    path: '/admin/administration/users',\n    name: 'View Users'\n  },\n  {\n    path: '/admin/users/invite',\n    name: 'Invite Users'\n  },\n  {\n    path: '/admin/labs/createlabs',\n    name: 'Create Labs'\n  },\n  {\n    path: '/admin/users/retract',\n    name: 'Retract Invitations'\n  },\n  {\n    path: '/admin/administration/supervisor/add',\n    name: 'Add Supervisors'\n  },\n  {\n    path: '/admin/administration/supervisor/list',\n    name: 'View Supervisors'\n  },\n  {\n    path: '/admin/administration/roles/create',\n    name: 'Create New Role'\n  },\n  {\n    path: '/admin/administration/roles/delete',\n    name: 'Manage Roles'\n  },\n  {\n    path: '/admin/administration/supervisor/add',\n    name: 'Add Supervisors'\n  },\n  {\n    path: '/admin/administration/superviosor/list',\n    name: 'View Supervisors'\n  },\n  {\n    path: '/admin/lab/itemsets/create',\n    name: 'Create Item Sets'\n  },\n  {\n    path: '/admin/labs/labs',\n    name: 'View Labs'\n  },\n  {\n    path: '/admin/itemset/list',\n    name: 'View Item Sets'\n  },\n  {\n    path: '/admin/items/create',\n    name: 'Create Items'\n  },\n  {\n    path: '/admin/items/list',\n    name: 'View Items'\n  },\n  {\n    path: '/admin/lentitems/list',\n    name: 'View Lent Items'\n  },\n  {\n    path: '/admin/labs/assignstaff',\n    name: 'Assign Staff Managers'\n  },\n  {\n    path: '/admin/lenditems/lend',\n    name: 'Lend/Receive'\n  },\n  {\n    path: '/admin/items/generatebarcode',\n    name: 'Generate Barcode'\n  },\n  {\n    path: '/admin/tempitems',\n    name: 'View Temporary Lent Items'\n  }\n];\n\nexport default entries;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Tooltip, Menu, MenuItem, ListItemIcon } from '@material-ui/core';\nimport { AiOutlineLogout } from 'react-icons/ai';\n\nimport { styles, docsLink } from './Header.styles';\nimport * as EVENTS from './Header.events';\n\nfunction HeaderPresenter({ classes, handleEvent, headerState }) {\n  return (\n    <AppBar className={classes.secondaryBar} color=\"primary\" position=\"sticky\" elevation={0}>\n      <Toolbar>\n        <Grid container spacing={1} alignItems=\"center\">\n          <Hidden smUp>\n            <Grid item>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={handleEvent(EVENTS.ON_DRAWER_TOGGLE)}\n                className={classes.menuButton}\n              >\n                <MenuIcon />\n              </IconButton>\n            </Grid>\n          </Hidden>\n          <Grid item xs>\n            <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\n              {headerState.text}\n            </Typography>\n          </Grid>\n          <Grid item xs />\n          <Grid item>\n            <Button href={docsLink} variant=\"outlined\" color=\"inherit\" size=\"small\">\n              Documentation\n            </Button>\n          </Grid>\n          <Grid item>\n            <Tooltip title={headerState.username}>\n              <IconButton color=\"inherit\" onClick={handleEvent(EVENTS.MENU_OPEN)}>\n                <Avatar alt=\"User Avatar\" className={classes.avatar}>\n                  {headerState.letter}\n                </Avatar>\n              </IconButton>\n            </Tooltip>\n            <Menu\n              anchorEl={headerState.anchor}\n              keepMounted\n              open={Boolean(headerState.anchor)}\n              onClose={handleEvent(EVENTS.MENU_CLOSE)}\n            >\n              <MenuItem key=\"logout\" onClick={handleEvent(EVENTS.SIGN_OUT)}>\n                <ListItemIcon>\n                  <AiOutlineLogout />\n                </ListItemIcon>\n                <Typography variant=\"inherit\">Logout</Typography>\n              </MenuItem>\n            </Menu>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nHeaderPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  handleEvent: PropTypes.func.isRequired,\n  headerState: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(HeaderPresenter);\n","const docsLink = 'https://openinventoryorg.github.io/docs';\n\nconst styles = theme => ({\n  secondaryBar: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  },\n  menuButton: {\n    marginLeft: -theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: '#D81E5B',\n    fontSize: 14\n  }\n});\n\nexport { styles, docsLink };\n","export const MENU_OPEN = 'MENU_OPEN';\nexport const MENU_CLOSE = 'MENU_CLOSE';\nexport const SET_ANCHOR_EL = 'SET_ANCHOR_EL';\nexport const ON_DRAWER_TOGGLE = 'ON_DRAWER_TOGGLE';\nexport const SIGN_OUT = 'SIGN_OUT';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { authSignOut } from '../../../../redux/actions/AuthActions';\nimport entries from './Header.entries';\nimport HeaderPresenter from './Header.presenter';\nimport * as EVENTS from './Header.events';\n\n/**\n * Header Smart Component.\n *\n * This manages header state including user information and title.\n */\nfunction Header({ onDrawerToggle, location }) {\n  // Find the correct entry for header title\n  const headerEntry = entries.find(entry => location.pathname.startsWith(entry.path));\n  const headerText = headerEntry ? headerEntry.name : 'Page Not Found';\n\n  // Profile menu state\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  // User information to display in avatar\n  const user = useSelector(state => state.auth.user);\n  const userLetter = user.firstName.substring(0, 1).toUpperCase();\n  const userName = `${user.firstName} ${user.lastName}`;\n\n  // To dispatch events such as signout\n  const dispatch = useDispatch();\n\n  // Profile menu open callback\n  const menuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  // Profile menu close callback\n  const menuClose = () => {\n    setAnchorEl(null);\n  };\n\n  // User sign out callback\n  const signOut = () => {\n    dispatch(authSignOut());\n    menuClose();\n  };\n\n  // Handler which maps the event from header into the correct callback\n  const handleEvent = event => {\n    switch (event) {\n      case EVENTS.MENU_OPEN:\n        return menuOpen;\n      case EVENTS.MENU_CLOSE:\n        return menuClose;\n      case EVENTS.SET_ANCHOR_EL:\n        return setAnchorEl;\n      case EVENTS.ON_DRAWER_TOGGLE:\n        return onDrawerToggle;\n      case EVENTS.SIGN_OUT:\n        return signOut;\n      default:\n        return () => {};\n    }\n  };\n\n  // State of the header\n  const headerState = {\n    anchor: anchorEl,\n    text: headerText,\n    username: userName,\n    letter: userLetter\n  };\n\n  // Associated dumb component\n  return <HeaderPresenter handleEvent={handleEvent} headerState={headerState} />;\n}\n\nHeader.propTypes = {\n  onDrawerToggle: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nexport default withRouter(Header);\n","import React from 'react';\nimport { Typography, Link } from '@material-ui/core';\n\nfunction Footer() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://github.com/openinventoryorg/\">\n        Open Inventory Organization\n      </Link>\n      &nbsp;\n      {new Date().getFullYear()}\n      .&nbsp;\n    </Typography>\n  );\n}\n\nexport default Footer;\n","const styles = theme => ({\n  categoryHeader: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  },\n  categoryHeaderPrimary: {\n    color: theme.palette.common.white\n  },\n  item: {\n    paddingTop: 1,\n    paddingBottom: 1,\n    color: 'rgba(255, 255, 255, 0.7)',\n    '&:hover,&:focus': {\n      backgroundColor: 'rgba(255, 255, 255, 0.08)'\n    }\n  },\n  itemCategory: {\n    backgroundColor: '#D81E5B',\n    boxShadow: '0 -1px 0 #404854 inset',\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  },\n  firebase: {\n    fontSize: 24,\n    color: theme.palette.common.white\n  },\n  itemActiveItem: {\n    color: '#FFFD98'\n  },\n  itemPrimary: {\n    fontSize: 'inherit'\n  },\n  itemIcon: {\n    minWidth: 'auto',\n    marginRight: theme.spacing(2)\n  },\n  divider: {\n    marginTop: theme.spacing(2)\n  },\n  image: {\n    width: '100%',\n    resizeMode: 'cover'\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport {\n  AiOutlineUnlock,\n  AiOutlineUsergroupAdd,\n  AiOutlineLaptop,\n  AiOutlineIdcard,\n  AiOutlineDiff,\n  AiOutlineFileText,\n  AiOutlinePlusSquare,\n  AiOutlineMinusSquare,\n  AiOutlineSwap,\n  AiOutlineClockCircle,\n  AiOutlineDashboard,\n  AiOutlineBlock,\n  AiOutlineBarcode,\n  AiOutlineCode\n} from 'react-icons/ai';\n\n/**\n * Entries which describe sidebar.\n * `id` should be unique and is also taken as the sidebar text.\n * `route` is required. To do nothing pass '#'.\n */\nconst entries = [\n  {\n    id: 'Dashboard',\n    permissions: null,\n    children: [\n      {\n        id: 'Dashboard',\n        icon: <AiOutlineDashboard />,\n        route: '/admin/dashboard'\n      }\n    ]\n  },\n  {\n    id: 'Site Administration',\n    permissions: ['ADMINISTRATOR'],\n    children: [\n      {\n        id: 'Super Admin Dashboard',\n        icon: <AiOutlineCode />,\n        route: '/superadmin'\n      }\n    ]\n  },\n  {\n    id: 'User Administration',\n    permissions: ['ADMINISTRATOR'],\n    children: [\n      {\n        id: 'Create New Role',\n        icon: <AiOutlineUnlock />,\n        route: '/admin/administration/roles/create'\n      },\n      {\n        id: 'Manage Roles',\n        icon: <AiOutlineBlock />,\n        route: '/admin/administration/roles/delete'\n      },\n      {\n        id: 'View Users',\n        icon: <AiOutlineUsergroupAdd />,\n        route: '/admin/administration/users'\n      },\n      {\n        id: 'Add Supervisors',\n        icon: <AiOutlineUsergroupAdd />,\n        route: '/admin/administration/supervisor/add'\n      },\n      {\n        id: 'View Supervisors',\n        icon: <AiOutlineUsergroupAdd />,\n        route: '/admin/administration/supervisor/list'\n      }\n    ]\n  },\n  {\n    id: 'Lab Management',\n    permissions: ['LAB_MANAGER'],\n    children: [\n      {\n        id: 'Create Laboratories',\n        icon: <AiOutlineIdcard />,\n        route: '/admin/labs/createlabs'\n      },\n      {\n        id: 'View Laboratories',\n        icon: <AiOutlineLaptop />,\n        route: '/admin/labs/labs'\n      },\n      {\n        id: 'Assign Staff Members',\n        icon: <AiOutlineIdcard />,\n        route: '/admin/labs/assignstaff'\n      }\n    ]\n  },\n  {\n    id: 'Item Management',\n    permissions: ['LAB_MANAGER', 'INVENTORY_MANAGER'],\n    children: [\n      {\n        id: 'Create Item Sets',\n        icon: <AiOutlineDiff />,\n        route: '/admin/lab/itemsets/create'\n      },\n      {\n        id: 'View Item Sets',\n        icon: <AiOutlineDiff />,\n        route: '/admin/itemset/list'\n      },\n      {\n        id: 'Create Items',\n        icon: <AiOutlineFileText />,\n        route: '/admin/items/create'\n      },\n      {\n        id: 'View Items',\n        icon: <AiOutlineFileText />,\n        route: '/admin/items/list'\n      },\n      {\n        id: 'Generate Barcode',\n        icon: <AiOutlineBarcode />,\n        route: '/admin/items/generatebarcode'\n      }\n    ]\n  },\n  {\n    id: 'Account Registration',\n    permissions: ['REGISTRAR'],\n    children: [\n      {\n        id: 'Invite Users',\n        icon: <AiOutlinePlusSquare />,\n        route: '/admin/users/invite'\n      },\n      {\n        id: 'Retract Invitations',\n        icon: <AiOutlineMinusSquare />,\n        route: '/admin/users/retract'\n      }\n    ]\n  },\n  {\n    id: 'Inventory Management',\n    permissions: ['INVENTORY_MANAGER'],\n    children: [\n      {\n        id: 'Lend/Receive',\n        icon: <AiOutlineSwap />,\n        route: '/admin/lenditems/lend'\n      },\n      {\n        id: 'Temporary Handover',\n        icon: <AiOutlineClockCircle />,\n        route: '/admin/tempitems'\n      }\n      // {\n      //   id: 'View lent Items',\n      //   icon: <AiOutlineFileText />,\n      //   route: '/admin/lentitems/list'\n      // }\n    ]\n  }\n];\n\nexport default entries;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nfunction NavigatorItem({ childId, icon, route, location, classes }) {\n  const isActive = route === location.pathname;\n\n  return (\n    <ListItem\n      button\n      component={Link}\n      to={route}\n      className={clsx(isActive && classes.itemActiveItem, classes.item)}\n    >\n      <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\n      <ListItemText\n        classes={{\n          primary: classes.itemPrimary\n        }}\n      >\n        {childId}\n      </ListItemText>\n    </ListItem>\n  );\n}\n\nNavigatorItem.propTypes = {\n  childId: PropTypes.string.isRequired,\n  icon: PropTypes.element.isRequired,\n  route: PropTypes.string.isRequired,\n  location: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nexport default NavigatorItem;\n","import React from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useSelector } from 'react-redux';\n\nimport styles from './Navigator.styles';\nimport entries from './Navigator.entries';\nimport NavigatorItem from './NavigatorItem';\n\nfunction Navigator(props) {\n  const { classes, location, ...other } = props;\n\n  // Fix to error thrown by react saying staticContext is not recognized by Drawer\n  if ('staticContext' in other) {\n    delete other.staticContext;\n  }\n\n  const user = useSelector(state => state.auth.user);\n  const hasCommonPermissions = allowed => {\n    if (allowed === null) return true;\n    const commonPermissions = allowed.filter(v => user.permissions.includes(v));\n    return commonPermissions.length !== 0;\n  };\n\n  let currentPagePerms = [];\n  entries.forEach(e => {\n    const child = e.children.find(c => c.route === location.pathname);\n    if (!child) return;\n    currentPagePerms = e.permissions;\n  });\n\n  if (currentPagePerms && !hasCommonPermissions(currentPagePerms)) {\n    return <Redirect push to=\"/admin/dashboard\" />;\n  }\n\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <Drawer variant=\"permanent\" {...other}>\n      <List disablePadding>\n        <ListItem className={clsx(classes.firebase, classes.itemCategory)}>\n          <img\n            src={`${process.env.PUBLIC_URL}/images/header.jpg`}\n            alt=\"Open Inventory Logo\"\n            className={classes.image}\n          />\n        </ListItem>\n        {entries.map(\n          ({ id, children, permissions }) =>\n            hasCommonPermissions(permissions) && (\n              <React.Fragment key={id}>\n                <ListItem className={classes.categoryHeader}>\n                  <ListItemText\n                    classes={{\n                      primary: classes.categoryHeaderPrimary\n                    }}\n                  >\n                    {id}\n                  </ListItemText>\n                </ListItem>\n                {children.map(({ id: childId, icon, route }) => (\n                  <NavigatorItem\n                    key={childId}\n                    childId={childId}\n                    icon={icon}\n                    route={route}\n                    location={location}\n                    classes={classes}\n                  />\n                ))}\n\n                <Divider className={classes.divider} />\n              </React.Fragment>\n            )\n        )}\n      </List>\n    </Drawer>\n  );\n}\n\nNavigator.propTypes = {\n  classes: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nexport default withRouter(withStyles(styles)(Navigator));\n","const styles = () => ({\n  root: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  wrapper: {\n    padding: '16px'\n  },\n  image: {\n    borderRadius: 8,\n    width: '50px'\n  }\n});\n\nexport default styles;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { AiOutlineSync, AiOutlineUser, AiOutlineUsergroupAdd } from 'react-icons/ai';\nimport {\n  Paper,\n  Grid,\n  withStyles,\n  Toolbar,\n  AppBar,\n  Box,\n  IconButton,\n  Tooltip,\n  Dialog,\n  DialogTitle,\n  List,\n  DialogActions,\n  Button,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText\n} from '@material-ui/core';\nimport { Image } from 'cloudinary-react';\nimport moment from 'moment';\n\nimport styles from './ViewLabs.styles';\nimport ProgressOverlay from '../../Common/ProgressOverlay';\nimport SuccessErrorAlert from '../../Common/SuccessErrorAlert';\nimport AdvancedTable from '../../Common/AdvancedTable';\nimport { capitalizeFirstLetter } from '../../../helpers/helpers';\n\nconst placeholder = 'https://via.placeholder.com/50';\n\nfunction ViewLabsPresenter({ classes, labs, error, loading, onRefresh }) {\n  const [open, setOpen] = useState(false);\n  const [labManagers, setLabManagers] = useState([]);\n\n  const openDialog = lab => () => {\n    setLabManagers(lab.Users);\n    setOpen(true);\n  };\n\n  const closeDialog = () => setOpen(false);\n\n  const dialogExited = () => {\n    setOpen(false);\n    setLabManagers([]);\n  };\n\n  return (\n    <ProgressOverlay visible={loading}>\n      <Paper className={classes.root}>\n        <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n          <Toolbar>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs>\n                <p className={classes.title}>View Labs</p>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Refresh Labs List\">\n                <IconButton onClick={onRefresh}>\n                  <AiOutlineSync />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Grid container direction=\"column\" alignItems=\"stretch\" className={classes.wrapper}>\n          <SuccessErrorAlert success={null} error={error} />\n\n          <Grid item>\n            <Box px={2} pb={2}>\n              Below the list of labs in the system are given.\n            </Box>\n          </Grid>\n\n          <Grid item>\n            <AdvancedTable\n              columns={[\n                {\n                  field: 'image',\n                  sorting: false,\n                  render: row =>\n                    row.image == null ? (\n                      <img src={placeholder} className={classes.image} alt={row.id} />\n                    ) : (\n                      <Image publicId={row.image} className={classes.image} />\n                    )\n                },\n                { title: 'Title', field: 'title', render: row => <b>{row.title}</b> },\n                { title: 'Subtitle', field: 'subtitle' },\n                {\n                  title: 'Created',\n                  field: 'createdAt',\n                  searchable: false,\n                  render: row => (\n                    <Tooltip title={row.createdAt.toString()}>\n                      <i>{moment(row.createdAt).fromNow()}</i>\n                    </Tooltip>\n                  )\n                },\n                {\n                  title: 'Last Updated',\n                  field: 'updatedAt',\n                  searchable: false,\n                  render: row => (\n                    <Tooltip title={row.updatedAt.toString()}>\n                      <i>{moment(row.updatedAt).fromNow()}</i>\n                    </Tooltip>\n                  )\n                },\n                {\n                  title: '',\n                  type: 'numeric',\n                  sorting: false,\n                  render: row => (\n                    <Button\n                      variant=\"outlined\"\n                      disabled={row.Users.length === 0}\n                      onClick={openDialog(row)}\n                      startIcon={<AiOutlineUsergroupAdd />}\n                    >\n                      Managers\n                    </Button>\n                  )\n                }\n              ]}\n              data={labs.map(({ id, title, subtitle, image, createdAt, updatedAt, Users }) => ({\n                id,\n                title: capitalizeFirstLetter(title),\n                subtitle,\n                image,\n                createdAt,\n                updatedAt,\n                Users\n              }))}\n              title=\"\"\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Dialog open={open} onClose={closeDialog} onExited={dialogExited} scroll=\"paper\">\n        <DialogTitle>Assigned Lab Managers</DialogTitle>\n        <List>\n          {labManagers.map(manager => (\n            <ListItem button key={manager.email}>\n              <ListItemAvatar>\n                <Avatar className={classes.avatar}>\n                  <AiOutlineUser />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={`${manager.firstName} ${manager.lastName}`}\n                secondary={manager.email}\n              />\n            </ListItem>\n          ))}\n        </List>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </ProgressOverlay>\n  );\n}\n\nViewLabsPresenter.defaultProps = {\n  error: null\n};\n\nViewLabsPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  labs: PropTypes.array.isRequired,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  onRefresh: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ViewLabsPresenter);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ViewLabsPresenter from './ViewLabs.presenter';\nimport { adminLabManagementSyncLabs } from '../../../redux/actions/AdminLabManagementActions';\n\nfunction ViewLabs() {\n  const dispatch = useDispatch();\n  const { labs, labsSyncLoading, labsSyncSuccess, labsSyncError, token } = useSelector(state => ({\n    ...state.adminLabManagement,\n    token: state.auth.token\n  }));\n\n  useEffect(() => {\n    if (!labsSyncLoading && !labsSyncSuccess && !labsSyncError) {\n      dispatch(adminLabManagementSyncLabs(token));\n    }\n  }, [dispatch, token, labsSyncLoading, labsSyncSuccess, labsSyncError]);\n\n  const onRefresh = () => {\n    dispatch(adminLabManagementSyncLabs(token));\n  };\n\n  return (\n    <ViewLabsPresenter\n      loading={labsSyncLoading}\n      labs={labs}\n      error={labsSyncError}\n      onRefresh={onRefresh}\n    />\n  );\n}\n\nexport default ViewLabs;\n","const styles = () => ({\n  root: {\n    maxWidth: 936,\n    margin: 'auto'\n  },\n\n  wrapper: {\n    padding: 20\n  },\n  item: {\n    marginBottom: 20\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Paper, withStyles, Grid, Box, Button, AppBar, Toolbar } from '@material-ui/core';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport styles from './CreateSupervisors.styles';\nimport ProgressOverlay from '../../Common/ProgressOverlay';\nimport SuccessErrorAlert from '../../Common/SuccessErrorAlert';\n\nfunction CreateSupervisorsPresenter({\n  classes,\n  onSubmit,\n  validationSchema,\n  loading,\n  success,\n  error\n}) {\n  return (\n    <ProgressOverlay visible={loading}>\n      <Paper className={classes.root}>\n        <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n          <Toolbar>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs>\n                <p className={classes.title}>Add Supervisor</p>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Grid className={classes.wrapper} container direction=\"column\" alignItems=\"stretch\">\n          <SuccessErrorAlert success={success} error={error} />\n          <Grid item>\n            <Box px={1} mb={2}>\n              Add supervisor to the system by adding them to the email list.\n            </Box>\n          </Grid>\n          <Formik\n            initialValues={{\n              firstName: '',\n              lastName: '',\n              email: ''\n            }}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            {({ submitForm, isSubmitting }) => (\n              <Form>\n                <Grid className={classes.item} item>\n                  <Field\n                    component={TextField}\n                    required\n                    label=\"Enter Supervisor First Name\"\n                    name=\"firstName\"\n                    variant=\"outlined\"\n                    type=\"text\"\n                    placeholder=\"John\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid className={classes.item} item>\n                  <Field\n                    component={TextField}\n                    required\n                    label=\"Enter Supervisor Last Name\"\n                    name=\"lastName\"\n                    variant=\"outlined\"\n                    type=\"text\"\n                    placeholder=\"Doe\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid className={classes.item} item>\n                  <Field\n                    component={TextField}\n                    required\n                    label=\"Enter Supervisor Email\"\n                    name=\"email\"\n                    variant=\"outlined\"\n                    type=\"text\"\n                    placeholder=\"johndoe@ois.com\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <Box textAlign=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      disabled={isSubmitting}\n                      onClick={submitForm}\n                    >\n                      Add Supervisor\n                    </Button>\n                  </Box>\n                </Grid>\n              </Form>\n            )}\n          </Formik>\n        </Grid>\n      </Paper>\n    </ProgressOverlay>\n  );\n}\n\nCreateSupervisorsPresenter.defaultProps = {\n  error: null,\n  success: null\n};\n\nCreateSupervisorsPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  validationSchema: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  success: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default withStyles(styles)(CreateSupervisorsPresenter);\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as yup from 'yup';\nimport CreateSupervisorsPresenter from './CreateSupervisors.presenter';\nimport { adminAdministrationCreateSupervisor } from '../../../redux/actions/AdminAdministrationActions';\n\nfunction CreateSupervisors() {\n  // To dispatch api calls\n  const dispatch = useDispatch();\n\n  const {\n    supervisorCreateLoading,\n    supervisorCreateError,\n    supervisorCreateSuccess,\n    token\n  } = useSelector(state => ({ ...state.adminAdministration, token: state.auth.token }));\n\n  const schema = yup.object().shape({\n    email: yup\n      .string()\n      .email()\n      .required('Required'),\n    firstName: yup.string().required('Required'),\n    lastName: yup.string().required('Required')\n  });\n\n  const onSubmit = (values, { setSubmitting }) => {\n    const complete = () => {\n      setSubmitting(false);\n    };\n    dispatch(\n      adminAdministrationCreateSupervisor(\n        token,\n        values.firstName,\n        values.lastName,\n        values.email,\n        complete\n      )\n    );\n  };\n\n  return (\n    <CreateSupervisorsPresenter\n      onSubmit={onSubmit}\n      validationSchema={schema}\n      loading={supervisorCreateLoading}\n      success={supervisorCreateSuccess}\n      error={supervisorCreateError}\n    />\n  );\n}\n\nexport default CreateSupervisors;\n","const styles = () => ({\n  root: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  wrapper: {\n    padding: '16px'\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AiOutlineSync } from 'react-icons/ai';\nimport {\n  Paper,\n  Grid,\n  withStyles,\n  Toolbar,\n  AppBar,\n  Box,\n  IconButton,\n  Tooltip\n} from '@material-ui/core';\n\nimport styles from './ViewSupervisors.styles';\nimport ProgressOverlay from '../../Common/ProgressOverlay';\nimport SuccessErrorAlert from '../../Common/SuccessErrorAlert';\nimport AdvancedTable from '../../Common/AdvancedTable';\n\nfunction ViewSupervisorsPresenter({ classes, supervisors, error, loading, onRefresh, success }) {\n  return (\n    <ProgressOverlay visible={loading}>\n      <Paper className={classes.root}>\n        <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n          <Toolbar>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs>\n                <p className={classes.title}>View Supervisors</p>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Refresh Supervisors List\">\n                <IconButton onClick={onRefresh}>\n                  <AiOutlineSync />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Grid container direction=\"column\" alignItems=\"stretch\" className={classes.wrapper}>\n          <SuccessErrorAlert success={success} error={error} />\n\n          <Grid item>\n            <Box px={2} pb={2}>\n              Below the list of supervisors in the system are given. Invite Users to add supervisors\n              to the syetem.\n            </Box>\n          </Grid>\n\n          <Grid item>\n            <AdvancedTable\n              columns={[\n                { title: 'Name', field: 'name' },\n                { title: 'Email', field: 'email' }\n              ]}\n              data={supervisors.map(({ id, firstName, lastName, email }) => ({\n                id,\n                name: `${firstName} ${lastName}`,\n                email\n              }))}\n              title=\"\"\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </ProgressOverlay>\n  );\n}\n\nViewSupervisorsPresenter.defaultProps = {\n  error: null,\n  success: null\n};\n\nViewSupervisorsPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  supervisors: PropTypes.array.isRequired,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  onRefresh: PropTypes.func.isRequired,\n  success: PropTypes.string\n};\n\nexport default withStyles(styles)(ViewSupervisorsPresenter);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ViewSupervisorsPresenter from './ViewSupervisors.presenter';\nimport {\n  adminAdministrationSyncSupervisors,\n  adminAdministrationDeleteSupervisor\n} from '../../../redux/actions/AdminAdministrationActions';\n\nfunction ViewSupervisors() {\n  const dispatch = useDispatch();\n  const {\n    supervisors,\n    supervisorsSyncLoading,\n    supervisorsSyncSuccess,\n    supervisorsSyncError,\n    supervisorDeleteLoading,\n    supervisorDeleteSuccess,\n    supervisorDeleteError,\n    token\n  } = useSelector(state => ({\n    ...state.adminAdministration,\n    token: state.auth.token\n  }));\n\n  useEffect(() => {\n    if (!supervisorsSyncLoading && !supervisorsSyncSuccess && !supervisorsSyncError) {\n      dispatch(adminAdministrationSyncSupervisors(token));\n    }\n  }, [dispatch, token, supervisorsSyncLoading, supervisorsSyncSuccess, supervisorsSyncError]);\n\n  const onRefresh = () => {\n    dispatch(adminAdministrationSyncSupervisors(token));\n  };\n\n  const deleteSupervisor = ({ id, name }) => {\n    dispatch(adminAdministrationDeleteSupervisor(token, { id, name }));\n  };\n\n  return (\n    <ViewSupervisorsPresenter\n      loading={supervisorsSyncLoading || supervisorDeleteLoading}\n      supervisors={supervisors}\n      error={supervisorDeleteError || supervisorsSyncError}\n      onRefresh={onRefresh}\n      deleteSupervisor={deleteSupervisor}\n      success={supervisorDeleteSuccess}\n    />\n  );\n}\n\nexport default ViewSupervisors;\n","const styles = () => ({\n  root: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  wrapper: {\n    padding: '16px'\n  },\n\n  margin: { marginRight: 5 }\n});\n\nexport default styles;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Typography, AppBar, Toolbar, Grid, Paper, Box } from '@material-ui/core';\nimport { exportComponentAsJPEG, exportComponentAsPDF } from 'react-component-export-image';\nimport Barcode from 'react-barcode';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport styles from './GenerateBarcode.styles';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass BarcodeComponent extends React.Component {\n  render() {\n    const { barcode } = this.props;\n    if (barcode == null) {\n      return (\n        <>\n          <Box height={80} />\n          <Typography style={{ fontSize: 18 }}>Generate New Barcode from Button Below</Typography>\n          <Box height={80} />\n        </>\n      );\n    }\n    return <Barcode value={barcode} />;\n  }\n}\n\nfunction GenerateBarcode({ classes }) {\n  const getNewBarcode = () => {\n    const digits = 15;\n    const pad = 10 ** (digits - 1);\n    const bc = Math.floor(pad + Math.random() * 9 * pad);\n    return `gen${bc}`;\n  };\n\n  const [barcode, setBarcode] = useState(getNewBarcode());\n\n  const handleGenerate = () => {\n    setBarcode(getNewBarcode());\n  };\n\n  const componentRef = useRef();\n\n  return (\n    <Paper className={classes.root}>\n      <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n        <Toolbar>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item xs>\n              <p className={classes.title}>Generate Barcode</p>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <Grid container direction=\"column\" alignItems=\"stretch\" className={classes.wrapper}>\n        {/* <SuccessErrorAlert success={success} error={error} /> */}\n        <Grid item>\n          <Box px={2} pb={2}>\n            Create random bar codes and print them.\n          </Box>\n        </Grid>\n\n        <Box textAlign=\"center\" py={2}>\n          <BarcodeComponent ref={componentRef} barcode={barcode} />\n        </Box>\n\n        <Grid item>\n          <Box py={1} textAlign=\"center\">\n            <Button\n              className={classes.margin}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleGenerate}\n            >\n              Generate New Barcode\n            </Button>\n            <Button\n              className={classes.margin}\n              variant=\"contained\"\n              color=\"default\"\n              onClick={() => navigator.clipboard.writeText(barcode)}\n            >\n              Copy Barcode\n            </Button>\n            <Button\n              className={classes.margin}\n              variant=\"contained\"\n              color=\"default\"\n              onClick={() => exportComponentAsPDF(componentRef)}\n            >\n              Export as PDF\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              onClick={() => exportComponentAsJPEG(componentRef)}\n            >\n              Export as Image\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nBarcodeComponent.defaultProps = {\n  barcode: null\n};\n\nBarcodeComponent.propTypes = {\n  barcode: PropTypes.string\n};\n\nGenerateBarcode.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(GenerateBarcode);\n","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\n// import { PageNotFound, ManageUsers, Dashboard, InviteUsers, CreateLabs } from '../AdminPages';\nimport {\n  PageNotFound,\n  Dashboard,\n  InviteUsers,\n  CreateLabs,\n  RetractInvitations,\n  CreateRoles,\n  DeleteRoles,\n  CreateItemsets,\n  ViewUsers,\n  ViewItemSets,\n  AssignStaff,\n  CreateItems,\n  ViewItems,\n  LendItems,\n  ViewTemporaryItems\n} from '../AdminPages';\nimport ViewLabs from '../AdminPages/ViewLabs/ViewLabs';\nimport CreateSupervisors from '../AdminPages/CreateSupervisors/CreateSupervisors';\nimport ViewSupervisors from '../AdminPages/ViewSupervisors/ViewSupervisors';\nimport GenerateBarcode from '../AdminPages/GenerateBarcode/GenerateBarcode';\n\nexport default function AdminRouter() {\n  const match = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${match.url}/administration/users`}>\n        <ViewUsers />\n      </Route>\n      <Route exact path={`${match.url}/dashboard`}>\n        <Dashboard />\n      </Route>\n      <Route exact path={`${match.url}/users/invite`}>\n        <InviteUsers />\n      </Route>\n      <Route exact path={`${match.url}/labs/createlabs`}>\n        <CreateLabs />\n      </Route>\n      <Route exact path={`${match.url}/labs/assignstaff`}>\n        <AssignStaff />\n      </Route>\n      <Route exact path={`${match.url}/users/retract`}>\n        <RetractInvitations />\n      </Route>\n      <Route exact path={`${match.url}/administration/roles/create`}>\n        <CreateRoles />\n      </Route>\n      <Route exact path={`${match.url}/administration/roles/delete`}>\n        <DeleteRoles />\n      </Route>\n      <Route exact path={`${match.url}/lab/itemsets/create`}>\n        <CreateItemsets />\n      </Route>\n      <Route exact path={`${match.url}/labs/labs`}>\n        <ViewLabs />\n      </Route>\n      <Route exact path={`${match.url}/itemset/list`}>\n        <ViewItemSets />\n      </Route>\n      <Route exact path={`${match.url}/items/create`}>\n        <CreateItems />\n      </Route>\n      <Route exact path={`${match.url}/items/list`}>\n        <ViewItems />\n      </Route>\n      <Route exact path={`${match.url}/lenditems/lend`}>\n        <LendItems />\n      </Route>\n      <Route exact path={`${match.url}/items/generatebarcode`}>\n        <GenerateBarcode />\n      </Route>\n      <Route exact path={`${match.url}/administration/supervisor/add`}>\n        <CreateSupervisors />\n      </Route>\n      <Route exact path={`${match.url}/administration/supervisor/list`}>\n        <ViewSupervisors />\n      </Route>\n      <Route exact path={`${match.url}/tempitems`}>\n        <ViewTemporaryItems />\n      </Route>\n      <Route>\n        <PageNotFound />\n      </Route>\n    </Switch>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport { Navigator, Header } from './Layout';\nimport AdminRouter from './AdminRouter';\nimport { styles, drawerWidth } from './AdminPanel.styles';\n\nfunction AdminPanel({ classes }) {\n  // Drawer open state - for small devices\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  // Drawer open callback\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <nav className={classes.drawer}>\n        <Hidden smUp implementation=\"js\">\n          <Navigator\n            PaperProps={{ style: { width: drawerWidth } }}\n            variant=\"temporary\"\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n          />\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Navigator PaperProps={{ style: { width: drawerWidth } }} />\n        </Hidden>\n      </nav>\n      <div className={classes.app}>\n        <Header onDrawerToggle={handleDrawerToggle} />\n        <main className={classes.main}>\n          <AdminRouter />\n        </main>\n      </div>\n    </div>\n  );\n}\n\nAdminPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(AdminPanel);\n","const drawerWidth = 256;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    minHeight: '100vh'\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  app: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  main: {\n    flex: 1,\n    padding: theme.spacing(6, 4),\n    background: `url(\"${process.env.PUBLIC_URL}/images/admin_wallpaper.png\")`,\n    backgroundRepeat: 'no-repeat',\n    backgroundAttachment: 'fixed',\n    backgroundPosition: 'center',\n    backgroundSize: 'stretch'\n  }\n});\n\nexport { styles, drawerWidth };\n","const style = theme => ({\n  root: {\n    background: `url(\"${process.env.PUBLIC_URL}/images/admin_wallpaper.png\")`,\n    backgroundRepeat: 'no-repeat',\n    backgroundAttachment: 'fixed',\n    backgroundPosition: 'center',\n    backgroundSize: 'stretch'\n  },\n  margin: {\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(1)\n  },\n  padding: {\n    padding: theme.spacing(1)\n  },\n  textField: {\n    minWidth: 300\n  },\n  paragraph: {\n    fontSize: 12\n  },\n  warning: {\n    color: 'red'\n  },\n  buttonGrid: {\n    textAlign: 'right'\n  }\n});\n\nexport default style;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { Divider, InputAdornment, Box } from '@material-ui/core';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport Alert from '@material-ui/lab/Alert';\nimport { AiOutlineLock, AiOutlineMail } from 'react-icons/ai';\n\nimport style from './SignInScreen.styles';\nimport ProgressOverlay from '../Common/ProgressOverlay';\n\nfunction SignInScreenPresenter({ classes, validationSchema, onSubmit, error, loading }) {\n  return (\n    <ProgressOverlay visible={loading}>\n      <Grid\n        className={classes.root}\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ minHeight: '100vh' }}\n      >\n        <Grid item>\n          <Formik\n            initialValues={{ email: '', password: '' }}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            {({ submitForm, isSubmitting }) => (\n              <Form>\n                <Card>\n                  <Box mx={1}>\n                    <CardContent className={classes.padding}>\n                      <Grid className={classes.textField}>\n                        <h2>Sign In</h2>\n                        <p className={classes.paragraph}>\n                          Please sign in to continue from where you left off\n                        </p>\n                        {error && <Alert severity=\"error\">{error}</Alert>}\n                      </Grid>\n                      <Divider className={classes.margin} />\n                      <Grid>\n                        <Field\n                          className={clsx(classes.margin, classes.textField)}\n                          component={TextField}\n                          required\n                          name=\"email\"\n                          label=\"Email\"\n                          variant=\"outlined\"\n                          type=\"email\"\n                          placeholder=\"youremail@mail.com\"\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <AiOutlineMail />\n                              </InputAdornment>\n                            )\n                          }}\n                        />\n                      </Grid>\n                      <Grid>\n                        <Field\n                          className={clsx(classes.margin, classes.textField)}\n                          component={TextField}\n                          required\n                          name=\"password\"\n                          label=\"Password\"\n                          variant=\"outlined\"\n                          type=\"password\"\n                          placeholder=\"mypassword\"\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <AiOutlineLock />\n                              </InputAdornment>\n                            )\n                          }}\n                        />\n                      </Grid>\n                      <Grid className={classes.buttonGrid}>\n                        <Button\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          disabled={isSubmitting}\n                          onClick={submitForm}\n                        >\n                          Sign In\n                        </Button>\n                      </Grid>\n                    </CardContent>\n                  </Box>\n                </Card>\n              </Form>\n            )}\n          </Formik>\n        </Grid>\n      </Grid>\n    </ProgressOverlay>\n  );\n}\n\nSignInScreenPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  validationSchema: PropTypes.any.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nSignInScreenPresenter.defaultProps = {\n  error: null\n};\n\nexport default withStyles(style)(SignInScreenPresenter);\n","import React from 'react';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { authSignIn } from '../../redux/actions/AuthActions';\nimport SignInScreenPresenter from './SignInScreen.presenter';\n\n/**\n * User sign in screen smart component\n */\nfunction SignInScreen() {\n  // Schema of the expected user inputs\n  const schema = yup.object().shape({\n    email: yup\n      .string()\n      .email('Invalid email')\n      .required('Required'),\n    password: yup.string().required('Required')\n  });\n\n  // To emit sign in events\n  const dispatch = useDispatch();\n\n  // Current form state\n  const { signIn, user } = useSelector(state => state.auth);\n  const { error, loading } = signIn;\n\n  // If logged in(user != null) redirect to admin panel\n  if (user) {\n    return <Redirect push to=\"/admin/dashboard\" />;\n  }\n\n  // On submit callback - setSubmitting is used to disable the form during async call\n  const onSubmit = (values, { setSubmitting }) => {\n    // Callback to enable form after async call\n    const complete = () => setSubmitting(false);\n    // Sign in action dispatch\n    dispatch(authSignIn(values, complete));\n  };\n\n  // Associated dumb component\n  return (\n    <SignInScreenPresenter\n      validationSchema={schema}\n      error={error}\n      onSubmit={onSubmit}\n      loading={loading}\n    />\n  );\n}\n\nexport default SignInScreen;\n","const style = theme => ({\n  root: {\n    background: `url(\"${process.env.PUBLIC_URL}/images/admin_wallpaper.png\")`,\n    backgroundRepeat: 'no-repeat',\n    backgroundAttachment: 'fixed',\n    backgroundPosition: 'center',\n    backgroundSize: 'stretch'\n  },\n  margin: {\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(1)\n  },\n  padding: {\n    padding: theme.spacing(1)\n  },\n  textField: {\n    minWidth: 400\n  },\n  paragraph: {\n    fontSize: 14\n  },\n  warning: {\n    color: 'red'\n  },\n  buttonGrid: {\n    textAlign: 'right'\n  }\n});\n\nexport default style;\n","import React from 'react';\n\n/**\n * Returns text to be rendered on the sign in page\n * @param {string} roleName Name of user\n * @param {bool} loading Whether an async call is ongoing\n */\nfunction informationTextLines(roleName, loading) {\n  if (roleName) {\n    return (\n      <>\n        You have been offered the role of&nbsp;\n        <b>{roleName}</b>\n        .\n        <br />\n        Please sign up to create an account and get started.\n      </>\n    );\n  }\n  if (loading) {\n    return <>Please wait...</>;\n  }\n\n  return (\n    <>\n      Something went wrong!\n      <br />\n      Please contact system administrators for further assist.\n    </>\n  );\n}\n\nexport default informationTextLines;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { Divider, InputAdornment, TextField as MuiTextField, Box } from '@material-ui/core';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport Alert from '@material-ui/lab/Alert';\nimport { AiOutlineUser, AiOutlineMail, AiOutlineLock } from 'react-icons/ai';\n\nimport style from './SignUpScreen.styles';\nimport ProgressOverlay from '../Common/ProgressOverlay';\nimport informationTextLines from './SignUpScreen.helpers';\n\nfunction SignUpScreenPresenter({ classes, validationSchema, onSubmit, signUpPageState }) {\n  const { invitationOwner, requestingInvitation, loading, error } = signUpPageState;\n\n  // Get email and role name with empty strings as default\n  let email = '';\n  let roleName = '';\n  if (invitationOwner) {\n    email = invitationOwner.email;\n    roleName = invitationOwner.Role.name;\n  }\n\n  return (\n    <ProgressOverlay visible={requestingInvitation || loading}>\n      <Grid\n        className={classes.root}\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ minHeight: '100vh' }}\n      >\n        <Grid item>\n          <Formik\n            initialValues={{\n              firstName: '',\n              lastName: '',\n              password: '',\n              retypePassword: ''\n            }}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            {({ submitForm, isSubmitting }) => (\n              <Form>\n                <Card>\n                  <Box mx={1}>\n                    <CardContent className={classes.padding}>\n                      <Grid className={classes.textField}>\n                        <h2>Complete Your Registration</h2>\n                        <p className={classes.paragraph}>\n                          {informationTextLines(roleName, loading || requestingInvitation)}\n                        </p>\n                        {error && <Alert severity=\"error\">{error}</Alert>}\n                      </Grid>\n                      <Divider className={classes.margin} />\n                      <Grid>\n                        <MuiTextField\n                          className={clsx(classes.margin, classes.textField)}\n                          disabled\n                          value={email}\n                          label=\"Email\"\n                          variant=\"outlined\"\n                          type=\"email\"\n                          placeholder=\"Token invalid\"\n                          InputProps={{\n                            readOnly: true,\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <AiOutlineMail />\n                              </InputAdornment>\n                            )\n                          }}\n                        />\n                      </Grid>\n                      <Grid>\n                        <Field\n                          className={clsx(classes.margin, classes.textField)}\n                          component={TextField}\n                          required\n                          name=\"firstName\"\n                          label=\"First Name\"\n                          variant=\"outlined\"\n                          type=\"text\"\n                          placeholder=\"John\"\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <AiOutlineUser />\n                              </InputAdornment>\n                            )\n                          }}\n                        />\n                      </Grid>\n                      <Grid>\n                        <Field\n                          className={clsx(classes.margin, classes.textField)}\n                          component={TextField}\n                          required\n                          name=\"lastName\"\n                          label=\"Last Name\"\n                          variant=\"outlined\"\n                          type=\"text\"\n                          placeholder=\"Doe\"\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <AiOutlineUser />\n                              </InputAdornment>\n                            )\n                          }}\n                        />\n                      </Grid>\n                      <Grid>\n                        <Field\n                          className={clsx(classes.margin, classes.textField)}\n                          component={TextField}\n                          required\n                          name=\"password\"\n                          label=\"Password\"\n                          variant=\"outlined\"\n                          type=\"password\"\n                          placeholder=\"mypassword\"\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <AiOutlineLock />\n                              </InputAdornment>\n                            )\n                          }}\n                        />\n                      </Grid>\n                      <Grid>\n                        <Field\n                          className={clsx(classes.margin, classes.textField)}\n                          component={TextField}\n                          required\n                          name=\"retypePassword\"\n                          label=\"Retype Password\"\n                          variant=\"outlined\"\n                          type=\"password\"\n                          placeholder=\"mypassword\"\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <AiOutlineLock />\n                              </InputAdornment>\n                            )\n                          }}\n                        />\n                      </Grid>\n                      <Grid className={classes.buttonGrid}>\n                        <Button\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          disabled={isSubmitting}\n                          onClick={submitForm}\n                        >\n                          Register\n                        </Button>\n                      </Grid>\n                    </CardContent>\n                  </Box>\n                </Card>\n              </Form>\n            )}\n          </Formik>\n        </Grid>\n      </Grid>\n    </ProgressOverlay>\n  );\n}\n\nSignUpScreenPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  validationSchema: PropTypes.any.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  signUpPageState: PropTypes.object.isRequired\n};\n\nexport default withStyles(style)(SignUpScreenPresenter);\n","import React, { useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, withRouter } from 'react-router-dom';\n\nimport {\n  authSignUp,\n  authRequestInvitation,\n  authInvitationRedirected\n} from '../../redux/actions/AuthActions';\nimport SignUpScreenPresenter from './SignUpScreen.presenter';\n\n// Validation schema of user form input\nconst schema = yup.object().shape({\n  firstName: yup.string().required('Required'),\n  lastName: yup.string().required('Required'),\n  password: yup.string().required('Required'),\n  // Retype password should be equal to password\n  retypePassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null, ''], 'Passwords must match')\n    .required('Required')\n});\n\n/**\n * User sign up screen smart component\n */\nfunction SignUpScreen({ history }) {\n  // To dispatch sign up actions\n  const dispatch = useDispatch();\n  // Required state\n  const {\n    requestingInvitation,\n    loading,\n    error,\n    invitationActivated,\n    invitationOwner\n  } = useSelector(state => state.auth.signUp);\n\n  // Get token from path parameter(address)\n  const { registrationToken } = useParams();\n\n  // Run token verify method on startup\n  // If invitation accepted, they will be redirected. so don't run for them.\n  useEffect(() => {\n    if (invitationActivated) {\n      dispatch(authInvitationRedirected());\n      history.push('/login');\n    } else {\n      dispatch(authRequestInvitation(registrationToken));\n    }\n  }, [invitationActivated, registrationToken, dispatch, history]);\n\n  // On form submit callback\n  const onSubmit = (values, { setSubmitting }) => {\n    // When completed, redirect to login page\n    const complete = () => {\n      setSubmitting(false);\n    };\n\n    // Register\n    dispatch(\n      authSignUp(\n        {\n          token: registrationToken,\n          firstName: values.firstName,\n          lastName: values.lastName,\n          password: values.password\n        },\n        complete\n      )\n    );\n  };\n\n  // Associated dumb component\n  return (\n    <SignUpScreenPresenter\n      validationSchema={schema}\n      onSubmit={onSubmit}\n      signUpPageState={{\n        requestingInvitation,\n        error,\n        loading,\n        invitationOwner\n      }}\n    />\n  );\n}\n\nSignUpScreen.propTypes = {\n  history: PropTypes.object.isRequired\n};\n\nexport default withRouter(SignUpScreen);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { capitalize } from '@material-ui/core/utils';\nimport MuiTypography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  markedH2Center: {\n    height: 4,\n    width: 73,\n    display: 'block',\n    margin: `${theme.spacing(1)}px auto 0`,\n    backgroundColor: theme.palette.secondary.main\n  },\n  markedH3Center: {\n    height: 4,\n    width: 55,\n    display: 'block',\n    margin: `${theme.spacing(1)}px auto 0`,\n    backgroundColor: theme.palette.secondary.main\n  },\n  markedH4Center: {\n    height: 4,\n    width: 55,\n    display: 'block',\n    margin: `${theme.spacing(1)}px auto 0`,\n    backgroundColor: theme.palette.secondary.main\n  },\n  markedH6Left: {\n    height: 2,\n    width: 28,\n    display: 'block',\n    marginTop: theme.spacing(0.5),\n    background: 'currentColor'\n  }\n});\n\nconst variantMapping = {\n  h1: 'h1',\n  h2: 'h1',\n  h3: 'h1',\n  h4: 'h1',\n  h5: 'h3',\n  h6: 'h2',\n  subtitle1: 'h3'\n};\n\nfunction Typography(props) {\n  const { children, classes, marked = false, variant, ...other } = props;\n\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <MuiTypography variantMapping={variantMapping} variant={variant} {...other}>\n      {children}\n      {marked ? (\n        <span className={classes[`marked${capitalize(variant) + capitalize(marked)}`]} />\n      ) : null}\n    </MuiTypography>\n  );\n}\n\nTypography.defaultProps = {\n  children: '',\n  marked: false,\n  variant: null\n};\n\nTypography.propTypes = {\n  children: PropTypes.node,\n  classes: PropTypes.object.isRequired,\n  marked: PropTypes.oneOf([false, 'center', 'left']),\n  variant: PropTypes.string\n};\n\nexport default withStyles(styles)(Typography);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Container from '@material-ui/core/Container';\nimport { AiOutlineTwitter, AiOutlineFacebook } from 'react-icons/ai';\n\nimport Typography from '../components/Typography';\n\nfunction Copyright() {\n  return (\n    <>\n      {'© '}\n      <Link color=\"inherit\" href=\"https://openinventoryorg.github.io/web-frontend/\">\n        Open Inventory Systems&nbsp;\n      </Link>\n      {new Date().getFullYear()}\n    </>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff'\n  },\n  container: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(8),\n    display: 'flex'\n  },\n  iconsWrapper: {\n    height: 120\n  },\n  icons: {\n    display: 'flex'\n  },\n  icon: {\n    color: '#fff',\n    width: 48,\n    height: 48,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: theme.spacing(1),\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.dark\n    }\n  },\n  list: {\n    margin: 0,\n    listStyle: 'none',\n    padding: 0\n  },\n  listItem: {\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5)\n  },\n  link: {\n    color: '#fff'\n  }\n}));\n\nexport default function AppFooter() {\n  const classes = useStyles();\n\n  return (\n    <Typography component=\"footer\" className={classes.root}>\n      <Container className={classes.container}>\n        <Grid container spacing={5}>\n          <Grid item xs={6} sm={4} md={3}>\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"flex-end\"\n              className={classes.iconsWrapper}\n              spacing={2}\n            >\n              <Grid item className={classes.icons}>\n                <a href=\"https://twitter.com/\" className={classes.icon}>\n                  <AiOutlineTwitter size={24} />\n                </a>\n                <a href=\"https://facebook.com\" className={classes.icon}>\n                  <AiOutlineFacebook size={24} />\n                </a>\n              </Grid>\n              <Grid item>\n                <Copyright />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={6} sm={4} md={2}>\n            <Typography variant=\"h6\" marked=\"left\" gutterBottom>\n              Legal\n            </Typography>\n            <ul className={classes.list}>\n              <li className={classes.listItem}>\n                <Link className={classes.link} href=\"/\">\n                  Terms\n                </Link>\n              </li>\n              <li className={classes.listItem}>\n                <Link className={classes.link} href=\"/\">\n                  Privacy\n                </Link>\n              </li>\n            </ul>\n          </Grid>\n          <Grid item xs={6} sm={8} md={4}>\n            <Typography variant=\"h6\" marked=\"left\" gutterBottom>\n              Meta\n            </Typography>\n            <ul className={classes.list}>\n              <li className={classes.listItem}>\n                <Link className={classes.link} href=\"/\">\n                  Login\n                </Link>\n              </li>\n              <li className={classes.listItem}>\n                <Link className={classes.link} href=\"/\">\n                  Admin Dashboard\n                </Link>\n              </li>\n            </ul>\n          </Grid>\n        </Grid>\n      </Container>\n    </Typography>\n  );\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nexport default withStyles(theme => ({\n  root: {\n    borderRadius: 0,\n    fontWeight: theme.typography.fontWeightMedium,\n    fontFamily: theme.typography.fontFamilySecondary,\n    padding: theme.spacing(2, 4),\n    fontSize: theme.typography.pxToRem(14),\n    boxShadow: 'none',\n    '&:active, &:focus': {\n      boxShadow: 'none'\n    }\n  },\n  sizeSmall: {\n    padding: theme.spacing(1, 3),\n    fontSize: theme.typography.pxToRem(13)\n  },\n  sizeLarge: {\n    padding: theme.spacing(2, 5),\n    fontSize: theme.typography.pxToRem(16)\n  }\n}))(Button);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { AiOutlineArrowDown } from 'react-icons/ai';\n\nconst styles = theme => ({\n  root: {\n    color: theme.palette.common.white,\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.up('sm')]: {\n      height: '80vh',\n      minHeight: 500,\n      maxHeight: 1300\n    }\n  },\n  container: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(14),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  background: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    zIndex: -2\n  },\n  arrowDown: {\n    position: 'absolute',\n    bottom: theme.spacing(4)\n  }\n});\n\nfunction ProductHeroLayout(props) {\n  const { backgroundClassName, children, classes } = props;\n\n  return (\n    <section className={classes.root}>\n      <Container className={classes.container}>\n        <img\n          src={`${process.env.PUBLIC_URL}/images/whitedots.png`}\n          alt=\"wonder\"\n          width=\"147\"\n          height=\"80\"\n        />\n        {children}\n        <div className={clsx(classes.background, backgroundClassName)} />\n        <AiOutlineArrowDown className={classes.arrowDown} size={16} />\n      </Container>\n    </section>\n  );\n}\n\nProductHeroLayout.propTypes = {\n  backgroundClassName: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ProductHeroLayout);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Button from '../components/Button';\nimport Typography from '../components/Typography';\nimport ProductHeroLayout from './ProductHeroLayout';\n\nconst backgroundImage = '/images/home.png';\n\nconst styles = theme => ({\n  background: {\n    backgroundImage: `url(${backgroundImage})`,\n    backgroundColor: '#23395B',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover'\n  },\n  button: {\n    minWidth: 200\n  },\n  h5: {\n    marginBottom: theme.spacing(4),\n    marginTop: theme.spacing(4),\n    [theme.breakpoints.up('sm')]: {\n      marginTop: theme.spacing(10)\n    }\n  },\n  more: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nfunction ProductHero(props) {\n  const { classes } = props;\n\n  const user = useSelector(state => state.auth.user);\n  let linkData = {\n    text: 'Sign In',\n    url: '#/login'\n  };\n\n  if (user) {\n    linkData = {\n      text: 'Admin Console',\n      url: '#/admin/dashboard'\n    };\n  }\n\n  return (\n    <ProductHeroLayout backgroundClassName={classes.background}>\n      {/* Increase the network loading priority of the background image. */}\n      <img\n        style={{ display: 'none' }}\n        src={`${process.env.PUBLIC_URL}/${backgroundImage}`}\n        alt=\"increase priority\"\n      />\n      <Typography color=\"inherit\" align=\"center\" variant=\"h2\" marked=\"center\">\n        Digitalize Lab Management\n      </Typography>\n      <Typography color=\"inherit\" align=\"center\" variant=\"h5\" className={classes.h5}>\n        Use the service to manage labs more easily. Especially tuned for computer laboratories.\n      </Typography>\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        size=\"large\"\n        className={classes.button}\n        component=\"a\"\n        href={linkData.url}\n      >\n        {linkData.text}\n      </Button>\n      <Typography variant=\"body2\" color=\"inherit\" className={classes.more}>\n        Automate and Digitalize\n      </Typography>\n    </ProductHeroLayout>\n  );\n}\n\nProductHero.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ProductHero);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport { AiOutlineCompass, AiOutlineCode, AiOutlineApple } from 'react-icons/ai';\n\nimport Typography from '../components/Typography';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.secondary.light\n  },\n  container: {\n    marginTop: theme.spacing(15),\n    marginBottom: theme.spacing(15),\n    display: 'flex',\n    position: 'relative'\n  },\n  item: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(0, 5)\n  },\n  icon: {\n    height: 60,\n    width: 60\n  },\n  title: {\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(5)\n  },\n  text: {\n    fontSize: 18,\n    fontWeight: 300,\n    textAlign: 'center'\n  },\n  curvyLines: {\n    pointerEvents: 'none',\n    position: 'absolute',\n    top: -180\n  }\n});\n\nfunction ProductValues(props) {\n  const { classes } = props;\n\n  return (\n    <section className={classes.root}>\n      <Container className={classes.container}>\n        <Grid container spacing={5}>\n          <Grid item xs={12} md={4}>\n            <div className={classes.item}>\n              <AiOutlineCompass className={classes.icon} />\n              <Typography variant=\"h5\" className={classes.title}>\n                Time Saving\n              </Typography>\n              <Typography className={classes.text}>\n                This is the time to reduce paperwork for inventory management system and save our time.\n              </Typography>\n            </div>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <div className={classes.item}>\n              <AiOutlineCode className={classes.icon} />\n              <Typography variant=\"h5\" className={classes.title}>\n                More efficient\n              </Typography>\n              <Typography className={classes.text}>\n                Open inventory system supports more efficient way to lend a lab item without going place to place.\n              </Typography>\n            </div>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <div className={classes.item}>\n              <AiOutlineApple className={classes.icon} />\n              <Typography variant=\"h5\" className={classes.title}>\n                Free of charge\n              </Typography>\n              <Typography className={classes.text}>\n                Open inventory system is open source project. So anyone can experience this application.\n              </Typography>\n            </div>\n          </Grid>\n        </Grid>\n      </Container>\n    </section>\n  );\n}\n\nProductValues.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ProductValues);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { AiOutlineMail, AiOutlineDownload, AiOutlineLock } from 'react-icons/ai';\nimport { Box } from '@material-ui/core';\n\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Button from '../components/Button';\nimport Typography from '../components/Typography';\nimport { SERVER } from '../../../../redux/actions/serverConstants';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    backgroundColor: '#ABDFC1',\n    overflow: 'hidden'\n  },\n  container: {\n    marginTop: theme.spacing(10),\n    marginBottom: theme.spacing(15),\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  item: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(0, 5)\n  },\n  title: {\n    marginBottom: theme.spacing(10)\n  },\n  number: {\n    fontSize: 30,\n    fontFamily: theme.typography.fontFamily,\n    color: theme.palette.secondary.main,\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  image: {\n    height: 55,\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4)\n  },\n  bottomText: {\n    fontSize: 18,\n    textAlign: 'center'\n  },\n  text: {\n    fontWeight: 300,\n    fontSize: 18,\n    textAlign: 'center'\n  },\n  curvyLines: {\n    pointerEvents: 'none',\n    position: 'absolute',\n    top: -180,\n    opacity: 0.7\n  },\n  button: {\n    marginTop: theme.spacing(8)\n  },\n  icon: {\n    height: 60,\n    width: 60,\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(4)\n  }\n});\n\nfunction ProductHowItWorks(props) {\n  const { classes } = props;\n\n  return (\n    <section className={classes.root}>\n      <Container className={classes.container}>\n        <Typography variant=\"h4\" marked=\"center\" className={classes.title} component=\"h2\">\n          How it works\n        </Typography>\n        <div>\n          <Grid container spacing={5}>\n            <Grid item xs={12} md={4}>\n              <div className={classes.item}>\n                <div className={classes.number}>1.</div>\n                <AiOutlineMail className={classes.icon} />\n                <Typography className={classes.text}>\n                  Accept the invitation sent to your email from the Lab Administrators.\n                </Typography>\n              </div>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <div className={classes.item}>\n                <div className={classes.number}>2.</div>\n                <AiOutlineDownload className={classes.icon} />\n                <Typography className={classes.text}>\n                  Download Mobile Application from Following Link.\n                </Typography>\n              </div>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <div className={classes.item}>\n                <div className={classes.number}>3.</div>\n                <AiOutlineLock className={classes.icon} />\n                <Typography className={classes.text}>\n                  Enter server address and credentials to start using the system via Mobile Devices.\n                </Typography>\n              </div>\n            </Grid>\n          </Grid>\n        </div>\n        <Button\n          color=\"secondary\"\n          size=\"large\"\n          variant=\"contained\"\n          className={classes.button}\n          component=\"a\"\n          href=\"https://openinventoryorg.github.io/web-frontend/app/openinventory.apk\"\n        >\n          Download Mobile App\n        </Button>\n        <Box pt={2}>\n          <Typography className={classes.bottomText}>\n            Server address of this website:&nbsp;\n            {SERVER}\n          </Typography>\n        </Box>\n      </Container>\n    </section>\n  );\n}\n\nProductHowItWorks.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ProductHowItWorks);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '../components/Typography';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingTop: theme.spacing(9),\n    paddingBottom: theme.spacing(9),\n    backgroundColor: theme.palette.primary.main\n  },\n  button: {\n    border: '4px solid #fff',\n    color: '#FFF',\n    borderRadius: 0,\n    height: 'auto',\n    padding: theme.spacing(2, 5)\n  },\n  link: {\n    fontSize: 22,\n    color: '#FFF',\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3)\n  }\n});\n\nfunction ProductSmokingHero(props) {\n  const { classes } = props;\n\n  return (\n    <section className={classes.root}>\n      <Button\n        className={classes.button}\n        href=\"https://openinventoryorg.github.io/docs/\"\n        target=\"_blank\"\n      >\n        <Typography variant=\"h4\" component=\"span\">\n          Need Help to Get Started?\n        </Typography>\n      </Button>\n      <Typography variant=\"subtitle1\" className={classes.link}>\n        Visit our documentation and get started!\n      </Typography>\n    </section>\n  );\n}\n\nProductSmokingHero.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ProductSmokingHero);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiAppBar from '@material-ui/core/AppBar';\n\nconst styles = theme => ({\n  root: {\n    color: theme.palette.common.white\n  }\n});\n\nfunction AppBar(props) {\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <MuiAppBar elevation={0} position=\"static\" {...props} />;\n}\n\nAppBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(AppBar);\n","import { withStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nexport const styles = theme => ({\n  root: {\n    height: 64,\n    [theme.breakpoints.up('sm')]: {\n      height: 70\n    }\n  }\n});\n\nexport default withStyles(styles)(Toolbar);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\n\nimport AppBar from '../components/AppBar';\nimport Toolbar, { styles as toolbarStyles } from '../components/Toolbar';\n\nconst styles = theme => ({\n  title: {\n    fontSize: 24\n  },\n  placeholder: toolbarStyles(theme).root,\n  toolbar: {\n    justifyContent: 'space-between'\n  },\n  left: {\n    flex: 1\n  },\n  leftLinkActive: {\n    color: theme.palette.common.white\n  },\n  right: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  rightLink: {\n    fontSize: 16,\n    color: theme.palette.common.white,\n    marginLeft: theme.spacing(3)\n  },\n  linkSecondary: {\n    color: theme.palette.secondary.main\n  }\n});\n\nfunction AppAppBar(props) {\n  const { classes } = props;\n\n  const user = useSelector(state => state.auth.user);\n  let linkData = {\n    text: 'Sign In',\n    url: '#/login'\n  };\n\n  if (user) {\n    linkData = {\n      text: 'Admin Console',\n      url: '#/admin/dashboard'\n    };\n  }\n\n  return (\n    <div>\n      <AppBar position=\"fixed\">\n        <Toolbar className={classes.toolbar}>\n          <div className={classes.left} />\n          <Link variant=\"h6\" underline=\"none\" color=\"inherit\" className={classes.title} href=\"/\">\n            Open Inventory\n          </Link>\n          <div className={classes.right}>\n            <Link\n              color=\"inherit\"\n              variant=\"h6\"\n              underline=\"none\"\n              className={classes.rightLink}\n              href=\"https://openinventoryorg.github.io/docs/\"\n            >\n              Documentation\n            </Link>\n            <Link\n              color=\"inherit\"\n              variant=\"h6\"\n              underline=\"none\"\n              className={classes.rightLink}\n              href={linkData.url}\n            >\n              {linkData.text}\n            </Link>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.placeholder} />\n    </div>\n  );\n}\n\nAppAppBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(AppAppBar);\n","import React from 'react';\nimport { CssBaseline } from '@material-ui/core';\n\nimport AppFooter from './modules/views/AppFooter';\nimport ProductHero from './modules/views/ProductHero';\nimport ProductValues from './modules/views/ProductValues';\nimport ProductHowItWorks from './modules/views/ProductHowItWorks';\nimport ProductSmokingHero from './modules/views/ProductSmokingHero';\nimport AppAppBar from './modules/views/AppAppBar';\n\nfunction Index() {\n  return (\n    <>\n      <CssBaseline />\n      <AppAppBar />\n      <ProductHero />\n      <ProductValues />\n      <ProductSmokingHero />\n      <ProductHowItWorks />\n      <AppFooter />\n    </>\n  );\n}\n\nexport default Index;\n","const style = theme => ({\n  root: {\n    background: `url(\"${process.env.PUBLIC_URL}/images/admin_wallpaper.png\")`,\n    backgroundRepeat: 'no-repeat',\n    backgroundAttachment: 'fixed',\n    backgroundPosition: 'center',\n    backgroundSize: 'stretch'\n  },\n  margin: {\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(1)\n  },\n  padding: {\n    padding: theme.spacing(1)\n  },\n  paragraph: {\n    fontSize: 14\n  },\n  warning: {\n    color: 'red'\n  },\n  buttonGrid: {\n    textAlign: 'right'\n  },\n  row: {\n    maxWidth: 936\n  }\n});\n\nexport default style;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport {\n  Divider,\n  Box,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  Tooltip,\n  Button,\n  AppBar,\n  Tabs,\n  Tab,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions\n} from '@material-ui/core';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport {\n  AiOutlineUser,\n  AiOutlineLaptop,\n  AiOutlineMail,\n  AiOutlineMessage,\n  AiOutlineClockCircle\n} from 'react-icons/ai';\nimport { Image } from 'cloudinary-react';\nimport moment from 'moment';\nimport style from './SupervisorView.styles';\nimport ProgressOverlay from '../Common/ProgressOverlay';\nimport SuccessErrorAlert from '../Common/SuccessErrorAlert';\nimport { PageNotFound } from '../AdminPages';\n\nfunction ListTile(props) {\n  const { title, subtitle, icon } = props;\n\n  return (\n    <ListItem>\n      <ListItemAvatar>\n        <Avatar>{icon}</Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={title} secondary={subtitle} />\n    </ListItem>\n  );\n}\n\nfunction TabPanel(props) {\n  const { children, value, index } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction SupervisorViewPresenter({\n  classes,\n  request,\n  error,\n  success,\n  loading,\n  onAccept,\n  validationSchema,\n  onSubmit\n}) {\n  const [value, setValue] = React.useState(0);\n  const [declineOpen, setDeclineOpen] = useState(false);\n  const [acceptOpen, setAcceptOpen] = useState(false);\n\n  const openDeclineDialog = () => setDeclineOpen(true);\n  const closeDeclineDialog = () => setDeclineOpen(false);\n  const openAcceptDialog = () => setAcceptOpen(true);\n  const closeAcceptDialog = () => setAcceptOpen(false);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  if (request.User === undefined) return <PageNotFound />;\n\n  return (\n    <ProgressOverlay visible={loading}>\n      <Grid\n        className={classes.root}\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ minHeight: '100vh' }}\n      >\n        <SuccessErrorAlert success={success} error={error} />\n        <Card className={classes.card}>\n          <AppBar position=\"static\" color=\"primary\">\n            <Tabs value={value} onChange={handleChange}>\n              <Tab label=\"Basic Information\" />\n              <Tab label=\"Requested Items\" />\n            </Tabs>\n          </AppBar>\n          <TabPanel value={value} index={0}>\n            <ListTile\n              title={`${request.User.firstName} ${request.User.lastName}`}\n              subtitle=\"Requested by\"\n              icon={<AiOutlineUser />}\n            />\n            <ListTile\n              title={request.User.email}\n              subtitle=\"Email Address\"\n              icon={<AiOutlineMail />}\n            />\n            <ListTile\n              title={request.Lab.title}\n              subtitle=\"Requested from Lab\"\n              icon={<AiOutlineLaptop />}\n            />\n            <ListTile\n              title={moment(request.createdAt).fromNow()}\n              subtitle=\"Requested on\"\n              icon={<AiOutlineClockCircle />}\n            />\n            <ListTile title={request.reason} subtitle=\"Reason\" icon={<AiOutlineMessage />} />\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            {request.RequestItems.map(ri => (\n              <ListTile\n                key={ri.itemId}\n                title={ri.Item.ItemSet.title}\n                subtitle={ri.Item.serialNumber}\n                icon={\n                  ri.Item.ItemSet.image ? (\n                    <Image publicId={ri.Item.ItemSet.image} className={classes.image} />\n                  ) : (\n                    <AiOutlineLaptop />\n                  )\n                }\n              />\n            ))}\n          </TabPanel>\n\n          <Divider className={classes.margin} />\n          {request.status === 'REQUESTED' && (\n            <Grid item container direction=\"row\" justify=\"center\">\n              <Tooltip title=\"Accept the requested items\">\n                <Button\n                  className={classes.margin}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={openAcceptDialog}\n                >\n                  Accept\n                </Button>\n              </Tooltip>\n              <Box mx={1} />\n              <Tooltip title=\"Reject the requested items\">\n                <Button\n                  className={classes.margin}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={openDeclineDialog}\n                >\n                  Reject\n                </Button>\n              </Tooltip>\n            </Grid>\n          )}\n\n          {request.status === 'DECLINED' && (\n            <Grid item container direction=\"row\" justify=\"center\">\n              <Box my={2}>\n                <Button variant=\"outlined\" color=\"secondary\" onClick={() => {}}>\n                  You already declined the request.\n                  <br />\n                  Reason:&nbsp;\n                  {request.declineReason}\n                </Button>\n              </Box>\n            </Grid>\n          )}\n\n          {request.status === 'ACCEPTED' && (\n            <Grid item container direction=\"row\" justify=\"center\">\n              <Box my={2}>\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => {}}>\n                  You already accepted the request.\n                </Button>\n              </Box>\n            </Grid>\n          )}\n        </Card>\n      </Grid>\n\n      <Dialog open={declineOpen} onClose={closeDeclineDialog}>\n        <DialogTitle>Decline Request?</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Do you really want to decline this request. Please mention the reason to reject the\n            request.\n            <br />\n            This action cannot be undone.\n            <br />\n            <br />\n            <Formik\n              initialValues={{\n                reason: ''\n              }}\n              validationSchema={validationSchema}\n              onSubmit={onSubmit}\n            >\n              {({ submitForm, isSubmitting }) => (\n                <Form>\n                  <Grid className={classes.item} item>\n                    <Field\n                      component={TextField}\n                      required\n                      label=\"Enter The Reason\"\n                      name=\"reason\"\n                      variant=\"outlined\"\n                      type=\"text\"\n                      placeholder=\"Need it for next practical\"\n                      fullWidth\n                    />\n                  </Grid>\n                  <br />\n                  <Grid item>\n                    <Box textAlign=\"right\">\n                      <Button\n                        color=\"primary\"\n                        disabled={isSubmitting}\n                        onClick={() => {\n                          submitForm();\n                          closeDeclineDialog();\n                        }}\n                      >\n                        Confirm\n                      </Button>\n                      <Button onClick={closeDeclineDialog} color=\"primary\">\n                        Cancel\n                      </Button>\n                    </Box>\n                  </Grid>\n                </Form>\n              )}\n            </Formik>\n          </DialogContentText>\n        </DialogContent>\n      </Dialog>\n\n      <Dialog open={acceptOpen} onClose={closeAcceptDialog}>\n        <DialogTitle>Accept Request?</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Do you really want to accept this request. The student will be able to retrieve items\n            with approval from lab manager.\n            <br />\n            This action cannot be undone.\n            <br />\n            <br />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              onAccept();\n              closeAcceptDialog();\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            Yes\n          </Button>\n          <Button onClick={closeAcceptDialog} color=\"primary\">\n            No\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </ProgressOverlay>\n  );\n}\n\nListTile.defaultProps = {\n  subtitle: null\n};\n\nListTile.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  icon: PropTypes.any.isRequired\n};\n\nTabPanel.propTypes = {\n  children: PropTypes.any.isRequired,\n  value: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired\n};\n\nSupervisorViewPresenter.defaultProps = {\n  error: null,\n  success: null\n};\n\nSupervisorViewPresenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  request: PropTypes.object.isRequired,\n  error: PropTypes.string,\n  success: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  onAccept: PropTypes.func.isRequired,\n  validationSchema: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\n\nexport default withStyles(style)(SupervisorViewPresenter);\n","import axios from 'axios';\r\nimport * as yup from 'yup';\r\n\r\nimport {\r\n  SUPERVISOR_ITEM_MANAGEMENT_SYNC_ITEM_BEGIN,\r\n  SUPERVISOR_ITEM_MANAGEMENT_SYNC_ITEM_SUCCESS,\r\n  SUPERVISOR_ITEM_MANAGEMENT_SYNC_ITEM_FAILURE\r\n} from '../../actionTypes';\r\nimport { SERVER, SERVER_GET_REQUEST_ITEM } from '../serverConstants';\r\n\r\n/**\r\n * Action creator for beginning of requesting itemsets\r\n * @returns Redux action\r\n */\r\nconst SupervisorItemManagementSyncItemBegin = () => ({\r\n  type: SUPERVISOR_ITEM_MANAGEMENT_SYNC_ITEM_BEGIN\r\n});\r\n\r\nconst SupervisorItemManagementSyncItemSuccess = items => ({\r\n  type: SUPERVISOR_ITEM_MANAGEMENT_SYNC_ITEM_SUCCESS,\r\n  payload: { items }\r\n});\r\n\r\nconst SupervisorItemManagementSyncItemFailure = error => ({\r\n  type: SUPERVISOR_ITEM_MANAGEMENT_SYNC_ITEM_FAILURE,\r\n  payload: { error }\r\n});\r\n\r\nconst responseSchema = yup.object().shape({\r\n  id: yup.string().required(),\r\n  reason: yup.string().required(),\r\n  User: yup\r\n    .object()\r\n    .shape({\r\n      email: yup.string().required()\r\n    })\r\n    .required(),\r\n  Lab: yup\r\n    .object()\r\n    .shape({\r\n      title: yup.string().required()\r\n    })\r\n    .required()\r\n});\r\n\r\nexport default function SupervisorItemManagementSyncItem(requestToken) {\r\n  return async dispatch => {\r\n    dispatch(SupervisorItemManagementSyncItemBegin());\r\n\r\n    function onError(error) {\r\n      let message;\r\n      if (error) message = error.data.message;\r\n      if (!message) message = 'Server connection failed';\r\n      dispatch(SupervisorItemManagementSyncItemFailure(message));\r\n    }\r\n\r\n    function onSuccess(success) {\r\n      try {\r\n        const items = responseSchema.validateSync(success.data);\r\n        dispatch(SupervisorItemManagementSyncItemSuccess(items));\r\n      } catch (err) {\r\n        dispatch(\r\n          SupervisorItemManagementSyncItemFailure(\r\n            'Server connection failed. Please check your connection.'\r\n          )\r\n        );\r\n      }\r\n    }\r\n\r\n    try {\r\n      const success = await axios.get(`${SERVER}${SERVER_GET_REQUEST_ITEM}/${requestToken}`, {});\r\n\r\n      onSuccess(success);\r\n    } catch (error) {\r\n      onError(error.response);\r\n    }\r\n  };\r\n}\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  SUPERVISOR_ITEM_MANAGEMENT_ACCEPT_REQUEST_BEGIN,\r\n  SUPERVISOR_ITEM_MANAGEMENT_ACCEPT_REQUEST_FAILURE,\r\n  SUPERVISOR_ITEM_MANAGEMENT_ACCEPT_REQUEST_SUCCESS\r\n} from '../../actionTypes';\r\nimport { SERVER, SERVER_ACCEPT_REQUEST_ITEM } from '../serverConstants';\r\nimport supervisorItemManagementSyncItem from './supervisorItemManagementSyncItem';\r\n\r\n/**\r\n * Action creator for beginning of requesting itemsets\r\n * @returns Redux action\r\n */\r\nconst SupervisorItemManagementAcceptRequestBegin = () => ({\r\n  type: SUPERVISOR_ITEM_MANAGEMENT_ACCEPT_REQUEST_BEGIN\r\n});\r\n\r\nconst SupervisorItemManagementAcceptRequestSuccess = success => ({\r\n  type: SUPERVISOR_ITEM_MANAGEMENT_ACCEPT_REQUEST_SUCCESS,\r\n  payload: { success }\r\n});\r\n\r\nconst SupervisorItemManagementAcceptRequestFailure = error => ({\r\n  type: SUPERVISOR_ITEM_MANAGEMENT_ACCEPT_REQUEST_FAILURE,\r\n  payload: { error }\r\n});\r\n\r\nexport default function SupervisorItemManagementAcceptRequest(\r\n  requestToken,\r\n  acceptValue,\r\n  acceptDeclineReason\r\n) {\r\n  return async dispatch => {\r\n    dispatch(SupervisorItemManagementAcceptRequestBegin());\r\n\r\n    function onError(error) {\r\n      let message;\r\n      if (error) message = error.data.message;\r\n      if (!message) message = 'Server connection failed';\r\n      dispatch(SupervisorItemManagementAcceptRequestFailure(message));\r\n    }\r\n\r\n    function onSuccess() {\r\n      try {\r\n        dispatch(SupervisorItemManagementAcceptRequestSuccess('Successfully accepted the request'));\r\n        dispatch(supervisorItemManagementSyncItem(requestToken));\r\n      } catch (err) {\r\n        dispatch(\r\n          SupervisorItemManagementAcceptRequestFailure(\r\n            'Server connection failed. Please check your connection.'\r\n          )\r\n        );\r\n      }\r\n    }\r\n\r\n    try {\r\n      const success = await axios.post(`${SERVER}${SERVER_ACCEPT_REQUEST_ITEM}`, {\r\n        token: requestToken,\r\n        value: acceptValue,\r\n        declineReason: acceptDeclineReason\r\n      });\r\n\r\n      if (success.status !== 200) {\r\n        throw Error('Server responded with an error');\r\n      }\r\n      onSuccess();\r\n    } catch (error) {\r\n      onError(error.response);\r\n    }\r\n  };\r\n}\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  SUPERVISOR_ITEM_MANAGEMENT_REJECT_REQUEST_BEGIN,\r\n  SUPERVISOR_ITEM_MANAGEMENT_REJECT_REQUEST_FAILURE,\r\n  SUPERVISOR_ITEM_MANAGEMENT_REJECT_REQUEST_SUCCESS\r\n} from '../../actionTypes';\r\nimport { SERVER, SERVER_ACCEPT_REQUEST_ITEM } from '../serverConstants';\r\nimport { supervisorItemManagementSyncItem } from '../SupervisorItemManagementActions';\r\n\r\n/**\r\n * Action creator for beginning of requesting itemsets\r\n * @returns Redux action\r\n */\r\nconst SupervisorItemManagementRejectRequestBegin = () => ({\r\n  type: SUPERVISOR_ITEM_MANAGEMENT_REJECT_REQUEST_BEGIN\r\n});\r\n\r\nconst SupervisorItemManagementRejectRequestSuccess = success => ({\r\n  type: SUPERVISOR_ITEM_MANAGEMENT_REJECT_REQUEST_SUCCESS,\r\n  payload: { success }\r\n});\r\n\r\nconst SupervisorItemManagementRejectRequestFailure = error => ({\r\n  type: SUPERVISOR_ITEM_MANAGEMENT_REJECT_REQUEST_FAILURE,\r\n  payload: { error }\r\n});\r\n\r\nexport default function SupervisorItemManagementRejectRequest(\r\n  requestToken,\r\n  rejectValue,\r\n  reason,\r\n  complete\r\n) {\r\n  return async dispatch => {\r\n    dispatch(SupervisorItemManagementRejectRequestBegin());\r\n    function onError(error) {\r\n      let message;\r\n      if (error) message = error.data.message;\r\n      if (!message) message = 'Server connection failed';\r\n      dispatch(SupervisorItemManagementRejectRequestFailure(message));\r\n    }\r\n\r\n    function onSuccess() {\r\n      try {\r\n        dispatch(SupervisorItemManagementRejectRequestSuccess('Successfully rejected the request'));\r\n        dispatch(supervisorItemManagementSyncItem(requestToken));\r\n      } catch (err) {\r\n        dispatch(\r\n          SupervisorItemManagementRejectRequestFailure(\r\n            'Server connection failed. Please check your connection.'\r\n          )\r\n        );\r\n      }\r\n    }\r\n\r\n    try {\r\n      const success = await axios.post(`${SERVER}${SERVER_ACCEPT_REQUEST_ITEM}`, {\r\n        token: requestToken,\r\n        value: rejectValue,\r\n        declineReason: reason\r\n      });\r\n      if (success.status !== 200) {\r\n        throw Error('Server responded with an error');\r\n      }\r\n      onSuccess();\r\n      complete();\r\n    } catch (error) {\r\n      onError(error.response);\r\n      complete();\r\n    }\r\n  };\r\n}\r\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport * as yup from 'yup';\nimport SupervisorViewPresenter from './SupervisorView.presenter';\nimport {\n  supervisorItemManagementSyncItem,\n  supervisorItemManagementAcceptRequest,\n  supervisorItemManagementRejectRequest\n} from '../../redux/actions/SupervisorItemManagementActions';\n\nfunction SupervisorView() {\n  const dispatch = useDispatch();\n  const {\n    syncedItem,\n    itemsSyncLoading,\n    itemsSyncSuccess,\n    itemsSyncError,\n    acceptRequestLoading,\n    acceptRequestSuccess,\n    acceptRequestError,\n    rejectRequestLoading,\n    rejectRequestSuccess,\n    rejectRequestError\n  } = useSelector(state => ({\n    ...state.supervisorItemManagement\n  }));\n\n  const { requestToken } = useParams();\n\n  const acceptValue = true;\n  const acceptDeclineReason = null;\n  const rejectValue = false;\n  const schema = yup.object().shape({\n    reason: yup.string().required('Required')\n  });\n\n  useEffect(() => {\n    if (!itemsSyncLoading && !itemsSyncSuccess && !itemsSyncError) {\n      dispatch(supervisorItemManagementSyncItem(requestToken));\n    }\n  }, [dispatch, requestToken, itemsSyncLoading, itemsSyncSuccess, itemsSyncError]);\n\n  const onAccept = () => {\n    dispatch(supervisorItemManagementAcceptRequest(requestToken, acceptValue, acceptDeclineReason));\n  };\n  const onSubmit = (values, { setSubmitting }) => {\n    const complete = () => {\n      setSubmitting(false);\n    };\n    dispatch(\n      supervisorItemManagementRejectRequest(requestToken, rejectValue, values.reason, complete)\n    );\n  };\n\n  return (\n    <SupervisorViewPresenter\n      loading={itemsSyncLoading || acceptRequestLoading || rejectRequestLoading}\n      request={syncedItem}\n      error={itemsSyncError || acceptRequestError || rejectRequestError}\n      onAccept={onAccept}\n      validationSchema={schema}\n      onSubmit={onSubmit}\n      success={acceptRequestSuccess || rejectRequestSuccess}\n    />\n  );\n}\n\nexport default SupervisorView;\n","import React, { useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Switch, Route, Redirect, HashRouter } from 'react-router-dom';\n\nimport {\n  PageNotFound,\n  AdminPanel,\n  SignInScreen,\n  SignUpScreen,\n  HomePage,\n  SupervisorView\n} from './components';\nimport { SERVER } from './redux/actions/serverConstants';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/login\">\n          <SignInScreen />\n        </Route>\n        <Route exact path=\"/register/:registrationToken\">\n          <SignUpScreen />\n        </Route>\n        <Route path=\"/superadmin\">\n          <DirectRedirect url={`${SERVER}/admin`} />\n        </Route>\n        <PrivateRoute path=\"/admin\">\n          <AdminPanel />\n        </PrivateRoute>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n        <Route exact path=\"/supervisor/:requestToken\">\n          <SupervisorView />\n        </Route>\n        <Route>\n          <PageNotFound />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\n/**\n * Gets user login state and redirects away to login if not logged in.\n */\nfunction PrivateRoute({ children, ...rest }) {\n  // Get user object from redux state and check if logged in\n  const isLoggedIn = useSelector(state => state.auth.user != null);\n\n  // What to render - redirect if not logged in\n  const routeChildren = params =>\n    isLoggedIn ? (\n      children\n    ) : (\n      <Redirect\n        to={{\n          pathname: '/login',\n          state: { from: params.location }\n        }}\n      />\n    );\n\n  return (\n    <Route\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...rest}\n      render={routeChildren}\n    />\n  );\n}\n\nfunction DirectRedirect({ url }) {\n  useEffect(() => {\n    window.location.href = url;\n  }, [url]);\n\n  return <div />;\n}\n\nDirectRedirect.propTypes = {\n  url: PropTypes.node.isRequired\n};\n\nPrivateRoute.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n/**\n * Complete MUI theme of the app\n */\nconst muiTheme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#59C9A5',\n      main: '#23395B',\n      dark: '#03193B'\n    },\n    secondary: {\n      light: '#FFFD98',\n      main: '#D81E5B',\n      dark: '#B80E3B'\n    }\n  },\n  typography: {\n    h5: {\n      fontWeight: 500,\n      fontSize: 26,\n      letterSpacing: 0.5\n    }\n  },\n  shape: {\n    borderRadius: 8\n  },\n  props: {\n    MuiTab: {\n      disableRipple: true\n    }\n  },\n  mixins: {\n    toolbar: {\n      minHeight: 48\n    }\n  }\n});\n\n/**\n * Complete theme of the app extending MUI Theme\n */\nconst theme = {\n  ...muiTheme,\n  overrides: {\n    MuiDrawer: {\n      paper: {\n        backgroundColor: '#1c2d48'\n      }\n    },\n    MuiButton: {\n      label: {\n        textTransform: 'none'\n      },\n      contained: {\n        boxShadow: 'none',\n        '&:active': {\n          boxShadow: 'none'\n        }\n      }\n    },\n    MuiTabs: {\n      root: {\n        marginLeft: muiTheme.spacing(1)\n      },\n      indicator: {\n        height: 3,\n        borderTopLeftRadius: 3,\n        borderTopRightRadius: 3,\n        backgroundColor: muiTheme.palette.common.white\n      }\n    },\n    MuiTab: {\n      root: {\n        textTransform: 'none',\n        margin: '0 16px',\n        minWidth: 0,\n        padding: 0,\n        [muiTheme.breakpoints.up('md')]: {\n          padding: 0,\n          minWidth: 0\n        }\n      }\n    },\n    MuiIconButton: {\n      root: {\n        padding: muiTheme.spacing(1)\n      }\n    },\n    MuiTooltip: {\n      tooltip: {\n        borderRadius: 4\n      }\n    },\n    MuiDivider: {\n      root: {\n        backgroundColor: '#404854'\n      }\n    },\n    MuiListItemText: {\n      primary: {\n        fontWeight: muiTheme.typography.fontWeightMedium\n      }\n    },\n    MuiListItemIcon: {\n      root: {\n        color: 'inherit',\n        marginRight: 0,\n        '& svg': {\n          fontSize: 20\n        }\n      }\n    },\n    MuiAvatar: {\n      root: {\n        width: 32,\n        height: 32\n      }\n    }\n  }\n};\n\nexport default theme;\n","/**\n * Initial state of the auth state\n */\nconst initialState = {\n  token: null,\n  user: null,\n  signIn: {\n    loading: false,\n    error: null\n  },\n  signUp: {\n    requestingInvitation: false,\n    loading: false,\n    error: null,\n    invitationOwner: null,\n    invitationActivated: false\n  }\n};\n\nexport default initialState;\n","import produce from 'immer';\n\nimport {\n  AUTH_SIGN_IN_BEGIN,\n  AUTH_SIGN_IN_SUCCESS,\n  AUTH_SIGN_IN_FAILURE,\n  AUTH_SIGN_OUT,\n  AUTH_REQUEST_INVITATION_BEGIN,\n  AUTH_REQUEST_INVITATION_SUCCESS,\n  AUTH_REQUEST_INVITATION_FAILURE,\n  AUTH_SIGN_UP_BEGIN,\n  AUTH_SIGN_UP_SUCCESS,\n  AUTH_SIGN_UP_FAILURE,\n  AUTH_INVITATION_REDIRECTED\n} from '../actionTypes';\nimport initialState from '../states/authState';\n\n/**\n * Authentication state reducer\n * @param {Object} state current state of the application\n * @returns {Object} Altered state of the application\n */\nconst authReducer = produce((draft, { type, payload }) => {\n  // Draft is null initially\n  if (!draft) {\n    return initialState;\n  }\n\n  switch (type) {\n    // Sign in Action\n    case AUTH_SIGN_IN_BEGIN:\n      draft.token = null;\n      draft.user = null;\n      draft.signIn.loading = true;\n      draft.signIn.error = null;\n      return draft;\n    case AUTH_SIGN_IN_SUCCESS:\n      draft.token = payload.token;\n      draft.user = payload.user;\n      draft.signIn.loading = false;\n      return draft;\n    case AUTH_SIGN_IN_FAILURE:\n      draft.signIn.loading = false;\n      draft.signIn.error = payload.error;\n      return draft;\n    // Sign out Action\n    case AUTH_SIGN_OUT:\n      draft.token = null;\n      draft.user = null;\n      draft.signIn.loading = false;\n      draft.signIn.error = null;\n      return draft;\n    // Request Invitation Action\n    case AUTH_REQUEST_INVITATION_BEGIN:\n      draft.signUp.invitationOwner = null;\n      draft.signUp.requestingInvitation = true;\n      draft.signUp.error = null;\n      return draft;\n    case AUTH_REQUEST_INVITATION_SUCCESS:\n      draft.signUp.invitationOwner = payload;\n      draft.signUp.requestingInvitation = false;\n      return draft;\n    case AUTH_REQUEST_INVITATION_FAILURE:\n      draft.signUp.requestingInvitation = false;\n      draft.signUp.error = payload.error;\n      return draft;\n    // Sign up Action\n    case AUTH_SIGN_UP_BEGIN:\n      draft.signUp.loading = true;\n      draft.signUp.error = null;\n      draft.signUp.invitationActivated = false;\n      return draft;\n    case AUTH_SIGN_UP_SUCCESS:\n      draft.signUp.loading = false;\n      draft.signUp.invitationActivated = true;\n      return draft;\n    case AUTH_SIGN_UP_FAILURE:\n      draft.signUp.loading = false;\n      draft.signUp.error = payload.error;\n      return draft;\n    case AUTH_INVITATION_REDIRECTED:\n      draft.signUp.invitationActivated = false;\n      return draft;\n    default:\n      return draft;\n  }\n});\n\nexport { authReducer, initialState };\n","/**\n * Initial state of the admin registration state\n */\nconst initialState = {\n  tokens: [],\n  roles: [],\n\n  rolesSyncLoading: false,\n  rolesSyncError: null,\n  rolesSyncSuccess: false,\n  inviteLoading: false,\n  inviteError: null,\n  inviteSuccess: null,\n\n  tokenSyncLoading: false,\n  tokenSyncError: null,\n  tokenSyncSuccess: false,\n  retractLoading: false,\n  retractError: null,\n  retractSuccess: null\n};\n\nexport default initialState;\n","import produce from 'immer';\n\nimport {\n  ADMIN_REGISTRATION_SYNC_ROLES_BEGIN,\n  ADMIN_REGISTRATION_SYNC_ROLES_SUCCESS,\n  ADMIN_REGISTRATION_SYNC_ROLES_FAILURE,\n  ADMIN_REGISTRATION_INVITE_BEGIN,\n  ADMIN_REGISTRATION_INVITE_SUCCESS,\n  ADMIN_REGISTRATION_INVITE_FAILURE,\n  ADMIN_REGISTRATION_SYNC_TOKENS_FAILURE,\n  ADMIN_REGISTRATION_SYNC_TOKENS_SUCCESS,\n  ADMIN_REGISTRATION_SYNC_TOKENS_BEGIN,\n  ADMIN_REGISTRATION_RETRACTION_BEGIN,\n  ADMIN_REGISTRATION_RETRACTION_SUCCESS,\n  ADMIN_REGISTRATION_RETRACTION_FAILURE\n} from '../actionTypes';\nimport initialState from '../states/adminRegistrationState';\n\n/**\n * Authentication state reducer\n * @param {Object} state current state of the application\n * @returns {Object} Altered state of the application\n */\nconst adminRegistrationReducer = produce((draft, { type, payload }) => {\n  // Draft is null initially\n  if (!draft) {\n    return initialState;\n  }\n\n  switch (type) {\n    // Syncing roles\n    case ADMIN_REGISTRATION_SYNC_ROLES_BEGIN:\n      draft.roles = [];\n      draft.rolesSyncLoading = true;\n      draft.rolesSyncSuccess = false;\n      draft.rolesSyncError = null;\n      return draft;\n    case ADMIN_REGISTRATION_SYNC_ROLES_SUCCESS:\n      draft.rolesSyncLoading = false;\n      draft.rolesSyncSuccess = true;\n      draft.roles = payload.roles;\n      return draft;\n    case ADMIN_REGISTRATION_SYNC_ROLES_FAILURE:\n      draft.rolesSyncLoading = false;\n      draft.rolesSyncError = payload.error;\n      return draft;\n\n    // Submit invitations\n    case ADMIN_REGISTRATION_INVITE_BEGIN:\n      draft.inviteLoading = true;\n      draft.inviteError = null;\n      draft.inviteSuccess = null;\n      return draft;\n    case ADMIN_REGISTRATION_INVITE_SUCCESS:\n      draft.inviteLoading = false;\n      draft.inviteSuccess = payload.success;\n      return draft;\n    case ADMIN_REGISTRATION_INVITE_FAILURE:\n      draft.inviteLoading = false;\n      draft.inviteError = payload.error;\n      return draft;\n\n    // Syncing tokens\n    case ADMIN_REGISTRATION_SYNC_TOKENS_BEGIN:\n      draft.tokens = [];\n      draft.tokenSyncLoading = true;\n      draft.tokenSyncSuccess = false;\n      draft.tokenSyncError = null;\n      return draft;\n    case ADMIN_REGISTRATION_SYNC_TOKENS_SUCCESS:\n      draft.tokens = payload.tokens;\n      draft.tokenSyncLoading = false;\n      draft.tokenSyncSuccess = true;\n      return draft;\n    case ADMIN_REGISTRATION_SYNC_TOKENS_FAILURE:\n      draft.tokenSyncLoading = false;\n      draft.tokenSyncError = payload.error;\n      return draft;\n\n    // Submit Retraction\n    case ADMIN_REGISTRATION_RETRACTION_BEGIN:\n      draft.retractLoading = true;\n      draft.retractSuccess = null;\n      draft.retractError = null;\n      return draft;\n    case ADMIN_REGISTRATION_RETRACTION_SUCCESS:\n      draft.retractLoading = false;\n      draft.retractSuccess = payload.success;\n      return draft;\n    case ADMIN_REGISTRATION_RETRACTION_FAILURE:\n      draft.retractLoading = false;\n      draft.retractError = payload.error;\n      return draft;\n    default:\n      return draft;\n  }\n});\n\nexport { adminRegistrationReducer, initialState };\n","/**\n * Initial state of the admin administration state\n */\nconst initialState = {\n  permissions: [],\n  roles: [],\n  users: [],\n  supervisors: [],\n\n  permissionsSyncLoading: false,\n  permissionsSyncError: null,\n  permissionsSyncSuccess: false,\n  roleCreateLoading: false,\n  roleCreateError: null,\n  roleCreateSuccess: null,\n\n  rolesSyncError: null,\n  rolesSyncLoading: false,\n  rolesSyncSuccess: false,\n  roleDeleteError: null,\n  roleDeleteLoading: false,\n  roleDeleteSuccess: null,\n\n  supervisorCreateLoading: false,\n  supervisorCreateError: null,\n  supervisorCreateSuccess: null,\n  supervisorsSyncError: null,\n  supervisorsSyncLoading: false,\n  supervisorsSyncSuccess: false,\n  supervisorDeleteError: null,\n  supervisorDeleteLoading: false,\n  supervisorDeleteSuccess: null,\n\n  usersSyncError: null,\n  usersSyncLoading: false,\n  usersSyncSuccess: false\n};\n\nexport default initialState;\n","import produce from 'immer';\n\nimport {\n  ADMIN_ADMINISTRATION_SYNC_PERMISSIONS_BEGIN,\n  ADMIN_ADMINISTRATION_SYNC_PERMISSIONS_SUCCESS,\n  ADMIN_ADMINISTRATION_SYNC_PERMISSIONS_FAILURE,\n  ADMIN_ADMINISTRATION_CREATE_ROLE_BEGIN,\n  ADMIN_ADMINISTRATION_CREATE_ROLE_SUCCESS,\n  ADMIN_ADMINISTRATION_CREATE_ROLE_FAILURE,\n  ADMIN_ADMINISTRATION_SYNC_ROLES_BEGIN,\n  ADMIN_ADMINISTRATION_SYNC_ROLES_SUCCESS,\n  ADMIN_ADMINISTRATION_SYNC_ROLES_FAILURE,\n  ADMIN_ADMINISTRATION_DELETE_ROLE_BEGIN,\n  ADMIN_ADMINISTRATION_DELETE_ROLE_SUCCESS,\n  ADMIN_ADMINISTRATION_DELETE_ROLE_FAILURE,\n  ADMIN_ADMINISTRATION_SYNC_USERS_FAILURE,\n  ADMIN_ADMINISTRATION_SYNC_USERS_SUCCESS,\n  ADMIN_ADMINISTRATION_SYNC_USERS_BEGIN,\n  ADMIN_ADMINISTRATION_CREATE_SUPERVISOR_BEGIN,\n  ADMIN_ADMINISTRATION_CREATE_SUPERVISOR_FAILURE,\n  ADMIN_ADMINISTRATION_CREATE_SUPERVISOR_SUCCESS,\n  ADMIN_ADMINISTRATION_SYNC_SUPERVISORS_BEGIN,\n  ADMIN_ADMINISTRATION_SYNC_SUPERVISORS_FAILURE,\n  ADMIN_ADMINISTRATION_SYNC_SUPERVISORS_SUCCESS,\n  ADMIN_ADMINISTRATION_DELETE_SUPERVISOR_BEGIN,\n  ADMIN_ADMINISTRATION_DELETE_SUPERVISOR_SUCCESS,\n  ADMIN_ADMINISTRATION_DELETE_SUPERVISOR_FAILURE\n} from '../actionTypes';\nimport initialState from '../states/adminAdministrationState';\n\n/**\n * Administration state reducer\n * @param {Object} state current state of the application\n * @returns {Object} Altered state of the application\n */\nconst adminAdministrationReducer = produce((draft, { type, payload }) => {\n  if (!draft) {\n    return initialState;\n  }\n\n  switch (type) {\n    // Syncing permissions\n    case ADMIN_ADMINISTRATION_SYNC_PERMISSIONS_BEGIN:\n      draft.permissions = [];\n      draft.permissionsSyncLoading = true;\n      draft.permissionsSyncSuccess = false;\n      draft.permissionsSyncError = null;\n      return draft;\n    case ADMIN_ADMINISTRATION_SYNC_PERMISSIONS_SUCCESS:\n      draft.permissions = payload.permissions;\n      draft.permissionsSyncLoading = false;\n      draft.permissionsSyncSuccess = true;\n      return draft;\n    case ADMIN_ADMINISTRATION_SYNC_PERMISSIONS_FAILURE:\n      draft.permissionsSyncLoading = false;\n      draft.permissionsSyncError = payload.error;\n      return draft;\n    // Creating role\n    case ADMIN_ADMINISTRATION_CREATE_ROLE_BEGIN:\n      draft.roleCreateLoading = true;\n      draft.roleCreateSuccess = null;\n      draft.roleCreateError = null;\n      return draft;\n    case ADMIN_ADMINISTRATION_CREATE_ROLE_SUCCESS:\n      draft.roleCreateLoading = false;\n      draft.roleCreateSuccess = payload.success;\n      return draft;\n    case ADMIN_ADMINISTRATION_CREATE_ROLE_FAILURE:\n      draft.roleCreateLoading = false;\n      draft.roleCreateError = payload.error;\n      return draft;\n    // Creating supervisors\n    case ADMIN_ADMINISTRATION_CREATE_SUPERVISOR_BEGIN:\n      draft.supervisorCreateLoading = true;\n      draft.supervisorCreateSuccess = null;\n      draft.supervisorCreateError = null;\n      return draft;\n    case ADMIN_ADMINISTRATION_CREATE_SUPERVISOR_SUCCESS:\n      draft.supervisorCreateLoading = false;\n      draft.supervisorCreateSuccess = payload.success;\n      return draft;\n    case ADMIN_ADMINISTRATION_CREATE_SUPERVISOR_FAILURE:\n      draft.supervisorCreateLoading = false;\n      draft.supervisorCreateError = payload.error;\n      return draft;\n    // Syncing supervisors\n    case ADMIN_ADMINISTRATION_SYNC_SUPERVISORS_BEGIN:\n      draft.supervisors = [];\n      draft.supervisorsSyncLoading = true;\n      draft.supervisorsSyncSuccess = false;\n      draft.supervisorsSyncError = null;\n      return draft;\n    case ADMIN_ADMINISTRATION_SYNC_SUPERVISORS_SUCCESS:\n      draft.supervisors = payload.supervisors;\n      draft.supervisorsSyncLoading = false;\n      draft.supervisorsSyncSuccess = true;\n      return draft;\n    case ADMIN_ADMINISTRATION_SYNC_SUPERVISORS_FAILURE:\n      draft.supervisorsSyncLoading = false;\n      draft.supervisorsSyncError = payload.error;\n      return draft;\n    // Delete Supervisor\n    case ADMIN_ADMINISTRATION_DELETE_SUPERVISOR_BEGIN:\n      draft.supervisorDeleteLoading = true;\n      draft.supervisorDeleteSuccess = null;\n      draft.supervisorDeleteError = null;\n      return draft;\n    case ADMIN_ADMINISTRATION_DELETE_SUPERVISOR_SUCCESS:\n      draft.supervisorDeleteLoading = false;\n      draft.supervisorDeleteSuccess = payload.success;\n      return draft;\n    case ADMIN_ADMINISTRATION_DELETE_SUPERVISOR_FAILURE:\n      draft.supervisorDeleteLoading = false;\n      draft.supervisorDeleteError = payload.error;\n      return draft;\n\n    // Syncing roles\n    case ADMIN_ADMINISTRATION_SYNC_ROLES_BEGIN:\n      draft.roles = [];\n      draft.rolesSyncLoading = true;\n      draft.rolesSyncSuccess = false;\n      draft.rolesSyncError = null;\n      return draft;\n    case ADMIN_ADMINISTRATION_SYNC_ROLES_SUCCESS:\n      draft.roles = payload.roles;\n      draft.rolesSyncLoading = false;\n      draft.rolesSyncSuccess = true;\n      return draft;\n    case ADMIN_ADMINISTRATION_SYNC_ROLES_FAILURE:\n      draft.rolesSyncLoading = false;\n      draft.rolesSyncError = payload.error;\n      return draft;\n    // Delete Role\n    case ADMIN_ADMINISTRATION_DELETE_ROLE_BEGIN:\n      draft.roleDeleteLoading = true;\n      draft.roleDeleteSuccess = null;\n      draft.roleDeleteError = null;\n      return draft;\n    case ADMIN_ADMINISTRATION_DELETE_ROLE_SUCCESS:\n      draft.roleDeleteLoading = false;\n      draft.roleDeleteSuccess = payload.success;\n      return draft;\n    case ADMIN_ADMINISTRATION_DELETE_ROLE_FAILURE:\n      draft.roleDeleteLoading = false;\n      draft.roleDeleteError = payload.error;\n      return draft;\n\n    // Syncing users\n    case ADMIN_ADMINISTRATION_SYNC_USERS_BEGIN:\n      draft.users = [];\n      draft.usersSyncLoading = true;\n      draft.usersSyncSuccess = false;\n      draft.usersSyncError = null;\n      return draft;\n    case ADMIN_ADMINISTRATION_SYNC_USERS_SUCCESS:\n      draft.users = payload.users;\n      draft.usersSyncLoading = false;\n      draft.usersSyncSuccess = true;\n      return draft;\n    case ADMIN_ADMINISTRATION_SYNC_USERS_FAILURE:\n      draft.usersSyncLoading = false;\n      draft.usersSyncError = payload.error;\n      return draft;\n    default:\n      return draft;\n  }\n});\n\nexport { adminAdministrationReducer, initialState };\n","/**\n * Initial state of the admin labs state\n */\nconst initialState = {\n  attributes: [],\n  itemsets: [],\n  syncedItemsets: [],\n\n  createItemsetError: null,\n  createItemsetLoading: false,\n  createItemsetSuccess: null,\n\n  itemSetsSyncLoading: false,\n  itemSetsSyncSuccess: null,\n  itemSetsSyncError: null,\n\n  items: [],\n\n  syncedItems: [],\n\n  createItemError: null,\n  createItemLoading: false,\n  createItemSuccess: null,\n\n  itemsSyncLoading: false,\n  itemsSyncSuccess: null,\n  itemsSyncError: null,\n\n  syncedLentItems: [],\n\n  lentItemsSyncLoading: false,\n  lentItemsSyncSuccess: null,\n  lentItemsSyncError: null,\n\n  syncedItemRequests: [],\n\n  itemRequestsSyncloading: false,\n  itemRequestsSyncSuccess: null,\n  itemRequestsSyncError: null,\n\n  itemBorrowLoading: false,\n  itemBorrowSuccess: null,\n  itemBorrowFailure: null\n};\n\nexport default initialState;\n","import produce from 'immer';\n\nimport {\n  ADMIN_ITEM_MANAGEMENT_CREATE_ITEMSET_BEGIN,\n  ADMIN_ITEM_MANAGEMENT_CREATE_ITEMSET_FAILURE,\n  ADMIN_ITEM_MANAGEMENT_CREATE_ITEMSET_SUCCESS,\n  ADMIN_ITEM_MANAGEMENT_SYNC_ITEMSETS_BEGIN,\n  ADMIN_ITEM_MANAGEMENT_SYNC_ITEMSETS_SUCCESS,\n  ADMIN_ITEM_MANAGEMENT_SYNC_ITEMSETS_FAILURE,\n  ADMIN_ITEM_MANAGEMENT_CREATE_ITEM_BEGIN,\n  ADMIN_ITEM_MANAGEMENT_CREATE_ITEM_FAILURE,\n  ADMIN_ITEM_MANAGEMENT_CREATE_ITEM_SUCCESS,\n  ADMIN_ITEM_MANAGEMENT_SYNC_ITEMS_BEGIN,\n  ADMIN_ITEM_MANAGEMENT_SYNC_ITEMS_FAILURE,\n  ADMIN_ITEM_MANAGEMENT_SYNC_ITEMS_SUCCESS,\n  ADMIN_ITEM_MANAGEMENT_SYNC_LENT_ITEMS_BEGIN,\n  ADMIN_ITEM_MANAGEMENT_SYNC_LENT_ITEMS_FAILURE,\n  ADMIN_ITEM_MANAGEMENT_SYNC_LENT_ITEMS_SUCCESS,\n  ADMIN_ITEM_MANAGEMENT_SYNC_ITEM_REQUESTS_BEGIN,\n  ADMIN_ITEM_MANAGEMENT_SYNC_ITEM_REQUESTS_FAILURE,\n  ADMIN_ITEM_MANAGEMENT_SYNC_ITEM_REQUESTS_SUCCESS,\n  ADMIN_ITEM_MANAGEMENT_BORROW_ITEM_BEGIN,\n  ADMIN_ITEM_MANAGEMENT_BORROW_ITEM_FAILURE,\n  ADMIN_ITEM_MANAGEMENT_BORROW_ITEM_SUCCESS\n} from '../actionTypes';\nimport initialState from '../states/adminItemManagementState';\n\n/**\n * Item Managements state reducer\n * @param {Object} state current state of the application\n * @returns {Object} Altered state of the application\n */\n\nconst adminItemManagementReducer = produce((draft, { type, payload }) => {\n  if (!draft) {\n    return initialState;\n  }\n\n  switch (type) {\n    // create itemset\n    case ADMIN_ITEM_MANAGEMENT_CREATE_ITEMSET_BEGIN:\n      draft.createItemsetSuccess = null;\n      draft.createItemsetError = null;\n      draft.createItemsetLoading = true;\n      return draft;\n    case ADMIN_ITEM_MANAGEMENT_CREATE_ITEMSET_SUCCESS:\n      draft.createItemsetLoading = false;\n      draft.createItemsetSuccess = payload.success;\n      return draft;\n    case ADMIN_ITEM_MANAGEMENT_CREATE_ITEMSET_FAILURE:\n      draft.createItemsetLoading = false;\n      draft.createItemsetError = payload.error;\n      return draft;\n\n    // Syncing itemSets\n    case ADMIN_ITEM_MANAGEMENT_SYNC_ITEMSETS_BEGIN:\n      draft.syncedItemsets = [];\n      draft.itemSetsSyncLoading = true;\n      draft.itemSetsSyncSuccess = false;\n      draft.itemSetsSyncError = null;\n      return draft;\n    case ADMIN_ITEM_MANAGEMENT_SYNC_ITEMSETS_SUCCESS:\n      draft.syncedItemsets = payload.itemsets;\n      draft.itemSetsSyncLoading = false;\n      draft.itemSetsSyncSuccess = true;\n      return draft;\n    case ADMIN_ITEM_MANAGEMENT_SYNC_ITEMSETS_FAILURE:\n      draft.itemSetsSyncLoading = false;\n      draft.itemSetsSyncError = payload.error;\n      return draft;\n\n    // create item\n    case ADMIN_ITEM_MANAGEMENT_CREATE_ITEM_BEGIN:\n      draft.createItemSuccess = null;\n      draft.createItemError = null;\n      draft.createItemLoading = true;\n      return draft;\n    case ADMIN_ITEM_MANAGEMENT_CREATE_ITEM_SUCCESS:\n      draft.createItemLoading = false;\n      draft.createItemSuccess = payload.success;\n      return draft;\n    case ADMIN_ITEM_MANAGEMENT_CREATE_ITEM_FAILURE:\n      draft.createItemLoading = false;\n      draft.createItemError = payload.error;\n      return draft;\n\n    // Syncing items\n    case ADMIN_ITEM_MANAGEMENT_SYNC_ITEMS_BEGIN:\n      draft.syncedItems = [];\n      draft.itemsSyncLoading = true;\n      draft.itemsSyncSuccess = false;\n      draft.itemsSyncError = null;\n      return draft;\n    case ADMIN_ITEM_MANAGEMENT_SYNC_ITEMS_SUCCESS:\n      draft.syncedItems = payload.items;\n      draft.itemsSyncLoading = false;\n      draft.itemsSyncSuccess = true;\n      return draft;\n    case ADMIN_ITEM_MANAGEMENT_SYNC_ITEMS_FAILURE:\n      draft.itemsSyncLoading = false;\n      draft.itemsSyncError = payload.error;\n      return draft;\n\n    // syncing lent items\n    case ADMIN_ITEM_MANAGEMENT_SYNC_LENT_ITEMS_BEGIN:\n      draft.lentItemsSyncLoading = true;\n      draft.lentItemsSyncSuccess = false;\n      draft.lentItemsSyncError = null;\n      return draft;\n\n    case ADMIN_ITEM_MANAGEMENT_SYNC_LENT_ITEMS_SUCCESS:\n      draft.syncedLentItems = payload.lentItems;\n      draft.lentItemsSyncLoading = false;\n      draft.lentItemsSyncSuccess = true;\n      return draft;\n\n    case ADMIN_ITEM_MANAGEMENT_SYNC_LENT_ITEMS_FAILURE:\n      draft.lentItemsSyncLoading = false;\n      draft.lentItemsSyncError = payload.error;\n      return draft;\n\n    // syncing item requests\n    case ADMIN_ITEM_MANAGEMENT_SYNC_ITEM_REQUESTS_BEGIN:\n      draft.itemRequestsSyncloading = true;\n      draft.itemRequestsSyncSuccess = false;\n      draft.itemRequestsSyncError = null;\n      return draft;\n\n    case ADMIN_ITEM_MANAGEMENT_SYNC_ITEM_REQUESTS_SUCCESS:\n      draft.syncedItemRequests = payload.itemRequests;\n      draft.itemRequestsSyncloading = false;\n      draft.itemRequestsSyncSuccess = true;\n      return draft;\n\n    case ADMIN_ITEM_MANAGEMENT_SYNC_ITEM_REQUESTS_FAILURE:\n      draft.itemRequestsSyncloading = false;\n      draft.itemRequestsSyncError = payload.error;\n      return draft;\n\n    // borrow items\n    case ADMIN_ITEM_MANAGEMENT_BORROW_ITEM_BEGIN:\n      draft.itemBorrowLoading = true;\n      draft.itemBorrowSuccess = null;\n      return draft;\n\n    case ADMIN_ITEM_MANAGEMENT_BORROW_ITEM_SUCCESS:\n      draft.itemBorrowLoading = false;\n      draft.itemBorrowSuccess = payload.success;\n      return draft;\n\n    case ADMIN_ITEM_MANAGEMENT_BORROW_ITEM_FAILURE:\n      draft.itemBorrowLoading = false;\n      draft.itemBorrowFailure = payload.error;\n      return draft;\n\n    default:\n      return draft;\n  }\n});\n\nexport { adminItemManagementReducer, initialState };\n","/*\n * Initial state of lab creation state\n */\n\nconst initialState = {\n  labs: [],\n  managers: [],\n\n  labCreationLoading: false,\n  labCreationError: null,\n  labCreationSuccess: null,\n\n  labsSyncLoading: false,\n  labsSyncError: null,\n  labsSyncSuccess: null,\n\n  managersSyncLoading: false,\n  managersSyncError: null,\n  managersSyncSuccess: null,\n\n  labAssignLoading: false,\n  labAssignError: null,\n  labAssignSuccess: null,\n\n  labUnAssignLoading: false,\n  labUnAssignError: null,\n  labUnAssignSuccess: null\n};\n\nexport default initialState;\n","import produce from 'immer';\nimport {\n  ADMIN_LABMANAGEMENT_CREATE_LAB_BEGIN,\n  ADMIN_LABMANAGEMENT_CREATE_LAB_SUCCESS,\n  ADMIN_LABMANAGEMENT_CREATE_LAB_FAILURE,\n  ADMIN_LAB_MANAGEMENT_SYNC_LABS_BEGIN,\n  ADMIN_LAB_MANAGEMENT_SYNC_LABS_SUCCESS,\n  ADMIN_LAB_MANAGEMENT_SYNC_LABS_FAILURE,\n  ADMIN_LAB_MANAGEMENT_ASSIGN_STAFF_FAILURE,\n  ADMIN_LAB_MANAGEMENT_ASSIGN_STAFF_SUCCESS,\n  ADMIN_LAB_MANAGEMENT_ASSIGN_STAFF_BEGIN,\n  ADMIN_LAB_MANAGEMENT_SYNC_MANAGERS_BEGIN,\n  ADMIN_LAB_MANAGEMENT_SYNC_MANAGERS_SUCCESS,\n  ADMIN_LAB_MANAGEMENT_SYNC_MANAGERS_FAILURE,\n  ADMIN_LAB_MANAGEMENT_UNASSIGN_STAFF_FAILURE,\n  ADMIN_LAB_MANAGEMENT_UNASSIGN_STAFF_SUCCESS,\n  ADMIN_LAB_MANAGEMENT_UNASSIGN_STAFF_BEGIN\n} from '../actionTypes';\nimport initialState from '../states/adminLabManagementState';\n\n/**\n * LabManagement state reducer\n * @param {Object} state current state of the application\n * @returns {Object} Altered state of the application\n */\n\nconst adminLabManagementReducer = produce((draft, { type, payload }) => {\n  // Draft is null initially\n  if (!draft) {\n    return initialState;\n  }\n  switch (type) {\n    // creating labs\n    case ADMIN_LABMANAGEMENT_CREATE_LAB_BEGIN:\n      draft.labCreationLoading = true;\n      draft.labCreationError = null;\n      draft.labCreationSuccess = null;\n      return draft;\n    case ADMIN_LABMANAGEMENT_CREATE_LAB_SUCCESS:\n      draft.labCreationLoading = false;\n      draft.labCreationSuccess = payload.success;\n      return draft;\n    case ADMIN_LABMANAGEMENT_CREATE_LAB_FAILURE:\n      draft.labCreationLoading = false;\n      draft.labCreationError = payload.error;\n      return draft;\n\n    // Syncing labs\n    case ADMIN_LAB_MANAGEMENT_SYNC_LABS_BEGIN:\n      draft.labs = [];\n      draft.labsSyncLoading = true;\n      draft.labsSyncSuccess = false;\n      draft.labsSyncError = null;\n      return draft;\n    case ADMIN_LAB_MANAGEMENT_SYNC_LABS_SUCCESS:\n      draft.labs = payload.labs;\n      draft.labsSyncLoading = false;\n      draft.labsSyncSuccess = true;\n      return draft;\n    case ADMIN_LAB_MANAGEMENT_SYNC_LABS_FAILURE:\n      draft.labsSyncLoading = false;\n      draft.labsSyncError = payload.error;\n      return draft;\n\n    // Syncing managers\n    case ADMIN_LAB_MANAGEMENT_SYNC_MANAGERS_BEGIN:\n      draft.managers = [];\n      draft.managersSyncLoading = true;\n      draft.managersSyncSuccess = false;\n      draft.managersSyncError = null;\n      return draft;\n    case ADMIN_LAB_MANAGEMENT_SYNC_MANAGERS_SUCCESS:\n      draft.managers = payload.managers;\n      draft.managersSyncLoading = false;\n      draft.managersSyncSuccess = true;\n      return draft;\n    case ADMIN_LAB_MANAGEMENT_SYNC_MANAGERS_FAILURE:\n      draft.managersSyncLoading = false;\n      draft.managersSyncError = payload.error;\n      return draft;\n\n    // Assigning labs\n    case ADMIN_LAB_MANAGEMENT_ASSIGN_STAFF_BEGIN:\n      draft.labAssignLoading = true;\n      draft.labUnAssignError = null;\n      draft.labUnAssignSuccess = null;\n      draft.labAssignError = null;\n      draft.labAssignSuccess = null;\n      return draft;\n    case ADMIN_LAB_MANAGEMENT_ASSIGN_STAFF_SUCCESS:\n      draft.labAssignLoading = false;\n      draft.labAssignSuccess = payload.success;\n      return draft;\n    case ADMIN_LAB_MANAGEMENT_ASSIGN_STAFF_FAILURE:\n      draft.labAssignLoading = false;\n      draft.labAssignError = payload.error;\n      return draft;\n\n    // UnAssigning labs\n    case ADMIN_LAB_MANAGEMENT_UNASSIGN_STAFF_BEGIN:\n      draft.labUnAssignLoading = true;\n      draft.labUnAssignError = null;\n      draft.labUnAssignSuccess = null;\n      draft.labAssignError = null;\n      draft.labAssignSuccess = null;\n      return draft;\n    case ADMIN_LAB_MANAGEMENT_UNASSIGN_STAFF_SUCCESS:\n      draft.labUnAssignLoading = false;\n      draft.labUnAssignSuccess = payload.success;\n      return draft;\n    case ADMIN_LAB_MANAGEMENT_UNASSIGN_STAFF_FAILURE:\n      draft.labUnAssignLoading = false;\n      draft.labUnAssignError = payload.error;\n      return draft;\n\n    default:\n      return draft;\n  }\n});\n\nexport { adminLabManagementReducer, initialState };\n","const initialState = {\r\n  syncedItem: {},\r\n\r\n  itemsSyncLoading: false,\r\n  itemsSyncSuccess: null,\r\n  itemsSyncError: null,\r\n\r\n  acceptRequestLoading: false,\r\n  acceptRequestSuccess: null,\r\n  acceptRequestError: null,\r\n\r\n  rejectRequestLoading: false,\r\n  rejectRequestSuccess: null,\r\n  rejectRequestError: null\r\n};\r\n\r\nexport default initialState;\r\n","import produce from 'immer';\r\n\r\nimport {\r\n  SUPERVISOR_ITEM_MANAGEMENT_SYNC_ITEM_BEGIN,\r\n  SUPERVISOR_ITEM_MANAGEMENT_SYNC_ITEM_SUCCESS,\r\n  SUPERVISOR_ITEM_MANAGEMENT_SYNC_ITEM_FAILURE,\r\n  SUPERVISOR_ITEM_MANAGEMENT_ACCEPT_REQUEST_BEGIN,\r\n  SUPERVISOR_ITEM_MANAGEMENT_ACCEPT_REQUEST_SUCCESS,\r\n  SUPERVISOR_ITEM_MANAGEMENT_ACCEPT_REQUEST_FAILURE,\r\n  SUPERVISOR_ITEM_MANAGEMENT_REJECT_REQUEST_BEGIN,\r\n  SUPERVISOR_ITEM_MANAGEMENT_REJECT_REQUEST_FAILURE,\r\n  SUPERVISOR_ITEM_MANAGEMENT_REJECT_REQUEST_SUCCESS\r\n} from '../actionTypes';\r\nimport initialState from '../states/supervisorItemManagementState';\r\n\r\nconst supervisorItemManagementReducer = produce((draft, { type, payload }) => {\r\n  if (!draft) {\r\n    return initialState;\r\n  }\r\n\r\n  switch (type) {\r\n    // sync item set\r\n    case SUPERVISOR_ITEM_MANAGEMENT_SYNC_ITEM_BEGIN:\r\n      draft.syncedItem = {};\r\n      draft.itemsSyncSuccess = null;\r\n      draft.itemsSyncError = null;\r\n      draft.itemsSyncLoading = true;\r\n      return draft;\r\n    case SUPERVISOR_ITEM_MANAGEMENT_SYNC_ITEM_SUCCESS:\r\n      draft.syncedItem = payload.items;\r\n      draft.itemsSyncLoading = false;\r\n      draft.itemsSyncSuccess = true;\r\n      return draft;\r\n    case SUPERVISOR_ITEM_MANAGEMENT_SYNC_ITEM_FAILURE:\r\n      draft.itemsSyncLoading = false;\r\n      draft.itemsSyncError = payload.error;\r\n      return draft;\r\n    // accept request\r\n    case SUPERVISOR_ITEM_MANAGEMENT_ACCEPT_REQUEST_BEGIN:\r\n      draft.acceptRequestLoading = true;\r\n      draft.acceptRequestSuccess = null;\r\n      draft.acceptRequestError = null;\r\n      return draft;\r\n\r\n    case SUPERVISOR_ITEM_MANAGEMENT_ACCEPT_REQUEST_SUCCESS:\r\n      draft.acceptRequestLoading = false;\r\n      draft.acceptRequestSuccess = payload.success;\r\n      return draft;\r\n\r\n    case SUPERVISOR_ITEM_MANAGEMENT_ACCEPT_REQUEST_FAILURE:\r\n      draft.acceptRequestLoading = false;\r\n      draft.acceptRequestSuccess = null;\r\n      draft.acceptRequestError = payload.error;\r\n      return draft;\r\n\r\n    // reject the request\r\n    case SUPERVISOR_ITEM_MANAGEMENT_REJECT_REQUEST_BEGIN:\r\n      draft.rejectRequestLoading = true;\r\n      draft.rejectRequestSuccess = null;\r\n      draft.rejectRequestError = null;\r\n      return draft;\r\n\r\n    case SUPERVISOR_ITEM_MANAGEMENT_REJECT_REQUEST_SUCCESS:\r\n      draft.rejectRequestLoading = false;\r\n      draft.rejectRequestSuccess = payload.success;\r\n\r\n      return draft;\r\n\r\n    case SUPERVISOR_ITEM_MANAGEMENT_REJECT_REQUEST_FAILURE:\r\n      draft.rejectRequestLoading = false;\r\n      draft.acceptRequestSuccess = null;\r\n      draft.rejectRequestError = payload.error;\r\n      return draft;\r\n\r\n    default:\r\n      return draft;\r\n  }\r\n});\r\n\r\nexport { supervisorItemManagementReducer, initialState };\r\n","const initialState = {\n  lastEvent: null,\n  showOverlay: false,\n  connectionMessage: null,\n  connected: false\n};\n\nexport default initialState;\n","import produce from 'immer';\n\nimport {\n  SOCKET_START_BEGIN,\n  SOCKET_START_ON_CONNECT,\n  SOCKET_START_ON_DISCONNECT,\n  SOCKET_START_ON_DEVICE_MESSAGE\n} from '../actionTypes';\nimport initialState from '../states/socketState';\n\nconst socketReducer = produce((draft, { type, payload }) => {\n  // Draft is null initially\n  if (!draft) {\n    return initialState;\n  }\n\n  switch (type) {\n    case SOCKET_START_BEGIN:\n      draft.lastEvent = null;\n      draft.showOverlay = true;\n      draft.connected = false;\n      return draft;\n    case SOCKET_START_ON_CONNECT:\n      draft.connected = true;\n      return draft;\n    case SOCKET_START_ON_DISCONNECT:\n      draft.connected = false;\n      draft.lastEvent = null;\n      draft.showOverlay = false;\n      return draft;\n    case SOCKET_START_ON_DEVICE_MESSAGE:\n      draft.lastEvent = payload;\n      return draft;\n    default:\n      return draft;\n  }\n});\n\nexport { socketReducer, initialState };\n","import { combineReducers } from 'redux';\n\nimport { authReducer } from './AuthReducer';\nimport { adminRegistrationReducer } from './AdminRegistrationReducer';\nimport { adminAdministrationReducer } from './AdminAdministrationReducer';\nimport { adminItemManagementReducer } from './AdminItemManagementReducer';\nimport { adminLabManagementReducer } from './AdminLabManagementReducer';\nimport { supervisorItemManagementReducer } from './SupervisorItemManagementReducer';\nimport { socketReducer } from './SocketReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  adminRegistration: adminRegistrationReducer,\n  adminAdministration: adminAdministrationReducer,\n  adminLabManagement: adminLabManagementReducer,\n  adminItemManagement: adminItemManagementReducer,\n  supervisorItemManagement: supervisorItemManagementReducer,\n  socket: socketReducer\n});\n","import authInitialState from './authState';\n\nconst initialState = {\n  auth: authInitialState\n};\n\nexport default initialState;\n","import persistState from 'redux-localstorage';\nimport { createDraft, finishDraft } from 'immer';\n\nimport initialState from './redux/states';\n\n/**\n * Class which determines what parts of the state to persist\n */\nclass StorePersistance {\n  /**\n   * Loads into the draft from the current state.\n   * The draft will then be persisted on local storage.\n   * The draft will be copied using immer.\n   *\n   * Notice - draft is empty at the function start.\n   * So always be careful when setting nested parameters.\n   *\n   * Eg: `draft.a = {}` should come beofore than `draft.a.b = 9`\n   * since draft.a is undefined.\n   * @param {Object} currentState Current state object(Don't mutate this)\n   * @param {Draft} draft Draft state (Change this to persist)\n   */\n  static storeToDraft(currentState, draft) {\n    // Auth state - token and user information\n    draft.auth = {};\n    draft.auth.token = currentState.auth.token;\n    draft.auth.user = currentState.auth.user;\n    return draft;\n  }\n\n  /**\n   * Loads data from persisted storage into state.\n   *\n   * Notice: draft is the current state at the start.\n   * So, unlike in `storeToDraft`, DO NOT set sections to {}.\n   * Just set the individual values.\n   * @param {Object} persistedState Object from local storage(Don't mutate this)\n   * @param {Draft} draft Draft state (Change this to load into state)\n   */\n  static loadToDraft(persistedState, draft) {\n    // Auth state - token and user information\n    draft.auth.token = persistedState.auth.token || initialState.auth.token;\n    draft.auth.user = persistedState.auth.user || initialState.auth.token;\n    return draft;\n  }\n\n  /**\n   *  Create a slice from state to be stored in local storage.\n   * This is the driver function of storeToDraft.\n   * @param {Object} state Current state object\n   */\n  static slicerFn(state) {\n    if (!state) return null;\n    const draft = createDraft({});\n    const slicedState = StorePersistance.storeToDraft(state, draft);\n    return finishDraft(slicedState);\n  }\n\n  /**\n   * Merges current state and persisted state.\n   * Driver function of loadToDraft\n   * @param {Object} currentState Current state object\n   * @param {Object} persistedState State from local storage\n   */\n  static merge(currentState, persistedState) {\n    if (!persistedState) return currentState;\n    const draft = createDraft(initialState);\n    const mergedState = StorePersistance.loadToDraft(persistedState, draft);\n    return finishDraft(mergedState);\n  }\n\n  /**\n   * Helper function to pass into configs of storageMiddleware.\n   * It requires a callback and this produces a callback from slicerFn.\n   */\n  static slicer() {\n    return state => StorePersistance.slicerFn(state);\n  }\n}\n\n/**\n * Storage middleware configs\n */\nconst config = { key: 'state', slicer: StorePersistance.slicer, merge: StorePersistance.merge };\n\n/**\n * Storage middleware which data is persisted to.\n */\nconst storageMiddleware = persistState(null, config);\n\nexport default storageMiddleware;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport allReducers from './redux/reducers';\nimport storageMiddleware from './storage';\n\nconst middlewares = [applyMiddleware(thunk), storageMiddleware];\n\n// Activate devtools if and only if in available\n// eslint-disable-next-line no-underscore-dangle\nif (window.__REDUX_DEVTOOLS_EXTENSION__) {\n  // eslint-disable-next-line no-underscore-dangle\n  middlewares.push(window.__REDUX_DEVTOOLS_EXTENSION__());\n}\n\n// Add middlewares and reducers to create store\nconst store = createStore(allReducers, compose(...middlewares));\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { CloudinaryContext } from 'cloudinary-react';\n\nimport Router from './Router';\nimport theme from './App.theme';\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <CloudinaryContext cloudName=\"open-inventory-system\">\n        <ThemeProvider theme={theme}>\n          <Router />\n        </ThemeProvider>\n      </CloudinaryContext>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from 'react-service-worker';\n\nimport './index.css';\nimport App from './app/App';\n\nconst app = React.createElement(App);\nReactDOM.render(app, document.getElementById('root'));\n\nregisterServiceWorker().unregister();\n"],"sourceRoot":""}